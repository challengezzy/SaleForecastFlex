<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%" 
		   paddingLeft="10" paddingRight="10"
		   creationComplete="creationCompleteHandler(event)"  
		   xmlns:containers="aks.aksmx.containers.*" xmlns:controls="aks.aksmx.controls.*" 
		   xmlns:conversion="dmdd.dmddmx.com.conversion.*" xmlns:common="dmdd.dmddmx.com.common.*">
	<fx:Declarations>
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvConversionType" destination="ConversionService">
			<s:method name="getConversionTypeStat" result="resultHandler4getConversionTypeStat(event)" fault="faultHandler4getConversionTypeStat(event)">
			</s:method>			
			<s:method name="getConversionTypes" result="resultHandler4getConversionTypes(event)" fault="faultHandler4getConversionTypes(event)">
			</s:method>
			<s:method name="deleteConversionType" result="resultHandler4deleteConversionType(event)" fault="faultHandler4deleteConversionType(event)">
			</s:method>			
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("mod_conversion")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import aks.aksas.utils.UtilUi;
			
			import com.cool.assets.CoolAssetsFile;
			
			import dmdd.dmddas.common.constant.SysConst;
			import dmdd.dmddas.common.system.ClientEnvironment;
			import dmdd.dmddas.common.utils.UtilExceptionLocale;
			import dmdd.dmddas.dataaccess.bizobject.BConversionSet;
			import dmdd.dmddas.dataaccess.bizobject.BConversionType;
			import dmdd.dmddmx.com.conversion.Com_Conversion_ConversionType_AU;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			
			
			//	描述    begin
			//	描述    end
			
			//	0	输入参数    begin						
			//	0	输入参数    end
			
			//	1	输出参数    begin
			//	1	输出参数    end
			
			//	2	本地变量    begin	
			private var prvVar4queryStr:String = "";
			[Bindable]
			private var prvVar4dp4comConversionType:ArrayCollection = new ArrayCollection();
			
			private var prvVar4auWindow:Com_Conversion_ConversionType_AU = null;
			//	2	本地变量    end			
			
			//	3	公共方法    begin			
			//	3	公共方法    end		
			
			//	4	初始化方法    begin	
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				
			}			
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin		
			
			private function onQuery():void
			{
				prvVar4queryStr = prvFun4generateSqlRestriction();
				if(this.qcondCheckBoxPageQuery.selected ==  true)//page stat
				{
					UtilUi.pubFun4PopWaitWindow( this );
					this.srvConversionType.getConversionTypeStat(prvVar4queryStr);
				}
				else
				{
					//	不分页查询
					UtilUi.pubFun4PopWaitWindow( this );
					this.srvConversionType.getConversionTypes( this.prvVar4queryStr, -1, ClientEnvironment.getSysParamPageSize() );
				}
				
			}	
			
			//	分页查询相关		begin
			private function faultHandler4getConversionTypeStat(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('main','alt_title_warn') );
			}	
			
			private function resultHandler4getConversionTypeStat(event:ResultEvent):void 
			{
				//	初始化数据表格控制板
				var rstSize:Number = Number(event.result);
				this.comAksDataGridControlBar.pubFun4setResultParams( true, rstSize, ClientEnvironment.getSysParamPageSize() );
				
				//	去执行第一页查询
				this.srvConversionType.getConversionTypes( this.prvVar4queryStr, 1, ClientEnvironment.getSysParamPageSize() );
			}
			
			private function prvFun4pageQueryConversionTypes( _pageIndex:int ):void
			{
				UtilUi.pubFun4PopWaitWindow( this );
				this.srvConversionType.getConversionTypes( this.prvVar4queryStr, _pageIndex, ClientEnvironment.getSysParamPageSize() );					
			}			
			//	分页查询相关		end	
			
			private function faultHandler4getConversionTypes(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('main','alt_title_warn') );
			}	
			
			private function resultHandler4getConversionTypes(event:ResultEvent):void 
			{
				this.prvVar4dp4comConversionType = ArrayCollection(event.result);
				
				if( this.qcondCheckBoxPageQuery.selected == false )
				{
					//	不是分页查询，需要根据查询结果初始化数据表格控制板
					this.comAksDataGridControlBar.pubFun4setResultParams( false, this.prvVar4dp4comConversionType.length, this.prvVar4dp4comConversionType.length );
				}
				
				UtilUi.pubFun4RemoveWaitWindow();
			}
			private function faultHandler4deleteConversionType(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('main','alt_title_warn') );
			}	
			
			private function resultHandler4deleteConversionType(event:ResultEvent):void 
			{				
				var alert_title_hint:String = resourceManager.getString('mod_conversion','alert_title_hint');
				var alert_msg:String = null;
	
				alert_msg = resourceManager.getString('mod_conversion','alert_msg_succeed');
				Alert.show(alert_msg, alert_title_hint);
				this.prvVar4dp4comConversionType.removeItemAt( this.comAdgConversionType.selectedIndex );					
						
			}	
			
			private function onNew():void
			{
				if( this.prvVar4auWindow == null )
				{
					this.prvVar4auWindow = Com_Conversion_ConversionType_AU(PopUpManager.createPopUp(this, Com_Conversion_ConversionType_AU, true));
					this.prvVar4auWindow.pubFun4setParamIn4closeCallback( this, callbackFunction4auWinClose );
				}
				else
				{
					PopUpManager.addPopUp( this.prvVar4auWindow, this, true );
				}	
				
				this.prvVar4auWindow.title = resourceManager.getString('mod_conversion','autitle_new');
				var conversionType:BConversionType = new BConversionType();
				conversionType.proportion = 0;
				this.prvVar4auWindow.pubFun4setConversionType(conversionType,UtilUi.AUWINDOW_USE_NEW);
			}
			
			private function onUpd():void
			{
				if(this.comAdgConversionType.selectedIndex<0)
				{
					return ;
				}
				
				if( this.prvVar4auWindow == null )
				{
					this.prvVar4auWindow = Com_Conversion_ConversionType_AU(PopUpManager.createPopUp(this, Com_Conversion_ConversionType_AU, true));
					this.prvVar4auWindow.pubFun4setParamIn4closeCallback( this, callbackFunction4auWinClose );
				}
				else
				{
					PopUpManager.addPopUp( this.prvVar4auWindow, this, true );
				}	
				
				this.prvVar4auWindow.title = resourceManager.getString('mod_conversion','autitle_new');
				var conversionType:BConversionType = BConversionType(this.comAdgConversionType.selectedItem);
				this.prvVar4auWindow.pubFun4setConversionType(conversionType,UtilUi.AUWINDOW_USE_UPD);
			}
			
			private function onDel():void
			{
				if(this.comAdgConversionType.selectedIndex<0)
				{
					return ;
				}
				var conversionType:BConversionType = BConversionType(this.comAdgConversionType.selectedItem);
				this.srvConversionType.deleteConversionType(conversionType);
			}
			
			private function callbackFunction4auWinClose():void
			{
				if( this.prvVar4auWindow.pubFun4getParamOut4winCloseWay() == UtilUi.WINDOW_CLOSEWAY_OK )
				{
					var conversionType_:BConversionType = this.prvVar4auWindow.pubFun4getConversionType();
					if( this.prvVar4auWindow.pubFun4getParamIo4winUse() == UtilUi.AUWINDOW_USE_NEW )
					{
						if(this.prvVar4dp4comConversionType ==null)
						{
							this.prvVar4dp4comConversionType = new ArrayCollection();
						}
						this.prvVar4dp4comConversionType.addItemAt(conversionType_,0);
					}
					else if( this.prvVar4auWindow.pubFun4getParamIo4winUse() == UtilUi.AUWINDOW_USE_UPD )
					{
						this.prvVar4dp4comConversionType.setItemAt( conversionType_, this.comAdgConversionType.selectedIndex );
					}
					
				}
				//this.prvVar4auWindow = null;														
			}	
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
			private function prvFun4generateSqlRestriction():String
			{
				var qcondCode:String = StringUtil.trim( this.qcondTxtCode.text );
				var qcondCodeLike:Boolean = this.qcondCheckBoxCodeLike.selected;
				var qcondName:String = StringUtil.trim( this.qcondTxtName.text );
				var qcondNameLike:Boolean = this.qcondCheckBoxNameLike.selected;
				
				var sqlRestriction:String = SysConst.SQL_STR_TRUE;
				if( qcondCode != "" )
				{
					if( qcondCodeLike == true )
					{
						sqlRestriction = sqlRestriction + " and (code like '%" + qcondCode + "%')";
					}
					else
					{
						sqlRestriction = sqlRestriction + " and (code = '" + qcondCode + "')";
					}
				}
				
				if( qcondName != "" )
				{
					if( qcondNameLike == true )
					{
						sqlRestriction = sqlRestriction + " and (name like '%" + qcondName + "%')";
					}
					else
					{
						sqlRestriction = sqlRestriction + " and (name = '" + qcondName + "')";
					}
				}
				
				if( sqlRestriction == SysConst.SQL_STR_TRUE )
				{
					sqlRestriction = null;
				}
				
				return sqlRestriction;
			}
			private function prvFun4getEnabled4BtnManage( _selectedItem:Object ):Boolean
			{
				// todo
				if( _selectedItem == null )
				{
					return false;
				}
				return true;
			}
			//	6	本地方法   end	
			
		]]>
	</fx:Script>
	
	<s:BorderContainer  width="100%" height="40">
		<s:layout>
			<s:HorizontalLayout paddingLeft="10" paddingRight="10" paddingTop="5" verticalAlign="middle" horizontalAlign="left"/>
		</s:layout>
		<mx:Grid width="85%">
			<mx:GridRow width="100%" height="100%" verticalAlign="middle">
				<mx:GridItem width="25%" height="100%" verticalAlign="middle">
					<s:Label text="{resourceManager.getString('mod_conversion','code')}"/>
				</mx:GridItem>
				<mx:GridItem width="100%" height="100%" verticalAlign="middle">
					<s:TextInput id="qcondTxtCode" width="100%"/>
					<s:CheckBox label="{resourceManager.getString('mod_conversion','chkbox_like')}" id="qcondCheckBoxCodeLike"/>
				</mx:GridItem>
				<mx:GridItem width="25%" height="100%" verticalAlign="middle">
				</mx:GridItem>
				<mx:GridItem width="25%" height="100%" verticalAlign="middle">
					<s:Label text="{resourceManager.getString('mod_conversion','name')}"/>
				</mx:GridItem>
				<mx:GridItem width="100%" height="100%" verticalAlign="middle">
					<s:TextInput id="qcondTxtName" width="100%"/>
					<s:CheckBox label="{resourceManager.getString('mod_conversion','chkbox_like')}" id="qcondCheckBoxNameLike"/>
				</mx:GridItem>
				<mx:GridItem width="25%" height="100%" verticalAlign="middle">
				</mx:GridItem>
				<mx:GridItem width="25%" height="100%" verticalAlign="middle">
					<s:CheckBox label="{resourceManager.getString('mod_conversion','chkbox_pagequery')}" id="qcondCheckBoxPageQuery" selected="true"/>
					<s:Button label="{resourceManager.getString('mod_conversion','btn_query')}" click="onQuery()"/>
				</mx:GridItem>
			</mx:GridRow>			
		</mx:Grid>		
	</s:BorderContainer>
	
	<common:LabelBoundary labelText="{resourceManager.getString('mod_conversion','unitgroup')}" />
	<mx:VBox width="100%" height="100%">
		<containers:AksControlBar>
			<s:Button label="{resourceManager.getString('mod_conversion','btn_new')}" click="onNew()" icon="{CoolAssetsFile.newIcon}"/>
			<s:Button label="{resourceManager.getString('mod_conversion','btn_upd')}" icon="{CoolAssetsFile.editIcon}"
					  enabled="{this.prvFun4getEnabled4BtnManage(this.comAdgConversionType.selectedItem)}" click="onUpd()"/>
			<s:Button label="{resourceManager.getString('mod_conversion','btn_del')}" icon="{CoolAssetsFile.deleteIcon}"
					  enabled="{this.prvFun4getEnabled4BtnManage(this.comAdgConversionType.selectedItem)}" click="onDel()"/>
		</containers:AksControlBar>
					
		<conversion:Com_Conversion_ConversionType_AdvancedDataGrid width="100%" height="100%" id="comAdgConversionType" 
																   dataProvider="{this.prvVar4dp4comConversionType}"/>
		<controls:AksDataGridControlBar id="comAksDataGridControlBar" width="100%" 
										paramIn4callback4thisObject="{this}" paramIn4callback4queryFunction="{this.prvFun4pageQueryConversionTypes}" 
										paramIn4dataGrid="{this.comAdgConversionType}">
		</controls:AksDataGridControlBar>
	</mx:VBox>
</mx:Module>
