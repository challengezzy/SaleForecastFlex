<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%" paddingLeft="10" paddingRight="10"
		   creationComplete="creationCompleteHandler(event)" 
		   xmlns:common="dmdd.dmddmx.com.common.*"
		   xmlns:containers="aks.aksmx.containers.*" xmlns:uirowdata="dmdd.dmddmx.com.uirowdata.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvInvReport" destination="UIInvReportService">	
			<s:method name="queryRiskReportSummary" result="resultHandler4queryData(event)" fault="faultHandler4queryData(event)">
			</s:method>							  
		</s:RemoteObject>	
	</fx:Declarations>

	
	<fx:Script>
		<![CDATA[
			import aks.aksas.utils.UtilUi;
			
			import com.cool.assets.CoolAssetsFile;
			import com.cool.utils.DataListExportUtil;
			
			import dmdd.dmddas.common.constant.BizConst;
			import dmdd.dmddas.common.system.ClientEnvironment;
			import dmdd.dmddas.common.utils.UtilExceptionLocale;
			import dmdd.dmddas.common.utils.UtilPeriod;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.resources.ResourceManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			//	2	本地变量    begin	
			[Bindable]
			private var dgArrayData:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var achieveRate:Number = 100;
			
			//当前期间
			[Bindable]
			private var curPeriod:int = ClientEnvironment.getSysPeriod().compilePeriod;
			
			//	2	本地变量    end			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				//初始化的值
				inputAchieveRate.text = "100";
			}
			
			private function onQuery():void
			{
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = null;
							
				if( inputPeriod.text == null || inputPeriod.text ==""){
					Alert.show( "Period is Null", alert_title_hint );	
					return;												
				}
				
				if( inputAchieveRate.text == null || inputAchieveRate.text ==""){
					Alert.show( "Achieve Rate is Null", alert_title_hint );	
					return;												
				}
				
				inputSummaryQuantity.text = "";
				inputSummaryMoney.text = "";
				
				var queryCond:Object = new Object();
				queryCond["period"] = inputPeriod.text;
				queryCond["achieveRate"] = inputAchieveRate.text;
				
				UtilUi.pubFun4PopWaitWindow( this );
				srvInvReport.queryRiskReportSummary( queryCond );
			}	
			
			private function faultHandler4queryData(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( event.fault.faultDetail );
			}
			
			private function resultHandler4queryData(event:ResultEvent):void 
			{
				var result:Object = event.result;
				dgArrayData = result["dataList"] as ArrayCollection;
				
				labelDataSize.text = dgArrayData.length +"";
				
				inputSummaryQuantity.text = result["summaryQuantity"];
				inputSummaryMoney.text = result["summaryMoney"];
				
				UtilUi.pubFun4RemoveWaitWindow();
			}		
			
			private function onExport():void
			{
				var csvstr:String = DataListExportUtil.generateCsvData(datagrid);
				System.setClipboard(csvstr);
			}
			
			//	6	本地方法   end				
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" verticalAlign="middle">
		<s:HGroup verticalAlign="middle">
			<s:Label text="{resourceManager.getString('label','period')}" width="85" textAlign="right" />
			<s:TextInput id="inputPeriod" text="{curPeriod}" editable="true" width="85"/>
			
			<s:Spacer width="20" />
			<s:Label text="{resourceManager.getString('label','achieveRate')}" textAlign="right" />
			<s:TextInput id="inputAchieveRate" restrict="0-9" maxChars="3" editable="true" width="85"/>
			
			<s:Spacer width="20" />
			<s:Label text="{resourceManager.getString('label','overStockSummaryQuantity')}" textAlign="right"/>
			<s:TextInput id="inputSummaryQuantity" editable="true" width="85"/>
			<s:Spacer width="20" />
			<s:Label text="{resourceManager.getString('label','overStockSummaryMoney')}" textAlign="right"/>
			<s:TextInput id="inputSummaryMoney" editable="true" width="85"/>
			
			<s:Spacer width="20"/>
			<s:Button label="{resourceManager.getString('button','query')}" icon="{CoolAssetsFile.queryIcon}" click="onQuery()" id="btnSave"/> 
			<s:Button label="{resourceManager.getString('button','export')}" icon="{CoolAssetsFile.doctableIcon}" click="onExport()" id="btnExport"/>
		</s:HGroup>
	</s:VGroup>
	
	<mx:DataGrid id="datagrid" dataProvider="{dgArrayData}" width="100%" height="100%">
		<mx:columns>
			<mx:DataGridColumn headerText="{ResourceManager.getInstance().getString('label','proCode')}" dataField="PROCODE" width="100" />
			<mx:DataGridColumn headerText="{ResourceManager.getInstance().getString('label','proName')}" dataField="PRONAME" width="220"/>
			<mx:DataGridColumn headerText="{ResourceManager.getInstance().getString('label','shelfLife')}" dataField="SHELFLIFE" width="80"/>
			<mx:DataGridColumn headerText="{ResourceManager.getInstance().getString('label','standardPrice')}" dataField="STANDARDPRICE" width="120"/>
			<mx:DataGridColumn headerText="{ResourceManager.getInstance().getString('label','quantity')}" dataField="QUANTITY" width="120"/>
			<mx:DataGridColumn headerText="{ResourceManager.getInstance().getString('label','money')}" dataField="MONEY" width="140"/>
		</mx:columns>
	</mx:DataGrid>
	<s:HGroup width="100%" paddingRight="10">
		<s:Spacer width="100%" />
		<s:Label text="{resourceManager.getString('aks','recordnum')}"/>
		<s:Label id="labelDataSize"/>
	</s:HGroup>
</mx:Module>
