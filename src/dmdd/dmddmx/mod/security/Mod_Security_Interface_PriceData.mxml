<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"  layout="vertical" width="100%" height="100%" creationComplete="creationCompleteHandler(event)"
		   paddingBottom="5" paddingTop="5" paddingLeft="10" paddingRight="10"
		   xmlns:containers="aks.aksmx.containers.*" xmlns:price="dmdd.dmddmx.com.price.*" xmlns:unit="dmdd.dmddmx.com.unit.*" xmlns:common="dmdd.dmddmx.com.common.*" xmlns:buttons="com.cool.buttons.*"
		   >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvPrice" destination="PriceService">	
			<s:method name="savePriceDatas4ImportUI" result="resultHandler4savePriceDatas4ImportUI(event)" fault="faultHandler4savePriceDatas4ImportUI(event)">
			</s:method>							  
		</s:RemoteObject>
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="ifc" destination="InterfaceService">	
			<s:method name="getInterFaceValues4PriceData" result="resultHandler4getInterFaceValues4PriceData(event)" fault="faultHandler4getInterFaceValues4PriceData(event)">
			</s:method>							  
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("mod_security_interface_pricedata")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import aks.aksas.utils.UtilArrayCollection;
			import aks.aksas.utils.UtilUi;
			
			import dmdd.dmddas.common.constant.BizConst;
			import dmdd.dmddas.common.constant.SysConst;
			import dmdd.dmddas.common.system.ClientEnvironment;
			import dmdd.dmddas.common.utils.UtilExceptionLocale;
			import dmdd.dmddas.common.utils.UtilPeriod;
			import dmdd.dmddas.dataaccess.aidobject.ABImPriceData;
			import dmdd.dmddas.dataaccess.bizobject.BBizData;
			import dmdd.dmddas.dataaccess.bizobject.BPriceData;
			import dmdd.dmddas.dataaccess.bizobject.BSysDictionaryItem;
			import dmdd.dmddas.dataaccess.bizobject.BUnit;
			import dmdd.dmddas.dataaccess.bizobject.BUnitGroup;
			
			import mx.collections.ArrayCollection;
			import mx.collections.IViewCursor;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			
			
			//	描述    begin
			//	描述    end
			
			//	0	输入参数    begin						
			//	0	输入参数    end
			
			//	1	输出参数    begin
			//	1	输出参数    end
			
			//	2	本地变量    begin	
			[Bindable]
			private var prvVar4dp4comAdgImPriceData:ArrayCollection = new ArrayCollection();
			
			private var prvVar4unit:BUnit = null;
			
			private var prvVar4arrFailedRecord:ArrayCollection = new ArrayCollection();
			//	2	本地变量    end			
			
			//	3	公共方法    begin			
			//	3	公共方法    end		
			
			//	4	初始化方法    begin	
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				
			}			
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin
			private function onChange4comboBoxUnit():void
			{
				var selectedUnit:BUnit = BUnit(this.comboBoxUnit.selectedItem)
				var i:int;
				var imPriceData:ABImPriceData = null;
				if( selectedUnit != null && this.prvVar4unit != null && selectedUnit.id != this.prvVar4unit.id )
				{
					if( this.prvVar4dp4comAdgImPriceData != null )
					{
						for( i=0; i<this.prvVar4dp4comAdgImPriceData.length; i=i+1 )
						{
							imPriceData = ABImPriceData(this.prvVar4dp4comAdgImPriceData.getItemAt(i));
							imPriceData.exchangeUnit( this.prvVar4unit.exchangeRate, selectedUnit.exchangeRate );
						}
					}	
				}
				
				this.prvVar4unit = selectedUnit;				
			}
			
			private function onClear():void
			{
				this.prvVar4dp4comAdgImPriceData = new ArrayCollection();
				this.comAdgImPriceData.columnImportResult.visible = false;
				this.btnExport.enabled = false;
			}
			
			private function onLoad():void
			{
				var date:String = text_date.text;
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String="";
				if(date=="")
				{
					
					alert_msg  = resourceManager.getString('alert','alert_msg_inputdate12');
					Alert.show( alert_msg, alert_title_hint );	
					return;											
				}
				else
				{
					if(date.length!=6)
					{
						alert_msg  = resourceManager.getString('alert','alert_msg_inputdate_err12');
						Alert.show( alert_msg, alert_title_hint );	
						return;
					}					
					var ma:RegExp = new RegExp("^[0-9]+$");
					if(!ma.test(date))
					{
						alert_msg  = resourceManager.getString('alert','alert_msg_inputdate_err12');
						Alert.show( alert_msg, alert_title_hint );	
						return;
					}
				}
				var alert_msg_waitforgetdata:String = resourceManager.getString('alert','alert_msg_waitforgetdata12');
				
				Alert.show( alert_msg_waitforgetdata, alert_title_hint, Alert.OK | Alert.CANCEL, this, alert_msg_waitforgetdataConfirmHandler, null, Alert.OK );
				
			}
			
			private function alert_msg_waitforgetdataConfirmHandler(event:CloseEvent):void
			{
				if( event.detail == Alert.OK )
				{
					//	已经确认过，执行操作
					UtilUi.pubFun4PopWaitWindow(this);
					ifc.getInterFaceValues4PriceData("ZSD0003",text_date.text);
				}
			}
			private function faultHandler4getInterFaceValues4PriceData(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('alert','alt_title_warn') );
			}
			
			private function resultHandler4getInterFaceValues4PriceData(event:ResultEvent):void 
			{	
				UtilUi.pubFun4RemoveWaitWindow();
				var arr4pricedatas:ArrayCollection = event.result as ArrayCollection;
				if(arr4pricedatas==null)
					return ;
				
				//计算periodBegin和periodEnd
				var nowdate:Date = new Date();
				var year:Number = nowdate.fullYear;
				var month:Number = nowdate.month+1;
				var total:Number = year*100+month;
				var periodNum:int;
				var periodEnd:int = total;
				var periodBegin:int = Number(text_date.text);
				if(periodBegin>periodEnd)//如果是查询的未来的，则end=begin
				{
					periodEnd =periodBegin;
				}
				
				var periodDiff:int = UtilPeriod.getPeriodDifference(periodBegin, periodEnd);
				
				this.comAdgImPriceData.pubFun4setParamIo4periodBeginEnd( periodBegin, periodEnd, true );
				
				var newImPriceData:ABImPriceData = null;
				var price:Number = 0;
				prvVar4dp4comAdgImPriceData = new ArrayCollection();
				for each(var pricedata:Object in arr4pricedatas)
				{
					
					newImPriceData = new ABImPriceData();
					newImPriceData.periodBegin = periodBegin;
					newImPriceData.periodEnd = periodEnd;
					newImPriceData.importResult = null;
					
					
					newImPriceData.productCode = pricedata.MATNR;
					newImPriceData.organizationCode = pricedata.KUNNR;
					
					var key:Number ;
					var periodIdx:int ;
					for( periodIdx=0; periodIdx < periodDiff+1; periodIdx++ )
					{
						key= periodBegin+periodIdx;
						
						if(pricedata[key] == null)
						{
							price=0;
						}
						else
						{
							price = Number(pricedata[key] );
						}
						newImPriceData.pubFun4setPeriodDataValue( periodIdx, price);	
					}
				
					this.prvVar4dp4comAdgImPriceData.addItem( newImPriceData );
				}
			}
			
			private function onSave():void
			{
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = null;  
				
				var unitGroup:BUnitGroup = this.comUnitGroupField.paramIo4selectedUnitGroup;
				if( unitGroup == null )
				{
					alert_msg = resourceManager.getString('alert','alert_msg_nounitgroup12');
					Alert.show( alert_msg, alert_title_hint );	
					return;						
				}
				
				var selectedUnit:BUnit = BUnit(this.comboBoxUnit.selectedItem);
				if( selectedUnit == null )
				{
					alert_msg = resourceManager.getString('alert','alert_msg_nounit12');
					Alert.show( alert_msg, alert_title_hint );	
					return;						
				}				
				
				if( this.prvVar4dp4comAdgImPriceData.length <= 0 )
				{
					alert_msg = resourceManager.getString('alert','alert_msg_nodatatosave12');
					Alert.show( alert_msg, alert_title_hint );	
					return;												
				}
				
				UtilUi.pubFun4PopWaitWindow( this );
				
				//	传递到服务器的数据应该是以基准单位计数的	begin
				var arrImPriceData4save:ArrayCollection = new ArrayCollection();
				var i:int;
				var imPriceData:ABImPriceData = null;
				var imPriceData_new:ABImPriceData = null;
				for( i=0; i<this.prvVar4dp4comAdgImPriceData.length; i=i+1 )
				{
					imPriceData = ABImPriceData(this.prvVar4dp4comAdgImPriceData.getItemAt(i));
					imPriceData_new = new ABImPriceData();
					imPriceData_new.copyDeep( imPriceData );
					if( selectedUnit.isBase == BizConst.GLOBAL_YESNO_NO )
					{
						imPriceData_new.exchangeUnit( selectedUnit.exchangeRate, 1 );
					}	
					arrImPriceData4save.addItem( imPriceData_new );
				}									
				//	传递到服务器的数据应该是以基准单位计数的	end
				
				this.srvPrice.savePriceDatas4ImportUI( unitGroup, arrImPriceData4save ,BizConst.PRICE_IMPORT_BOTHPRICE);
			}	
			
			private function faultHandler4savePriceDatas4ImportUI(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('alert','alt_title_warn') );
			}
			
			private function resultHandler4savePriceDatas4ImportUI(event:ResultEvent):void 
			{
				
				this.prvVar4arrFailedRecord = new ArrayCollection();
				
				var totalNum:int = 0; 
				var failNum:int = 0;
				var i:int;
				var rstImPriceData:ABImPriceData = null;
				totalNum = prvVar4dp4comAdgImPriceData.length;
				
				this.prvVar4dp4comAdgImPriceData = ArrayCollection(event.result);
				if( this.prvVar4dp4comAdgImPriceData != null )
				{
					for( i=0; i<this.prvVar4dp4comAdgImPriceData.length; i=i+1 )
					{
						rstImPriceData = ABImPriceData(this.prvVar4dp4comAdgImPriceData.getItemAt(i));
						if( rstImPriceData.importResult != BizConst.IMPORT_RESULT_SUCCESS )
						{
							rstImPriceData.importResult = UtilExceptionLocale.getExceptionMessageLocaleByCauseMessage( rstImPriceData.importResult );
							
							this.prvVar4arrFailedRecord.addItem( rstImPriceData );
						}
					}
					failNum = this.prvVar4arrFailedRecord.length;
				}
				
				UtilUi.pubFun4RemoveWaitWindow();
				this.comAdgImPriceData.columnImportResult.visible = true;
				
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = null;  	
				
				alert_msg = resourceManager.getString('alert','alert_msg_totalnum12');
				alert_msg = alert_msg + totalNum + "\n";
				alert_msg = alert_msg + resourceManager.getString('alert','alert_msg_failnum12');
				alert_msg = alert_msg + failNum + "\n";
				
				Alert.show( alert_msg, alert_title_hint );
				
				if( failNum > 0 )
				{
					this.btnExport.enabled = true;
				}
				else
				{
					this.btnExport.enabled = false;
				}	
			}		
			private function onExport():void
			{
				//	只导出错误的，所以先把组件显示的内容换成错误的，处理完后再换回来	begin
				var arrdp4comAdgImPriceData_bak:ArrayCollection = new ArrayCollection();
				arrdp4comAdgImPriceData_bak.addAll( this.prvVar4dp4comAdgImPriceData );
				
				this.prvVar4dp4comAdgImPriceData.removeAll();
				this.prvVar4dp4comAdgImPriceData.addAll( this.prvVar4arrFailedRecord );
				
				var TSVString:String = this.exportCSV( this.comAdgImPriceData ) ;
				
				this.prvVar4dp4comAdgImPriceData.removeAll();
				this.prvVar4dp4comAdgImPriceData.addAll( arrdp4comAdgImPriceData_bak );
				//	只导出错误的，所以先把组件显示的内容换成错误的，处理完后再换回来	end
				
				// Copy the TSV string to the clipboard
				System.setClipboard(TSVString);					
			}
			
			private function onPercent():void
			{				
				var percentValue:Number = Number(this.text_value.text);
				if( this.checkPercentValue(percentValue) == false )
				{
					return;	
				}
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg_waitforgetdata:String = resourceManager.getString('alert','alert_msg_handpercent12');
				
				Alert.show( alert_msg_waitforgetdata+this.text_value.text, alert_title_hint, Alert.OK | Alert.CANCEL, this, alert_msg_waitforgetdataConfirmHandler1, null, Alert.OK );
				
			}
			
			private function alert_msg_waitforgetdataConfirmHandler1(event:CloseEvent):void
			{
				if( event.detail == Alert.OK )
				{
					//	已经确认过，执行操作
					UtilUi.pubFun4PopWaitWindow(this);
					var priceData:BPriceData = null;
					var percentValue:Number = Number(this.text_value.text);
					var i:int;
					var newImPriceData:ABImPriceData =null;
					var price:Number =0;
					for each(newImPriceData in this.prvVar4dp4comAdgImPriceData)
					{
						var periodDiff:int = UtilPeriod.getPeriodDifference( newImPriceData.periodBegin, newImPriceData.periodEnd );
						if( periodDiff == SysConst.PERIOD_DIFF_NULL )
						{
							return;
						}
						var value_byBase:Number;
						for( i=0; i<= periodDiff; i=i+1 )
						{
							price=percentValue*newImPriceData.pubFun4getPeriodDataValue(i);
							price = Number(price.toFixed(4));
							newImPriceData.pubFun4setPeriodDataValue( i,price);
						}
					}
					UtilUi.pubFun4RemoveWaitWindow();
				}
			}
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
			private function exportCSV(dg:DataGrid, csvSeparator:String="\t", lineSeparator:String="\n"):String
			{
				var data:String = "";
				var columns:Array = dg.columns;
				var columnCount:int = columns.length;
				var column:DataGridColumn;
				var header:String = "";
				var headerGenerated:Boolean = false;
				var dataProvider:Object = dg.dataProvider;
				var rowCount:int = dataProvider.length;
				var dp:Object = null;
				
				var cursor:IViewCursor = dataProvider.createCursor ();
				var j:int = 0;
				
				//loop through rows
				while (!cursor.afterLast)
				{
					var obj:Object = null;
					obj = cursor.current;
					
					//loop through all columns for the row
					for(var k:int = 0; k < columnCount; k++)
					{
						column = columns[k];
						//Exclude column data which is invisible (hidden)
						if(!column.visible)
						{
							continue;
						}
						
						data += "\""+ column.itemToLabel(obj)+ "\"";
						if(k < (columnCount -1))
						{
							data += csvSeparator;
						}
						//generate header of CSV, only if it's not genereted yet
						if (!headerGenerated)
						{
							header += "\"" + column.headerText + "\"";
							if (k < columnCount - 1)
							{
								header += csvSeparator;
							}
						}
						
						
					}
					
					headerGenerated = true;
					if (j < (rowCount - 1))
					{
						data += lineSeparator;
					}
					j++;
					cursor.moveNext ();
				}
				
				//set references to null:
				dataProvider = null;
				columns = null;
				column = null;
				
				return (header + "\r\n" + data);
			} 
			
			
			private function checkPercentValue( _percentValue:Number ):Boolean
			{
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');	
				var alert_msg:String = resourceManager.getString('alert','alert_msg_inputerr12');				
				
				if( isNaN(_percentValue) )
				{
					Alert.show(alert_msg, alert_title_hint);
					return false;							
				}
				return true;
			}
				
			//	6	本地方法   end	
			
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%">
		<common:LabelBoundary labelText="{resourceManager.getString('menu','priceData')}" />
		<containers:AksControlBar>
			<s:Label text="{resourceManager.getString('note','unitGroup')}"/>
			<unit:Com_Unit_UnitGroup_Field id="comUnitGroupField" width="100%">
			</unit:Com_Unit_UnitGroup_Field>
			<s:Label text="{resourceManager.getString('note','unit')}"/>
			<s:ComboBox id="comboBoxUnit" dataProvider="{this.comUnitGroupField.paramIo4selectedUnitGroup.units}" selectedIndex="0" change="onChange4comboBoxUnit()"/>
			<s:Label  text="{resourceManager.getString('note','readPeriodFormat_YYYYMM')}" />
			<s:TextInput id="text_date" maxChars="6" />
			<s:Button label="{resourceManager.getString('button','loadData')}" click="onLoad()" id="btnLoad"/> 
			<mx:Spacer width="400"/>
		</containers:AksControlBar>
		<containers:AksControlBar>

			<buttons:ButtonSave click="onSave()" id="btnSave" /> 
			<buttons:ButtonClear click="onClear()" /> 
			<buttons:ButtonRemove click="UtilArrayCollection.removeSelectedItems(this.prvVar4dp4comAdgImPriceData,this.comAdgImPriceData.selectedItems)"/>
			<buttons:ButtonExpErrorRecord click="onExport()" id="btnExport" enabled="false"/>
			<s:Button label="{resourceManager.getString('button','multiply')}" click="onPercent()" />
			<s:TextInput id="text_value" />
		</containers:AksControlBar>
		<price:Com_Price_ImPriceData_AdvancedDataGrid id="comAdgImPriceData" dataProvider="{this.prvVar4dp4comAdgImPriceData}" width="100%" height="100%" editable="true" allowMultipleSelection="true"/>
	</s:VGroup>
</mx:Module>
