<?xml version="1.0" encoding="utf-8"?>
<mx:DataGrid xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx"
					 creationComplete="creationCompleteHandler(event)"   styleName="dg1" xmlns:datagrid="com.cool.components.datagrid.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import dmdd.dmddas.common.utils.UtilDataGridColumnLabelFunction;
			import dmdd.dmddas.dataaccess.bizobject.BPriceData;
			
			import mx.events.FlexEvent;
			import mx.resources.ResourceManager;
			
			//	描述    begin
			//	描述    end
			
			//	0	输入参数    begin			
			[Bindable]
			public var paramIn4editable:Boolean = true;
			
			[Bindable]
			public var paramIn4visible4ProductCode:Boolean = false;			
			[Bindable]
			public var paramIn4visible4ProductName:Boolean = false;			
			[Bindable]
			public var paramIn4visible4OrganizationCode:Boolean = false;			
			[Bindable]
			public var paramIn4visible4OrganizationName:Boolean = false;				
			//	0	输入参数    end
			
			//	1	输出参数    begin
			//	1	输出参数    end
			
			//	2	本地变量    begin		
			//	2	本地变量    end			
			
			//	3	公共方法    begin	
			//	3	公共方法    end		
			
			//	4	初始化方法    begin	
			protected function creationCompleteHandler(event:FlexEvent):void
			{				
			}			
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
			private function sortCompareFunction4ProductCode(obj1:BPriceData, obj2:BPriceData):int
			{
				if( obj1 == null )
				{
					return -1;
				}
				
				if( obj2 == null )
				{
					return 1;
				}
				
				var rstCompare:int = obj1.product.code.localeCompare( obj2.product.code )
				if( rstCompare < 0 )
				{
					return -1;
				}
				else if( rstCompare > 0 )
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}			
			
			private function sortCompareFunction4ProductName(obj1:BPriceData, obj2:BPriceData):int
			{
				if( obj1 == null )
				{
					return -1;
				}
				
				if( obj2 == null )
				{
					return 1;
				}
				
				var rstCompare:int = obj1.product.name.localeCompare( obj2.product.name )
				if( rstCompare < 0 )
				{
					return -1;
				}
				else if( rstCompare > 0 )
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}		
					
			
			private function sortCompareFunction4OrganizationCode(obj1:BPriceData, obj2:BPriceData):int
			{
				if( obj1 == null )
				{
					return -1;
				}
				
				if( obj2 == null )
				{
					return 1;
				}
				
				var rstCompare:int = obj1.organization.code.localeCompare( obj2.organization.code )
				if( rstCompare < 0 )
				{
					return -1;
				}
				else if( rstCompare > 0 )
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}			
			
			private function sortCompareFunction4OrganizationName(obj1:BPriceData, obj2:BPriceData):int
			{
				if( obj1 == null )
				{
					return -1;
				}
				
				if( obj2 == null )
				{
					return 1;
				}
				
				var rstCompare:int = obj1.organization.name.localeCompare( obj2.organization.name )
				if( rstCompare < 0 )
				{
					return -1;
				}
				else if( rstCompare > 0 )
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}		
					
			//	6	本地方法   end					



		]]>
	</fx:Script>	
	<mx:columns>
		<datagrid:CheckBoxColumn id="columnIsChecked"
								 itemRenderer="com.cool.components.datagrid.CheckBoxItemRenderer" 
								 headerRenderer="com.cool.components.datagrid.CheckBoxHeaderRenderer" editable="true"
								 width="25" dataField="isChecked" rendererIsEditor="true"  editorDataField="selected" />
		<mx:DataGridColumn id="columnProductCode"					headerText="{ResourceManager.getInstance().getString('label','proCode')}" 				dataField="product" 					labelFunction="UtilDataGridColumnLabelFunction.getProductCode"					editable="false" width="130"	visible="{this.paramIn4visible4ProductCode}"    			sortCompareFunction="sortCompareFunction4ProductCode"/>
		<mx:DataGridColumn id="columnProductName"					headerText="{ResourceManager.getInstance().getString('label','proName')}" 				dataField="product" 					labelFunction="UtilDataGridColumnLabelFunction.getProductName"					editable="false" width="130"  	visible="{this.paramIn4visible4ProductName}" 				sortCompareFunction="sortCompareFunction4ProductName"/>
		<mx:DataGridColumn id="columnOrganizationCode"				headerText="{ResourceManager.getInstance().getString('label','orgCode')}" 			dataField="organization" 				labelFunction="UtilDataGridColumnLabelFunction.getOrganizationCode"				editable="false" width="130"  	visible="{this.paramIn4visible4OrganizationCode}"			sortCompareFunction="sortCompareFunction4OrganizationCode"/>
		<mx:DataGridColumn id="columnOrganizationName"				headerText="{ResourceManager.getInstance().getString('label','orgName')}" 			dataField="organization" 				labelFunction="UtilDataGridColumnLabelFunction.getOrganizationName"				editable="false" width="130" 	visible="{this.paramIn4visible4OrganizationName}"			sortCompareFunction="sortCompareFunction4OrganizationName"/>
		<mx:DataGridColumn id="columnPeriod"				headerText="{ResourceManager.getInstance().getString('label','period')}" 			dataField="period" 		editable="false" width="100"/>		
		<mx:DataGridColumn id="columnStandardPrice"				headerText="{ResourceManager.getInstance().getString('label','standardPrice')}" 			dataField="standardPrice" 		editable="{this.paramIn4editable}" width="100"/>
		<mx:DataGridColumn id="columnRealPrice"				headerText="{ResourceManager.getInstance().getString('label','actualPrice')}" 			dataField="realPrice" 				editable="{this.paramIn4editable}" width="100"/>
		<mx:DataGridColumn id="columnComments"				headerText="{ResourceManager.getInstance().getString('label','remark')}" 			dataField="comments" 				editable="{this.paramIn4editable}" width="100"/>			
	</mx:columns>	
</mx:DataGrid>
