<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx" height="80" width="100%"
				   creationComplete="creationCompleteHandler(event)" xmlns:bizdata="dmdd.dmddmx.com.bizdata.*">
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:NumberValidator id="numberValidator4DataPeriodNum" source="{this.txtDataPeriodNum}" property="text" allowNegative="false" 
							negativeError="{resourceManager.getString('alert','alert_msg_dataperiodnum_2_249')}" 
							invalidCharError="{resourceManager.getString('alert','alert_msg_dataperiodnum_2_249')}" 
							lowerThanMinError="{resourceManager.getString('alert','alert_msg_dataperiodnum_2_249')}" 
							exceedsMaxError="{resourceManager.getString('alert','alert_msg_dataperiodnum_2_249')}"   
							minValue="2" maxValue="24" domain="int" 
							trigger="{this.txtDataPeriodNum}" triggerEvent="change">
		</mx:NumberValidator>	
		<mx:NumberValidator id="numberValidator4SeasonSmoothingingFactor" source="{this.txtSeasonSmoothingFactor}" property="text" allowNegative="false" 
							negativeError="{resourceManager.getString('alert','alert_msg_seasonsmoothingfactor9')}" 
							invalidCharError="{resourceManager.getString('alert','alert_msg_seasonsmoothingfactor9')}" 
							lowerThanMinError="{resourceManager.getString('alert','alert_msg_seasonsmoothingfactor9')}" 
							exceedsMaxError="{resourceManager.getString('alert','alert_msg_seasonsmoothingfactor9')}"  
							minValue="0" maxValue="1.0" domain="real" 
							trigger="{this.txtSeasonSmoothingFactor}" triggerEvent="change">
		</mx:NumberValidator>			
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import dmdd.dmddas.dataaccess.bizobject.BForecastModelMSLMa;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;

			//	描述    begin
			//	描述    end
			
			//	0	输入参数    begin		
			[Bindable]
			public var paramIo4forecastModelMSLMa:BForecastModelMSLMa = null;
			
			[Bindable]
			public var paramIn4editable:Boolean = false;				
			//	0	输入参数    end
			
			//	1	输出参数    begin
			[Bindable]
			public var paramOut4historyDependPeriodNum:int = 1;			
			//	1	输出参数    end

			//	2	本地变量    begin									
			//	2	本地变量    end			
			
			//	3	公共方法    begin	
			public function pubFun4prepare4save():Boolean
			{
				this.paramIo4forecastModelMSLMa.dataPeriodNum = Number( StringUtil.trim(this.txtDataPeriodNum.text) );
				this.paramIo4forecastModelMSLMa.seasonSmoothingFactor = Number( StringUtil.trim(this.txtSeasonSmoothingFactor.text) );
				
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint')
				var alert_msg:String = "";
				
				if( this.numberValidator4DataPeriodNum.validate(this.txtDataPeriodNum.text).results != null )
				{
					alert_msg = resourceManager.getString('alert','alert_msg_dataperiodnum_2_249');
					Alert.show( alert_msg, alert_title_hint );
					return false;
				}
				
				if( this.numberValidator4SeasonSmoothingingFactor.validate(this.txtSeasonSmoothingFactor.text).results != null )
				{
					alert_msg = resourceManager.getString('alert','alert_msg_seasonsmoothingfactor9');
					Alert.show( alert_msg, alert_title_hint );
					return false;
				}				
				
				return true;
			}				
			//	3	公共方法    end		
			
			//	4	初始化方法    begin	
			protected function creationCompleteHandler(event:FlexEvent):void
			{
			}			
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin
			protected function onChange4historyDependPeriodNum( txt:String ):Boolean
			{
				// TODO Auto-generated method stub
				if( this.numberValidator4DataPeriodNum.validate(this.txtDataPeriodNum.text).results != null )
				{
					return false;
				}
				
				this.paramOut4historyDependPeriodNum = Number( StringUtil.trim(this.txtDataPeriodNum.text) );
				return false;
			}		
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
		
			//	6	本地方法   end				



		]]>
	</fx:Script>
	
	
	<mx:Grid width="100%" height="100%">
		<mx:GridRow width="100%" height="100%" verticalAlign="middle">
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
				<s:Label text="{resourceManager.getString('note','modelPara')}" fontWeight="bold"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%" verticalAlign="middle">
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
				<s:Label text="{resourceManager.getString('note','useHistoryDataPeriod')}"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<s:TextInput width="100%" id="txtDataPeriodNum" maxChars="20" enabled="{this.paramIn4editable}" text="{this.paramIo4forecastModelMSLMa.dataPeriodNum}"/>
				<s:Button width="0" visible="false" enabled="{this.onChange4historyDependPeriodNum(this.txtDataPeriodNum.text)}"/>
			</mx:GridItem>
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
			</mx:GridItem>
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
				<s:Label text="{resourceManager.getString('note','seasonSmoothFactor')}"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<s:TextInput width="100%" id="txtSeasonSmoothingFactor" maxChars="20" enabled="{this.paramIn4editable}" text="{this.paramIo4forecastModelMSLMa.seasonSmoothingFactor}"/>
			</mx:GridItem>
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
			</mx:GridItem>
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
			</mx:GridItem>
		</mx:GridRow>			
	</mx:Grid>
	
</s:BorderContainer>
