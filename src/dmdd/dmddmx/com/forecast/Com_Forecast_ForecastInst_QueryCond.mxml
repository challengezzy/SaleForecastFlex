<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="25"
				   creationComplete="creationCompleteHandler(event)" xmlns:buttons="com.cool.buttons.*" >
	<s:layout>
		<s:HorizontalLayout paddingLeft="10" paddingRight="10" verticalAlign="middle" horizontalAlign="left"/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Metadata>
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.cool.assets.CoolAssetsFile;
			
			import dmdd.dmddas.common.constant.SysConst;
			
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			//	0	输入参数    begin
			public var paramIn4queryCallback4thisObject:Object = null;
			public var paramIn4queryCallback4function:Function = null;			
			
			[Bindable]
			public var paramIn4enabled:Boolean = true;
			//	0	输入参数    end
			
			//	1	输出参数    begin
			private var paramOut4sqlRestriction:String = null;
			private var paramOut4blPageQuery:Boolean = true;
			//	1	输出参数    end
			
			//	2	本地变量    begin	
			//	2	本地变量    end			
			
			//	3	公共方法    begin	
			public function pubFun4getParamOut4sqlRestriction():String
			{
				return this.paramOut4sqlRestriction;
			}
			
			public function pubFun4getParamOut4blPageQuery():Boolean
			{
				return this.paramOut4blPageQuery;
			}
			//	3	公共方法    end		
			
			//	4	初始化方法    begin			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
			}					
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin
			private function onQuery():void
			{
				this.paramOut4blPageQuery = this.qcondCheckBoxPageQuery.selected;
				this.paramOut4sqlRestriction = this.prvFun4generateSqlRestriction();
				this.paramIn4queryCallback4function.call( this.paramIn4queryCallback4thisObject );
			}			
			//	5	事件响应方法    end
			
			//	6	本地方法    begin		
			private function prvFun4generateSqlRestriction():String
			{
				var qcondCode:String = StringUtil.trim( this.qcondTxtCode.text );
				var qcondCodeLike:Boolean = this.qcondCheckBoxCodeLike.selected;
				var qcondName:String = StringUtil.trim( this.qcondTxtName.text );
				var qcondNameLike:Boolean = this.qcondCheckBoxNameLike.selected;
				
				var sqlRestriction:String = SysConst.SQL_STR_TRUE;
				if( qcondCode != "" )
				{
					if( qcondCodeLike == true )
					{
						sqlRestriction = sqlRestriction + " and (code like '%" + qcondCode + "%')";
					}
					else
					{
						sqlRestriction = sqlRestriction + " and (code = '" + qcondCode + "')";
					}
				}
				
				if( qcondName != "" )
				{
					if( qcondNameLike == true )
					{
						sqlRestriction = sqlRestriction + " and (name like '%" + qcondName + "%')";
					}
					else
					{
						sqlRestriction = sqlRestriction + " and (name = '" + qcondName + "')";
					}
				}
				
				if( sqlRestriction == SysConst.SQL_STR_TRUE )
				{
					sqlRestriction = null;
				}
				
				return sqlRestriction;
			}
			//	6	本地方法   end				



		]]>
	</fx:Script>
	<s:Label text="{resourceManager.getString('note','code')}"/>
	<s:TextInput id="qcondTxtCode" width="120"/>
	<s:CheckBox label="{resourceManager.getString('note','blurMatch')}" id="qcondCheckBoxCodeLike"/>
	<s:Spacer width="30"/>
	<s:Label text="{resourceManager.getString('note','name')}"/>
	<s:TextInput id="qcondTxtName" width="120"/>
	<s:CheckBox label="{resourceManager.getString('note','blurMatch')}" id="qcondCheckBoxNameLike"/>
	
	<s:Spacer width="30"/>
	<s:CheckBox label="{resourceManager.getString('note','pageQuery')}" id="qcondCheckBoxPageQuery" selected="true"/>
	<buttons:ButtonQuery click="onQuery()" enabled="{this.paramIn4enabled}"/>
	
</s:BorderContainer>
