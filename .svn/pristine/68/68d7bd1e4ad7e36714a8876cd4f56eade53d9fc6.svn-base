<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%" 
		   paddingLeft="10" paddingRight="10"
		   creationComplete="creationCompleteHandler(event)" 
		   xmlns:security="dmdd.dmddmx.com.security.*" xmlns:uirowdata="dmdd.dmddmx.com.uirowdata.*" 
		   xmlns:proorg="dmdd.dmddmx.com.proorg.*"
		   xmlns:controls="aks.aksmx.controls.*" xmlns:charts="aks.aksmx.charts.*" xmlns:containers="aks.aksmx.containers.*" xmlns:common="dmdd.dmddmx.com.common.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvUiRowData" destination="UiRowDataService" requestTimeout="0" showBusyCursor="true" >	
			<s:method name="getUiRowDatas4WeightReport" result="resultHandler4getUiRowDatas(event)" fault="faultHandler4getUiRowDatas(event)" concurrency="multiple">
			</s:method>							  
		</s:RemoteObject>		
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("mod_report")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import aks.aksas.charts.AksChartDataObject;
			import aks.aksas.controls.AksLockDataGridObject;
			import aks.aksas.utils.UtilArrayCollection;
			import aks.aksas.utils.UtilUi;
			
			import com.cool.assets.CoolAssetsFile;
			import com.cool.utils.AlertUtil;
			import com.cool.utils.DataListExportUtil;
			
			import dmdd.dmddas.common.constant.BizConst;
			import dmdd.dmddas.common.constant.SysConst;
			import dmdd.dmddas.common.constant.UIConst;
			import dmdd.dmddas.common.system.ClientEnvironment;
			import dmdd.dmddas.common.utils.UtilExceptionLocale;
			import dmdd.dmddas.common.utils.UtilOrganization;
			import dmdd.dmddas.common.utils.UtilPeriod;
			import dmdd.dmddas.common.utils.UtilProOrg;
			import dmdd.dmddas.common.utils.UtilProduct;
			import dmdd.dmddas.common.utils.UtilStrKey;
			import dmdd.dmddas.common.utils.UtilUiPopbScope;
			import dmdd.dmddas.common.utils.UtilUiRowData;
			import dmdd.dmddas.common.utils.UtilUiRowDataChart;
			import dmdd.dmddas.common.vo.UiCondVo;
			import dmdd.dmddas.dataaccess.aidobject.ABProOrg;
			import dmdd.dmddas.dataaccess.aidobject.ABUiRowData;
			import dmdd.dmddas.dataaccess.aidobject.ABUiRowDataProOrg;
			import dmdd.dmddas.dataaccess.bizobject.BBizData;
			import dmdd.dmddas.dataaccess.bizobject.BBizDataDefItemKpi;
			import dmdd.dmddas.dataaccess.bizobject.BSysDictionaryItem;
			import dmdd.dmddas.dataaccess.bizobject.BUiPopbScope;
			import dmdd.dmddas.dataaccess.bizobject.BUnit;
			import dmdd.dmddas.dataaccess.bizobject.BUnitGroup;
			import dmdd.dmddmx.com.chart.ForecastDataChartWindow;
			import dmdd.dmddmx.com.proorg.Com_ProOrg_LayerSetWindow;
			import dmdd.dmddmx.com.report.Com_Report_ViewDetailKPI;
			import dmdd.dmddmx.com.uirowdata.Com_UiRowData_ColumnSet;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.formatters.NumberFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			
			
			//	描述    begin
			//	描述    end
			
			//	0	输入参数    begin						
			//	0	输入参数    end
			
			//	1	输出参数    begin
			//	1	输出参数    end
			
			//	2	本地变量    begin	
			[Bindable]
			private var dp4adgUiRowData:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var dp4adgUiRowDatabak:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var arrDictBizDataType:ArrayCollection = ClientEnvironment.getBizDataTypeArr();	
			
			[Bindable]
			private var dp4chart4scale:ArrayCollection = new ArrayCollection();
			
			private var arr4displayName4chart4scale:ArrayCollection = new ArrayCollection();
			private var arr4yField4chart4scale:ArrayCollection = new ArrayCollection();		
			
			[Bindable]
			private var dp4chart4kpi:ArrayCollection = new ArrayCollection();
			
			private var arr4displayName4chart4kpi:ArrayCollection = new ArrayCollection();
			private var arr4yField4chart4kpi:ArrayCollection = new ArrayCollection();				
			
			[Bindable]
			private var cbBizData:ArrayCollection = new ArrayCollection();
			
			private var viewDetailKPI:Com_Report_ViewDetailKPI = null;
			
			[Bindable]
			private var selectedarrABProOrg:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var dp4expansionUiRowData:ArrayCollection = new ArrayCollection();
			
			//	 显示设置		begin
			private var isProCode:Boolean = false;
			private var isProName:Boolean = false;
			private var isProCharCode:Boolean = false;
			private var isProCharName:Boolean = false;
			private var isOrgCode:Boolean = false;
			private var isOrgName:Boolean = false;
			private var isOrgCharCode:Boolean = false;
			private var isOrgCharName:Boolean = false;
			
			//条件中是否选中对应项
			private var isDisPro:Boolean = false;
			private var isDisProChar:Boolean = false;
			private var isDisOrg:Boolean = false;
			private var isDisOrgChar:Boolean = false;
			
			/** 可选单位 */
			[Bindable]
			private var arrUnits:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var unitGroup:BUnitGroup = null;
			private var unit:BUnit = null;
			
			//	 显示设置		end
			private var uiCondVo:UiCondVo; //快速查询条件，转换后
			private var uiPopbScope:BUiPopbScope;
			
			//	查询条件		begin
			private var qcondArrUiRowDataProOrgs:ArrayCollection = new ArrayCollection();
			private var qcondArrBizDatas:ArrayCollection = new ArrayCollection();
			private var selectedBizData:BBizData = null;
			private var selectedBaseBizDataIndex:int = -1;
			private var qcondPeriodBegin:int;
			private var qcondPeriodEnd:int;
			//	查询条件		end
			
			/** 图形展示 */
			private var chartWindow:ForecastDataChartWindow;
			
			/** 列显示设置窗口 */
			private var columnSetWindow:Com_UiRowData_ColumnSet;
			
			/** 分层计算设置窗口 */
			private var layerSetWindow:Com_ProOrg_LayerSetWindow;
			
			private var isLayerSeted:Boolean = false;
			
			//	2	本地变量    end			
			
			//	3	公共方法    begin			
			//	3	公共方法    end		
			
			//	4	初始化方法    begin	
			protected function creationCompleteHandler(event:FlexEvent):void
			{				
				//	初始化界面参数	begin		
				arrDictBizDataType = new ArrayCollection();
				
				var arrSysDictBizDataType:ArrayCollection = ClientEnvironment.getBizDataTypeArr();
				if( arrSysDictBizDataType != null )
				{
					var i:int;
					var sysDictionaryItem:BSysDictionaryItem = null;
					for( i=0; i<arrSysDictBizDataType.length; i=i+1 )
					{
						sysDictionaryItem = BSysDictionaryItem(arrSysDictBizDataType.getItemAt(i));
						if( sysDictionaryItem.value == BizConst.GLOBAL_NULL_NULL ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_KPI )
						{
							arrDictBizDataType.addItem( sysDictionaryItem );
						}
					}
				}					
				//	初始化界面参数	end
				
				//增加右键锁定模块 begin
				var aksright_edit:AksLockDataGridObject = new AksLockDataGridObject(adgUiRowData);				
				//增加右键锁定模块 end
			}					
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin	
			private function callbackFunction4execute4comProOrgBizDataPeriodScope():void
			{		
				if(isLayerSeted == false){
					AlertUtil.show("请设置权重基准层次!");
					return;
				}
				
				var alert_msg:String = "";
				//判断是否选择了基准数据
				
				//取基准数据  begin
				selectedBaseBizDataIndex = condSetComp.getBaseBizDataSelectedIndex();
				if(selectedBaseBizDataIndex <0 )
				{					
					 alert_msg  = resourceManager.getString('mod_report','alert_msg_notselectbasedata');
					 AlertUtil.show( alert_msg);	
					return ;
				}

				uiPopbScope = condSetComp.getUiPopbScope();
				uiCondVo = UtilUiPopbScope.getUiScopeCondVo(uiPopbScope,this);
				
				if(uiCondVo.isValid == false){
					AlertUtil.show(uiCondVo.inValidStr,AlertUtil.MESSAGE_ERROR);
					return;
				}
				
				if(uiCondVo.isShowProduct==true)
				{
					if(uiCondVo.productLayer.value > layerSetWindow.pubFun4getParamIo4productLayer().value)//基准比展现高，报错
					{
						alert_msg  = resourceManager.getString('mod_report','alert_msg_productlayer_error');
						AlertUtil.show( alert_msg);	
						return ;
					}
				}
				
				if(uiCondVo.isShowProductCharacter ==true)
				{
					if(uiCondVo.productCharacterType != layerSetWindow.pubFun4getParamIo4productCharacterType())//基准比展现高，报错
					{
						alert_msg  = resourceManager.getString('mod_report','alert_msg_productcharactertype_error');
						AlertUtil.show( alert_msg);	
						return ;
					}
					
					if(uiCondVo.productCharacterLayer.value > layerSetWindow.pubFun4getParamIo4productCharacterLayer().value)//基准比展现高，报错
					{
						alert_msg  =  resourceManager.getString('mod_report','alert_msg_productcharacterlayer_error');
						AlertUtil.show( alert_msg);	
						return ;
					}
				}
				
				if(uiCondVo.isShowOrganization ==true)
				{
					if(uiCondVo.organizationLayer.value > layerSetWindow.pubFun4getParamIo4organizationLayer().value)//基准比展现高，报错
					{
						alert_msg  = resourceManager.getString('mod_report','alert_msg_orgnizationlayer_error');
						AlertUtil.show( alert_msg);	
						return ;
					}
				}
				if(uiCondVo.isShowOrganizationCharacter==true)
				{
					if(uiCondVo.organizationCharacterType != layerSetWindow.pubFun4getParamIo4organizationCharacterType())//基准比展现高，报错
					{
						alert_msg  = resourceManager.getString('mod_report','alert_msg_orgniaztioncharactertype_error');
						AlertUtil.show( alert_msg);	
						return ;
					}
					
					if(uiCondVo.organizationCharacterLayer.value > layerSetWindow.pubFun4getParamIo4organizationCharacterLayer().value)//基准比展现高，报错
					{
						alert_msg  = resourceManager.getString('mod_report','alert_msg_orgniaztioncharacterlayer_error');
						AlertUtil.show( alert_msg);	
						return ;
					}
				}				
				
				//根据基准层次进行分解
				layerSetWindow.pubFun4excuteProOrgs( uiCondVo.arrProOrgs);
				dp4expansionUiRowData = layerSetWindow.pubFun4getParamOut4arrUiRowDataProOrgs();
				
				//	从 comProOrgBizDataPeriodScope中取得查询条件	begin
				qcondArrUiRowDataProOrgs = uiCondVo.arrUiRowDataProOrgs;
				qcondArrBizDatas = uiCondVo.arrBizDatas;
				selectedBizData = qcondArrBizDatas.getItemAt(0) as BBizData;
				
				//获取选择的ABProORg begin
				selectedarrABProOrg = uiCondVo.arrProOrgs;
				
				//	从 comPeriodSpan 取得查询期间		begin
				qcondPeriodBegin = uiCondVo.periodBegin;
				qcondPeriodEnd = uiCondVo.periodEnd;
				
				refreshColumnDispControlSet(1);
				adgUiRowData.setPeriodBeginEnd( qcondPeriodBegin, qcondPeriodEnd, false );
				
				var blPageProOrg:Boolean = condSetComp.isPageProOrg;
				if( blPageProOrg == true )
				{	
					//	初始化数据表格控制板
					comAksDataGridControlBar.pubFun4setResultParams( true, qcondArrUiRowDataProOrgs.length, ClientEnvironment.getSysParamPageSize() );
					
					//	去执行第一页查询
					prvFun4pageQueryReportDatas( 1 );
				}
				else
				{	
					//	初始化数据表格控制板					
					comAksDataGridControlBar.pubFun4setResultParams( false, qcondArrUiRowDataProOrgs.length, qcondArrUiRowDataProOrgs.length );
					
					//	不分页查询
					UtilUi.pubFun4PopWaitWindow( this );
					dp4adgUiRowData = new ArrayCollection();
					srvUiRowData.getUiRowDatas4WeightReport( qcondArrUiRowDataProOrgs, qcondPeriodBegin, qcondPeriodEnd, selectedBizData, 
																ClientEnvironment.getSysPeriod(),selectedBaseBizDataIndex ,dp4expansionUiRowData );
				}	
				
				comAksDataGridControlBar.showzero.selected=false;
			}					
			
			//	分页查询相关		begin			
			private function prvFun4pageQueryReportDatas( _pageIndex:int ):void
			{
				UtilUi.pubFun4PopWaitWindow( this );
				var arrUiRowDataProOrgs:ArrayCollection = new ArrayCollection();
				var i:int;
				var pageSize:int = ClientEnvironment.getSysParamPageSize();
				var indexBegin:int = pageSize * (_pageIndex-1);
				var indexEnd:int = pageSize * _pageIndex;
				if( indexEnd > qcondArrUiRowDataProOrgs.length )
				{
					indexEnd = qcondArrUiRowDataProOrgs.length;
				}
				//	分页查询,根据pageIndex计算需要传递给服务器的查询条件
				for( i=indexBegin; i<indexEnd; i=i+1 )
				{
					arrUiRowDataProOrgs.addItem( qcondArrUiRowDataProOrgs.getItemAt(i) );	
				}
				
				
				dp4adgUiRowData = new ArrayCollection();
				srvUiRowData.getUiRowDatas4WeightReport( arrUiRowDataProOrgs, qcondPeriodBegin, qcondPeriodEnd, selectedBizData, 
											ClientEnvironment.getSysPeriod(),selectedBaseBizDataIndex,dp4expansionUiRowData  );					
			}			
			//	分页查询相关		end		
			private function prvFun4ShowZero(notshow:Boolean):void
			{
				if(notshow)//去除为0的显示
				{	
					var uiRowData:ABUiRowData;
					var remove:ArrayCollection = new ArrayCollection();
					for(var i:int=0; i<dp4adgUiRowData.length; i=i+1 )
					{
						uiRowData = ABUiRowData(dp4adgUiRowData.getItemAt(i));						
						if(prv4CheckZero(uiRowData))
						{
							remove.addItem(uiRowData);
						}
					}
					dp4adgUiRowData = UtilArrayCollection.removeItems(dp4adgUiRowData,remove);
				}
				else
				{
					dp4adgUiRowData = new ArrayCollection();
					var uiRowData_new:ABUiRowData;
					for( i=0; i<dp4adgUiRowDatabak.length; i=i+1 )
					{
						uiRowData = ABUiRowData(dp4adgUiRowDatabak.getItemAt(i));
						uiRowData_new = new ABUiRowData();
						uiRowData_new.copyDeep(uiRowData);
						dp4adgUiRowData.addItem(uiRowData_new);
					}
				}
			}
			
			private function prv4CheckZero(uiRowData:ABUiRowData):Boolean
			{
				var value:Number;
				var periodDiff:int = UtilPeriod.getPeriodDifference( uiRowData.periodBegin, uiRowData.periodEnd );
				for(var periodLoc:int= 0; periodLoc <= periodDiff; periodLoc = periodLoc + 1 )
				{
					value = uiRowData.pubFun4getPeriodDataValue(periodLoc);
					if(value!=0)
					{
						return false;
					}
				}
				
				return true;
			}
			
			private function faultHandler4getUiRowDatas(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('main','alt_title_warn') );
			}	
			
			private function resultHandler4getUiRowDatas(event:ResultEvent):void 
			{
				btnExportData.enabled = true;
				btnRefreshChart.enabled = true;
				btnViewDetail.enabled=false;
				
				dp4adgUiRowData = ArrayCollection(event.result);
				var kpiValue:Number = NaN;
				var uiRowData:ABUiRowData = null;
				
				var periodDiff:int;
				var periodLoc:int;
				if( dp4adgUiRowData != null )
				{
					for(var i:int=0; i<dp4adgUiRowData.length; i=i+1 )
					{
						uiRowData = ABUiRowData(dp4adgUiRowData.getItemAt(i));
						periodDiff = UtilPeriod.getPeriodDifference( uiRowData.periodBegin, uiRowData.periodEnd );
						for( periodLoc = 0; periodLoc <= periodDiff; periodLoc = periodLoc + 1 )
						{
							kpiValue=uiRowData.pubFun4getPeriodDataValue( periodLoc );
							uiRowData.pubFun4setPeriodDataValue( periodLoc,kpiValue/100);
						}
					}
				}
				var uiRowData_new:ABUiRowData;
				dp4adgUiRowDatabak =  new ArrayCollection();
				for( i=0; i<dp4adgUiRowData.length; i=i+1 )
				{
					uiRowData = ABUiRowData(dp4adgUiRowData.getItemAt(i));
					uiRowData_new = new ABUiRowData();
					uiRowData_new.copyDeep(uiRowData);
					dp4adgUiRowDatabak.addItem(uiRowData_new);
				}
				UtilUi.pubFun4RemoveWaitWindow();
			}			
			
			/** 设置单位组中的单位 */
			private function unitGroupSet(unit:BUnit):void
			{
				var unitGroupId:Number = unit.unitGroup.id;
				arrUnits = ClientEnvironment.getUnitGroup(unitGroupId).units;
				
				var selUnit:BUnit =null;
				for(var i:int=0;i<arrUnits.length;i++)
				{
					selUnit = BUnit(arrUnits.getItemAt(i));
					if(selUnit.id == unit.id)
					{	
						comboBoxUnit.selectedIndex = i; 
						comboBoxUnit.selectedItem = selUnit;
						break;
					}
				}
				
				comboBoxUnit.enabled = true;
			}
			
			private function onChange4comboBoxUnit():void
			{
				//	单位变化	begin
				var selectedUnit:BUnit = BUnit(comboBoxUnit.selectedItem)
				var i:int;
				
				var uiRowData:ABUiRowData = null;
				if( selectedUnit != null && unit != null && selectedUnit.id != unit.id )
				{
					if( dp4adgUiRowData != null )
					{
						for( i=0; i<dp4adgUiRowData.length; i=i+1 )
						{
							uiRowData = ABUiRowData(dp4adgUiRowData.getItemAt(i));
							uiRowData.exchangeUnit( unit.exchangeRate, selectedUnit.exchangeRate );
						}
					}	
					
					unit = selectedUnit;
				}
				//	单位变化	end
			}
			
			private function onLayerSet():void{
				//没有数据，不需要分层计算
				if (layerSetWindow == null){
					layerSetWindow = new Com_ProOrg_LayerSetWindow();
					layerSetWindow.onOkFunction = callbackOnLayerSetOK;
				}
				
				PopUpManager.addPopUp(layerSetWindow,this);
				PopUpManager.centerPopUp(layerSetWindow);
			}
			
			private function callbackOnLayerSetOK():void{
				isLayerSeted = true;
			}
			
			private function onColumnSet():void
			{
				if(uiCondVo == null)
					return; //还没查询过数据
				
				adgUiRowData.onColumnSet(null);
			}
			
			private function refreshColumnDispControlSet(type:Number):void{
				//3个入口，设置显示列 1，查询条件中执行后 2，分层计算后 3，列显示手工设置后
				
				if(type == 1){ 
					//1查询条件中执行后
					isDisPro = uiCondVo.isShowProduct;
					isDisProChar = uiCondVo.isShowProductCharacter;
					isDisOrg = uiCondVo.isShowOrganization;
					isDisOrgChar = uiCondVo.isShowOrganizationCharacter;
					
				}else if(type ==2){
					isDisPro = uiCondVo.isShowProduct || layerSetWindow.checkBoxProduct.selected;
					isDisProChar = uiCondVo.isShowProductCharacter || layerSetWindow.checkBoxProductCharacter.selected;
					isDisOrg = uiCondVo.isShowOrganization || layerSetWindow.checkBoxOrganization.selected;
					isDisOrgChar = uiCondVo.isShowOrganizationCharacter || layerSetWindow.checkBoxOrganizationCharacter.selected;
				}
				//同步设置
				adgUiRowData.setVisible4Dimension(isDisPro,isDisProChar,isDisOrg,isDisOrgChar);
				
			}
			
			private function onExport():void
			{				
				var TSVString:String = DataListExportUtil.generateCsvData(adgUiRowData,1) ;
				
				// Copy the TSV string to the clipboard
				System.setClipboard(TSVString);					
			}
			
			private function onRefreshChart():void
			{
				chartWindow = UtilUiRowDataChart.showRowDataChartWindow(adgUiRowData,null,qcondPeriodBegin,qcondPeriodEnd);
			}
			
			private function onViewDetailKPI():void
			{
				if(adgUiRowData.selectedIndex<0)
					return ;
				var abUiRowData:ABUiRowData = adgUiRowData.selectedItem as ABUiRowData;
				
				//拼装ABProOrg list begin				
				var arrSelectedABProOrg:ArrayCollection = new ArrayCollection();
				//arrSelectedABProOrg.addAll(UtilProOrg.getDetailProOrgs(selectedarrABProOrg,true));
				//拼装ABProOrg list end.
				
				//取出当前所选择的数据所包含的明细 begin
				var strKey4uiRowDataProOrg:String = UtilStrKey.getStrKey4PPcOOcB( abUiRowData.product, abUiRowData.productCharacter, 
					abUiRowData.organization, abUiRowData.organizationCharacter, null );
				
				arrSelectedABProOrg.addAll(uiCondVo.hmap_uiRowData_detailProOrgs.getValue(strKey4uiRowDataProOrg));
				//取出当前所选择的数据所包含的明细 end.
				
				//拼装ABUiRowDataProOrg list begin
				var abUiRowDataProOrg:ABUiRowDataProOrg = new ABUiRowDataProOrg();
				abUiRowDataProOrg.detailProOrgIds=abUiRowData.detailProOrgIds;
				abUiRowDataProOrg.organization=abUiRowData.organization;
				abUiRowDataProOrg.product=abUiRowData.product;
				abUiRowDataProOrg.productCharacter=abUiRowData.productCharacter;
				abUiRowDataProOrg.organizationCharacter=abUiRowData.organizationCharacter;
				//拼装ABUiRowDataProOrg list end.
				
				viewDetailKPI = Com_Report_ViewDetailKPI(PopUpManager.createPopUp(this, Com_Report_ViewDetailKPI, true));
				//设置传入参数 begin
				viewDetailKPI.paramIn4arrSelectedABProOrg=arrSelectedABProOrg;
				viewDetailKPI.paramIn4abUiRowDataProOrg=abUiRowDataProOrg;
				viewDetailKPI.paramIn4qcondPeriodBegin = abUiRowData.periodBegin;
				viewDetailKPI.paramIn4qcondPeriodEnd = abUiRowData.periodEnd;
				viewDetailKPI.paramIn4selectedBizDataKPI = selectedBizData
				viewDetailKPI.paramIn4selectedBaseBizDataIndex = selectedBaseBizDataIndex;
				viewDetailKPI.paramIn4sysPeriod = ClientEnvironment.getSysPeriod();
				//设置传入参数 end.
				viewDetailKPI.onViewDetail();
			}
			
			protected function comAdgUiRowData_changeHandler(event:ListEvent):void
			{
				if(adgUiRowData.selectedIndex>-1)
					btnViewDetail.enabled=true;
			}

			
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
			//	6	本地方法   end	
			

			
		]]>
	</fx:Script>
	
	<common:LabelBoundary paddingTop="5" labelText="{resourceManager.getString('mod_report','querycondition')}" />
	<s:HGroup width="100%" height="25" verticalAlign="middle">
		<security:Com_Security_ProOrg_BizData_Period_Quick id="condSetComp"
						 uiCode="{UIConst.UICODE_REPORT_WEIGHT}" arrDictBizDataType="{arrDictBizDataType}" blOnlyIsManagingBizData="false" 
						 executeCallback4thisObject="{this}" executeCallback4function="{callbackFunction4execute4comProOrgBizDataPeriodScope}" 
						 blAllowMultipleSelectionBizData="false" visiableBaseBizData="true" >
		</security:Com_Security_ProOrg_BizData_Period_Quick>
		<s:Button id="btnLayerSet" click="onLayerSet()" label="{resourceManager.getString('mod_report','weight_set')}" icon="{CoolAssetsFile.tree_sigIcon}"/>
	</s:HGroup>
	
	<common:LabelBoundary paddingTop="5" labelText="{resourceManager.getString('mod_report','reportdata_table')}" />
	<s:HGroup width="100%" verticalAlign="middle" paddingTop="3" paddingLeft="10">
		<s:Label text="{resourceManager.getString('note','unit')}" id="lbUnit"/>
		<s:ComboBox id="comboBoxUnit" dataProvider="{arrUnits}" change="onChange4comboBoxUnit()" enabled="false"/>
		<s:Spacer width="10" />
		<s:Button id="btnViewDetail" enabled="false" label="{resourceManager.getString('mod_report','btn_viewdetail')}" click="onViewDetailKPI()" icon="{CoolAssetsFile.detailIcon}"/>
		<s:Button id="btnRefreshChart" click="onRefreshChart()" label="{resourceManager.getString('button','chartView')}" icon="{CoolAssetsFile.chart_lineIcon}" />
		<s:Button id="btnExportData" click="onExport()" label="{resourceManager.getString('button','export')}" icon="{CoolAssetsFile.excelIcon}"/>
		<s:Button id="btnColumnSet" click="onColumnSet()" label="{resourceManager.getString('button','columnViewSet')}" icon="{CoolAssetsFile.optsetIcon}"/>
	</s:HGroup>
	<uirowdata:Com_UiRowData_UiRowData_AdvancedDataGrid id="adgUiRowData" width="100%" height="100%" dataProvider="{dp4adgUiRowData}" 
														editable="false"  change="comAdgUiRowData_changeHandler(event)"/>
	<controls:AksDataGridControlBar id="comAksDataGridControlBar" paramIn4enabled4BtnSetColumns="false" paramIn4dataGrid="{adgUiRowData}"
									paramIn4callback4thisObject="{this}" paramIn4callback4queryFunction="{prvFun4pageQueryReportDatas}" 
									paramIn4callback4showzeroFunction="{prvFun4ShowZero}" paramin4ShowZero="true">
	</controls:AksDataGridControlBar>
	
</mx:Module>
