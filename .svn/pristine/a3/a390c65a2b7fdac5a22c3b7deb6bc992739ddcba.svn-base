<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   layout="vertical" width="100%" height="100%" paddingRight="10" paddingLeft="10"
		   creationComplete="creationCompleteHandler(event)" 
		   xmlns:security="dmdd.dmddmx.com.security.*" xmlns:uirowdata="dmdd.dmddmx.com.uirowdata.*" 
		   xmlns:controls="aks.aksmx.controls.*" xmlns:charts="aks.aksmx.charts.*" xmlns:containers="aks.aksmx.containers.*" xmlns:common="dmdd.dmddmx.com.common.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvUiRowData" destination="UiRowDataService">	
			<s:method name="getUiRowDatas" result="resultHandler4getUiRowDatas(event)" fault="faultHandler4getUiRowDatas(event)">
			</s:method>							  
		</s:RemoteObject>		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import aks.aksas.charts.AksChartDataObject;
			import aks.aksas.utils.UtilUi;
			
			import com.cool.assets.CoolAssetsFile;
			import com.cool.utils.AlertUtil;
			import com.cool.utils.DataListExportUtil;
			
			import dmdd.dmddas.common.constant.BizConst;
			import dmdd.dmddas.common.constant.SkinConst;
			import dmdd.dmddas.common.constant.SysConst;
			import dmdd.dmddas.common.constant.UIConst;
			import dmdd.dmddas.common.system.ClientEnvironment;
			import dmdd.dmddas.common.utils.UtilExceptionLocale;
			import dmdd.dmddas.common.utils.UtilPeriod;
			import dmdd.dmddas.common.utils.UtilUiPopbScope;
			import dmdd.dmddas.common.utils.UtilUiRowData;
			import dmdd.dmddas.common.utils.UtilUiRowDataChart;
			import dmdd.dmddas.common.vo.UiCondVo;
			import dmdd.dmddas.dataaccess.aidobject.ABUiRowData;
			import dmdd.dmddas.dataaccess.bizobject.BSysDictionaryItem;
			import dmdd.dmddas.dataaccess.bizobject.BUiPopbScope;
			import dmdd.dmddas.dataaccess.bizobject.BUnit;
			import dmdd.dmddas.dataaccess.bizobject.BUnitGroup;
			import dmdd.dmddmx.com.chart.ForecastDataChartWindow;
			import dmdd.dmddmx.com.uirowdata.Com_UiRowData_ColumnSet;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			//	描述    begin
			//历史数据查询
			//	描述    end
			
			//	0	输入参数    begin						
			//	0	输入参数    end
			
			//	1	输出参数    begin
			//	1	输出参数    end
			
			//	2	本地变量    begin	
			[Bindable]
			private var dp4adgUiRowData:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var arrDictBizDataType:ArrayCollection = new ArrayCollection();	
			
			//条件中是否选中对应项
			private var isDisPro:Boolean = false;
			private var isDisProChar:Boolean = false;
			private var isDisOrg:Boolean = false;
			private var isDisOrgChar:Boolean = false;
			
			/** 可选单位 */
			[Bindable]
			private var arrUnits:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var unitGroup:BUnitGroup = null;
			private var unit:BUnit = null;
			
			//	 显示设置		end
			
			//	查询条件		begin
			private var uiCondVo:UiCondVo; //快速查询条件，转换后
			private var uiPopbScope:BUiPopbScope;
			
			private var qcondArrUiRowDataProOrgs:ArrayCollection = new ArrayCollection();
			private var qcondArrBizDatas:ArrayCollection = new ArrayCollection();
			
			private var qcondPeriodBegin:int;
			private var qcondPeriodEnd:int;
			//	查询条件		end
			
			/** 图形展示 */
			private var chartWindow:ForecastDataChartWindow;
			
			//	2	本地变量    end			
			
			//	3	公共方法    begin			
			//	3	公共方法    end		
			
			//	4	初始化方法    begin	
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				//	初始化界面参数	begin
				arrDictBizDataType = new ArrayCollection();
				
				var bizDataTypeArr:ArrayCollection = ClientEnvironment.getBizDataTypeArr();
				if( bizDataTypeArr != null )
				{
					var i:int;
					var sysDictionaryItem:BSysDictionaryItem = null;
					for( i=0; i<bizDataTypeArr.length; i=i+1 )
					{
						sysDictionaryItem = BSysDictionaryItem(bizDataTypeArr.getItemAt(i));
						if( sysDictionaryItem.value == BizConst.GLOBAL_NULL_NULL ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_HISTORY ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_HISTORYAD ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_HISTORYADR ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_TIMEHIS )
						{
							arrDictBizDataType.addItem( sysDictionaryItem );
						}
					}
				}				
				//	初始化界面参数	end
			}			
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin	
			private function callbackFunction4execute4comProOrgBizDataPeriodScope():void
			{
				uiPopbScope = condSetComp.getUiPopbScope();
				uiCondVo = UtilUiPopbScope.getUiScopeCondVo(uiPopbScope,this);
				
				if(uiCondVo.isValid == false){
					AlertUtil.show(uiCondVo.inValidStr,AlertUtil.MESSAGE_ERROR);
					return;
				}
				
				refreshColumnDispControlSet(1);
				
				//设置单位
				unitGroup = uiCondVo.unitGroup;
				unit = uiCondVo.unit;
				unitGroupSet(unit);
				
				//	从 comProOrgBizDataPeriodScope中取得查询条件
				qcondArrUiRowDataProOrgs = uiCondVo.arrUiRowDataProOrgs;
				qcondArrBizDatas = uiCondVo.arrBizDatas;
				
				//	从 comPeriodSpan 取得查询期间
				qcondPeriodBegin = uiCondVo.periodBegin;
				qcondPeriodEnd = uiCondVo.periodEnd;
				
				comAdgUiRowData.setPeriodBeginEnd( qcondPeriodBegin, qcondPeriodEnd, false );
								
				var blPageProOrg:Boolean = condSetComp.isPageProOrg;
				if( blPageProOrg == true )
				{	
					//	初始化数据表格控制板
					comAksDataGridControlBar.pubFun4setResultParams( true, qcondArrUiRowDataProOrgs.length, ClientEnvironment.getSysParamPageSize() );
					
					//	去执行第一页查询
					prvFun4pageQueryHistoryDatas( 1 );
				}
				else
				{	
					//	初始化数据表格控制板					
					comAksDataGridControlBar.pubFun4setResultParams( false, qcondArrUiRowDataProOrgs.length, qcondArrUiRowDataProOrgs.length );
					
					//	不分页查询
					UtilUi.pubFun4PopWaitWindow( this );
					dp4adgUiRowData = new ArrayCollection();
					srvUiRowData.getUiRowDatas( qcondArrUiRowDataProOrgs, qcondPeriodBegin, qcondPeriodEnd, qcondArrBizDatas, ClientEnvironment.getSysPeriod()  );
				}								
			}			
			
			//	分页查询相关		begin			
			private function prvFun4pageQueryHistoryDatas( _pageIndex:int ):void
			{
				UtilUi.pubFun4PopWaitWindow( this );
				var arrUiRowDataProOrgs:ArrayCollection = new ArrayCollection();
				var i:int;
				var pageSize:int = ClientEnvironment.getSysParamPageSize();
				var indexBegin:int = pageSize * (_pageIndex-1);
				var indexEnd:int = pageSize * _pageIndex;
				if( indexEnd > qcondArrUiRowDataProOrgs.length )
				{
					indexEnd = qcondArrUiRowDataProOrgs.length;
				}
				//	分页查询,根据pageIndex计算需要传递给服务器的查询条件
				for( i=indexBegin; i<indexEnd; i=i+1 )
				{
					arrUiRowDataProOrgs.addItem( qcondArrUiRowDataProOrgs.getItemAt(i) );	
				}
				
				
				dp4adgUiRowData = new ArrayCollection();
				srvUiRowData.getUiRowDatas( arrUiRowDataProOrgs, qcondPeriodBegin, qcondPeriodEnd, qcondArrBizDatas, ClientEnvironment.getSysPeriod()  );					
			}			
			//	分页查询相关		end		
			
			private function faultHandler4getUiRowDatas(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('alert','alt_title_warn') );
			}	
			
			private function resultHandler4getUiRowDatas(event:ResultEvent):void 
			{
				btnRefreshChart.enabled = true;
				
				dp4adgUiRowData = ArrayCollection(event.result);
				
				var i:int;
				var seledtedUnit:BUnit = null;
				var uiRowData:ABUiRowData = null;
				if( dp4adgUiRowData != null )
				{
					seledtedUnit = BUnit(comboBoxUnit.selectedItem);		
					if( seledtedUnit != null && seledtedUnit.isBase == BizConst.GLOBAL_YESNO_NO )
					{
						for( i=0; i<dp4adgUiRowData.length; i=i+1 )
						{
							uiRowData = ABUiRowData(dp4adgUiRowData.getItemAt(i));
							uiRowData.exchangeUnit( 1, seledtedUnit.exchangeRate );
						}						
					}

				}
				comAksDataGridControlBar.pubFun4setResultParams( true, dp4adgUiRowData.length, ClientEnvironment.getSysParamPageSize() );
				UtilUi.pubFun4RemoveWaitWindow();
			}				
			
			/** 设置单位组中的单位 */
			private function unitGroupSet(unit:BUnit):void
			{
				var unitGroupId:Number = unit.unitGroup.id;
				arrUnits = ClientEnvironment.getUnitGroup(unitGroupId).units;
				
				var selUnit:BUnit =null;
				for(var i:int=0;i<arrUnits.length;i++)
				{
					selUnit = BUnit(arrUnits.getItemAt(i));
					if(selUnit.id == unit.id)
					{	
						comboBoxUnit.selectedIndex = i; 
						comboBoxUnit.selectedItem = selUnit;
						break;
					}
				}
				
				comboBoxUnit.enabled = true;
			}
			
			private function onExport():void
			{				
				var TSVString:String = DataListExportUtil.generateCsvData(comAdgUiRowData,1) ;
				
				// Copy the TSV string to the clipboard
				System.setClipboard(TSVString);					
			}
			
			private function onRefreshChart():void
			{
				chartWindow = UtilUiRowDataChart.showRowDataChartWindow(comAdgUiRowData,null,qcondPeriodBegin,qcondPeriodEnd);
				
			}
			
			private function onChange4comboBoxUnit():void
			{
				//	单位变化	begin
				var selectedUnit:BUnit = BUnit(comboBoxUnit.selectedItem)
				var i:int;
				
				var uiRowData:ABUiRowData = null;
				if( selectedUnit != null && unit != null && selectedUnit.id != unit.id )
				{
					if( dp4adgUiRowData != null )
					{
						for( i=0; i<dp4adgUiRowData.length; i=i+1 )
						{
							uiRowData = ABUiRowData(dp4adgUiRowData.getItemAt(i));
							uiRowData.exchangeUnit( unit.exchangeRate, selectedUnit.exchangeRate );
						}
					}	
					unit = selectedUnit;
				}
				//	单位变化	end
			}
			
			private function onColumnSet():void
			{
				if(uiCondVo == null)
					return; //还没查询过数据
				
				comAdgUiRowData.onColumnSet(null);
			}
			
			private function refreshColumnDispControlSet(type:Number):void{
				//3个入口，设置显示列 1，查询条件中执行后 2，分层计算后 3，列显示手工设置后
				
				if(type == 1){ 
					//1查询条件中执行后
					isDisPro = uiCondVo.isShowProduct;
					isDisProChar = uiCondVo.isShowProductCharacter;
					isDisOrg = uiCondVo.isShowOrganization;
					isDisOrgChar = uiCondVo.isShowOrganizationCharacter;
					
				}
				//同步设置
				comAdgUiRowData.setVisible4Dimension(isDisPro,isDisProChar,isDisOrg,isDisOrgChar);
				
			}
			
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
			//	6	本地方法   end	
			
		]]>
	</fx:Script>
	<common:LabelBoundary paddingTop="5" labelText="{resourceManager.getString('menu','queryCond')}" />
	<security:Com_Security_ProOrg_BizData_Period_Quick id="condSetComp" width="100%" height="26" uiCode="{UIConst.UICODE_HISTORYDATA_QUERY}"  
													   arrDictBizDataType="{arrDictBizDataType}" blOnlyIsManagingBizData="false" 
													   executeCallback4thisObject="{this}" 
														executeCallback4function="{callbackFunction4execute4comProOrgBizDataPeriodScope}">
	</security:Com_Security_ProOrg_BizData_Period_Quick>			
	<common:LabelBoundary labelText="{resourceManager.getString('menu','historyData')}" paddingTop="5" />
	<s:HGroup width="100%" verticalAlign="middle" paddingTop="3" paddingLeft="10">
		<s:Label text="{resourceManager.getString('note','unit')}" id="lbUnit"/>
		<s:ComboBox id="comboBoxUnit" dataProvider="{arrUnits}" change="onChange4comboBoxUnit()" enabled="false"/>
		<s:Spacer width="10" />
		<s:Button id="btnRefreshChart" click="onRefreshChart()" label="{resourceManager.getString('button','chartView')}" icon="{CoolAssetsFile.chart_lineIcon}" />
		<s:Button id="btnExportData" click="onExport()" label="{resourceManager.getString('button','export')}" icon="{CoolAssetsFile.excelIcon}"/>
		<s:Button id="btnColumnSet" click="onColumnSet()" label="{resourceManager.getString('button','columnViewSet')}" icon="{CoolAssetsFile.optsetIcon}"/>
	</s:HGroup>
	<uirowdata:Com_UiRowData_UiRowData_AdvancedDataGrid id="comAdgUiRowData" dataProvider="{dp4adgUiRowData}" editable="true" width="100%" height="100%"/>
	<controls:AksDataGridControlBar id="comAksDataGridControlBar" paramIn4enabled4BtnSetColumns="false" paramIn4dataGrid="{comAdgUiRowData}" paramIn4callback4thisObject="{this}" paramIn4callback4queryFunction="{prvFun4pageQueryHistoryDatas}">
	</controls:AksDataGridControlBar>
</mx:Module>
