<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="500" height="150" close="onCancel()"
			   creationComplete="creationCompleteHandler(event)">
	<s:layout>
		<s:VerticalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvProduct" destination="ProductService">
			<s:method name="newProductCharacterLayer" result="resultHandler4saveProductCharacterLayer(event)" fault="faultHandler4saveProductCharacterLayer(event)">
			</s:method>	
			<s:method name="updProductCharacterLayer" result="resultHandler4saveProductCharacterLayer(event)" fault="faultHandler4saveProductCharacterLayer(event)">
			</s:method>
		</s:RemoteObject>		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import aks.aksas.utils.UtilUi;
			
			import dmdd.dmddas.common.system.ClientEnvironment;
			import dmdd.dmddas.common.utils.UtilExceptionLocale;
			import dmdd.dmddas.dataaccess.bizobject.BProductCharacterLayer;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			//	描述		begin
			//	描述		end
			
			//	0	输入参数    begin		
			private var paramIn4closeCallback4thisObject:Object = null;
			private var paramIn4closeCallback4function:Function = null;
			
			private var paramIo4winUse:int = UtilUi.AUWINDOW_USE_NEW;
			
			[Bindable]
			private var paramIo4productCharacterLayer:BProductCharacterLayer = null;							
			//	0	输入参数    end
			
			//	1	输出参数    begin
			private var paramOut4winCloseWay:int = UtilUi.WINDOW_CLOSEWAY_CANCEL;
			
			//	1	输出参数    end
			
			//	2	本地变量    begin
			//	2	本地变量    end			
			
			//	3	公共方法    begin	
			//	构造函数
			public function pubFun4constructor( _paramIo4productCharacterLayer:BProductCharacterLayer, _paramIo4winUse:int, _paramIn4closeCallback4thisObject:Object, _paramIn4closeCallback4function:Function ):void
			{
				this.pubFun4setParamIo4productCharacterLayer( _paramIo4productCharacterLayer, _paramIo4winUse );
				this.pubFun4setParamIn4closeCallback( _paramIn4closeCallback4thisObject, _paramIn4closeCallback4function );
			}	
			
			//	关闭回调函数参数													
			public function pubFun4setParamIn4closeCallback( _thisObject:Object, _function:Function ):void
			{
				this.paramIn4closeCallback4thisObject = _thisObject;
				this.paramIn4closeCallback4function = _function;	
			}
			//	关闭方式参数
			public function pubFun4getParamOut4winCloseWay():int
			{
				return this.paramOut4winCloseWay;
			}
			//	关闭窗口
			private function prvFun4close():void
			{
				PopUpManager.removePopUp( this );						
				this.paramIn4closeCallback4function.call( this.paramIn4closeCallback4thisObject );				
			}				
			
			//	界面用途参数
			public function pubFun4getParamIo4winUse():int
			{
				return this.paramIo4winUse;
			}			
			
			
			//	处理对象参数
			/**
			 * _paramIo4productCharacterLayer:BProductCharacterLayer	处理对象
			 * _paramIo4winUse:int	处理动作
			 */ 			
			public function pubFun4setParamIo4productCharacterLayer( _paramIo4productCharacterLayer:BProductCharacterLayer, _paramIo4winUse:int ):void
			{
				this.paramIo4productCharacterLayer = _paramIo4productCharacterLayer;
				this.paramIo4winUse = _paramIo4winUse;
			}
			public function pubFun4getParamIo4productCharacterLayer():BProductCharacterLayer
			{
				return this.paramIo4productCharacterLayer;
			}				
			//	3	公共方法    end		
			
			//	4	初始化方法    begin			
			private function creationCompleteHandler(event:FlexEvent):void
			{
				this.x = 100;
				this.y = 50;
			}						
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin						
			private function onSave():void
			{				
				if( this.prvFun4prepare4save() == true )
				{
					UtilUi.pubFun4PopWaitWindow( this );
					if( this.paramIo4winUse == UtilUi.AUWINDOW_USE_NEW )
					{
						this.srvProduct.newProductCharacterLayer( this.paramIo4productCharacterLayer );
					}
					else if( this.paramIo4winUse == UtilUi.AUWINDOW_USE_UPD )
					{
						this.srvProduct.updProductCharacterLayer( this.paramIo4productCharacterLayer );
					}
					else
					{
						Alert.show( '意外情形，请联系技术支持人员', '提示' );	
					}
				}
			}			
			
			private function faultHandler4saveProductCharacterLayer(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('alert','alt_title_warn') );
			}	
			
			private function resultHandler4saveProductCharacterLayer(event:ResultEvent):void 
			{
				this.paramIo4productCharacterLayer = BProductCharacterLayer(event.result);	
				UtilUi.pubFun4RemoveWaitWindow();
				
				this.paramOut4winCloseWay = UtilUi.WINDOW_CLOSEWAY_OK;
				this.prvFun4close();
			}				
			
			private function onCancel():void
			{
				this.paramOut4winCloseWay = UtilUi.WINDOW_CLOSEWAY_CANCEL;
				this.prvFun4close();
			}	
			
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
			private function prvFun4prepare4save():Boolean
			{
				//	基本信息
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = "";
				this.paramIo4productCharacterLayer.value = Number(StringUtil.trim(this.txtValue.text)); 
				this.paramIo4productCharacterLayer.description = StringUtil.trim(this.txtDescription.text);
				this.paramIo4productCharacterLayer.comments = StringUtil.trim(this.txtComments.text);
				
				if( this.paramIo4productCharacterLayer.description == null || this.paramIo4productCharacterLayer.description == "" )
				{
					alert_msg = resourceManager.getString('alert','alert_msg_descriptionisnull');
					Alert.show( alert_msg, alert_title_hint );
					return false;	
				}
				
				return true;
			}							
			//	6	本地方法   end						


		]]>
	</fx:Script>
	
	<mx:Grid width="100%">
		<mx:GridRow width="100%" height="100%" verticalAlign="middle">
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
				<s:Label text="{resourceManager.getString('note','layerValue')}"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:TextInput width="100%" enabled="false" editable="false" text="{this.paramIo4productCharacterLayer.value}" id="txtValue"/>
			</mx:GridItem>
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
			</mx:GridItem>				
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
				<s:Label text="{resourceManager.getString('note','layerDesc')}"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle">
				<mx:TextInput width="100%" maxChars="255" text="{this.paramIo4productCharacterLayer.description}" id="txtDescription"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%" verticalAlign="middle">
			<mx:GridItem width="25%" height="100%" verticalAlign="middle">
				<s:Label text="{resourceManager.getString('note','remark')}"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%" verticalAlign="middle" colSpan="4">
				<mx:TextInput width="100%" maxChars="255" text="{this.paramIo4productCharacterLayer.comments}" id="txtComments"/>
			</mx:GridItem>
		</mx:GridRow>	
	</mx:Grid>	
	<s:BorderContainer width="100%" height="25" borderColor="#E4ECF7">
		<s:layout>
			<s:HorizontalLayout horizontalAlign="center"/>
		</s:layout>
		<s:Button label="{resourceManager.getString('button','save')}" click="onSave()"/>
		<s:Button label="{resourceManager.getString('button','cancel')}" click="onCancel()"/>
	</s:BorderContainer>
	
</s:TitleWindow>
