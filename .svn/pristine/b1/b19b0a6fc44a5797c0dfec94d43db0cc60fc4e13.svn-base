<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%" 
		   paddingLeft="10" paddingRight="10"
		   creationComplete="creationCompleteHandler(event)" 
		   xmlns:security="dmdd.dmddmx.com.security.*" xmlns:uirowdata="dmdd.dmddmx.com.uirowdata.*" 
		   xmlns:forecast="dmdd.dmddmx.com.forecast.*"
		   xmlns:containers="aks.aksmx.containers.*" xmlns:charts="aks.aksmx.charts.*"  xmlns:proorg="dmdd.dmddmx.com.proorg.*" xmlns:resize="flex.utils.ui.resize.*" xmlns:controls="aks.aksmx.controls.*" xmlns:common="dmdd.dmddmx.com.common.*" xmlns:buttons="com.cool.buttons.*" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvUiRowData" destination="ForecastHandleService" requestTimeout="0">	
			<s:method name="getUiRowDatas" result="resultHandler4getUiRowDatas(event)" fault="faultHandler4getUiRowDatas(event)">
			</s:method>
		</s:RemoteObject>
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvForecast" destination="ForecastService" requestTimeout="0">												
			<s:method name="saveForecastDatas4AdjustUI" result="resultHandler4saveForecastDatas4AdjustUI(event)" fault="faultHandler4saveForecastDatas4AdjustUI(event)">
			</s:method>
		</s:RemoteObject>
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvUiRowData4expansion" destination="ForecastHandleService" requestTimeout="0">	
			<s:method name="getUiRowDatas" result="resultHandler4getUiRowDatas4expansion(event)" fault="faultHandler4getUiRowDatas4expansion(event)">
			</s:method>
		</s:RemoteObject>
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvexpansion" destination="ForecastHandleService" requestTimeout="0">	
			<s:method name="checkForecastDataStatusIsInactive" result="resultHandler4checkForecastDataStatusIsInactive(event)" fault="faultHandler4checkForecastDataStatusIsInactive(event)">
			</s:method>
			<s:method name="getUiRowDatas" result="resultHandler4expansion(event)" fault="faultHandler4expansion(event)">
			</s:method>
		</s:RemoteObject>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import aks.aksas.charts.AksChartDataObject;
			import aks.aksas.collections.HashMap;
			import aks.aksas.controls.AksLockDataGridObject;
			import aks.aksas.utils.UtilArrayCollection;
			import aks.aksas.utils.UtilUi;
			
			import com.cool.assets.CoolAssetsFile;
			import com.cool.utils.AlertUtil;
			import com.cool.utils.DataListExportUtil;
			
			import dmdd.dmddas.common.constant.BizConst;
			import dmdd.dmddas.common.constant.SkinConst;
			import dmdd.dmddas.common.constant.SysConst;
			import dmdd.dmddas.common.constant.UIConst;
			import dmdd.dmddas.common.system.ClientEnvironment;
			import dmdd.dmddas.common.utils.UtilExceptionLocale;
			import dmdd.dmddas.common.utils.UtilPeriod;
			import dmdd.dmddas.common.utils.UtilStrKey;
			import dmdd.dmddas.common.utils.UtilUiPopbScope;
			import dmdd.dmddas.common.utils.UtilUiRowData;
			import dmdd.dmddas.common.utils.UtilUiRowDataChart;
			import dmdd.dmddas.common.vo.UiCondVo;
			import dmdd.dmddas.dataaccess.aidobject.ABForecastSetting;
			import dmdd.dmddas.dataaccess.aidobject.ABProOrg;
			import dmdd.dmddas.dataaccess.aidobject.ABUiRowData;
			import dmdd.dmddas.dataaccess.aidobject.ABUiRowDataProOrg;
			import dmdd.dmddas.dataaccess.bizobject.BBizData;
			import dmdd.dmddas.dataaccess.bizobject.BBizDataDefItemFcComb;
			import dmdd.dmddas.dataaccess.bizobject.BBizDataDefItemKpi;
			import dmdd.dmddas.dataaccess.bizobject.BBizDataDefItemTimeFc;
			import dmdd.dmddas.dataaccess.bizobject.BForecastMakeLog;
			import dmdd.dmddas.dataaccess.bizobject.BForecastMakeLogHfcItem;
			import dmdd.dmddas.dataaccess.bizobject.BForecastMakeLogProOrg;
			import dmdd.dmddas.dataaccess.bizobject.BSysDictionaryItem;
			import dmdd.dmddas.dataaccess.bizobject.BUiPopbScope;
			import dmdd.dmddas.dataaccess.bizobject.BUnit;
			import dmdd.dmddas.dataaccess.bizobject.BUnitGroup;
			import dmdd.dmddmx.com.chart.ForecastDataChartWindow;
			import dmdd.dmddmx.com.proorg.Com_ProOrg_LayerSetWindow;
			import dmdd.dmddmx.com.uirowdata.Com_UiRowData_ColumnSet;
			
			import flash.desktop.ClipboardFormats;
			
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.collections.IViewCursor;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.formatters.NumberFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			import mx.utils.object_proxy;
			
			//	描述    begin
			//  协同预测界面，可进行预测数据编辑、关联数据展示
			//	描述    end
			
			//	0	输入参数    begin						
			//	0	输入参数    end
			
			//	1	输出参数    begin
			//	1	输出参数    end
			
			//	2	本地变量    begin
			/** 可选单位 */
			[Bindable]
			private var arrUnits:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var dp4datagridRef:ArrayCollection = new ArrayCollection(); //参考显示数据
			[Bindable]
			private var dp4datagridRef4bak:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var dp4datagridEdit:ArrayCollection = new ArrayCollection();//可编辑数据
			[Bindable]
			private var dp4comAdgUiRowData4excute:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var dp4comAdgForecastMakeLogHfcItem:ArrayCollection = new ArrayCollection();						
			
			[Bindable]
			private var arrDictBizDataType:ArrayCollection = ClientEnvironment.getBizDataTypeArr();	
			
//			[Bindable]
//			private var dp4chart4scale:ArrayCollection = new ArrayCollection();
//			
//			private var arr4displayName4chart4scale:ArrayCollection = new ArrayCollection();
//			private var arr4yField4chart4scale:ArrayCollection = new ArrayCollection();	
//			[Bindable]
//			private var arr4editableLines:ArrayCollection = new ArrayCollection();
//			
//			[Bindable]
//			private var dp4chart4kpi:ArrayCollection = new ArrayCollection();
//			
//			private var arr4displayName4chart4kpi:ArrayCollection = new ArrayCollection();
//			private var arr4yField4chart4kpi:ArrayCollection = new ArrayCollection();
			
			/** 图形展示 */
			private var chartWindow:ForecastDataChartWindow;
			
			private var arr4checkedUiRowData4scale:ArrayCollection = new ArrayCollection();//记录选中的项
			
			private var hmap_ppcoocb_uiRowData_kpiBak:HashMap = new HashMap();
			
			//	added by liuzhen, 2011.07.01	begin
			private var hmap_BizDataFcHandId_arrBizDataTimeFc:HashMap = new HashMap();
			//	added by liuzhen, 2011.07.01	end
			
			private var pavVar4editBeginIndex:int =0;//标注可第一列编辑序号
			private var pavVa44editEndIdex:int = 0;//标注最后一列可编辑序号
			
			//条件中是否选中对应项
			private var isDisPro:Boolean = false;
			private var isDisProChar:Boolean = false;
			private var isDisOrg:Boolean = false;
			private var isDisOrgChar:Boolean = false;
			
			[Bindable]
			private var unitGroup:BUnitGroup = null;
			private var unit:BUnit = null;
			//	 显示设置		end
			
			
			//	查询条件		begin
			private var uiCondVo:UiCondVo; //快速查询条件，转换后
			private var uiPopbScope:BUiPopbScope;
			private var qcondArrUiRowDataProOrgs:ArrayCollection = new ArrayCollection();
			private var arr4UiRowDataProOrgs:ArrayCollection = new ArrayCollection();
			private var qcondArrBizDatas:ArrayCollection = new ArrayCollection();
			private var expansion:ArrayCollection = new ArrayCollection();
			private var qcondPeriodBegin:int;
			private var qcondPeriodEnd:int;
			
			/** 分层计算设置窗口 */
			private var layerSetWindow:Com_ProOrg_LayerSetWindow;
			
			[Bindable]
			private var qcondForecastSetting:ABForecastSetting = null;	//	ProOrg内的预测设置
			
			private var qcondEditPeriodLocBegin:int;	//	可以编辑的起始期间对qcondPeriodBegin的相对位置 
			private var qcondEditPeriodLocEnd:int;	//	可以编辑的终止期间对qcondPeriodBegin的相对位置
			[Bindable]
			private var arrEditPeriods:ArrayCollection = new ArrayCollection();//记录可以编辑期间
			//	查询条件		end
			[Bindable]
			private var uiRowDataRunNum:int = 0;//标记运行到第几个
			[Bindable]
			private var changeColor:ArrayCollection = new ArrayCollection()//标记需要改变颜色的行
			//	2	本地变量    end			
			
			//	3	公共方法    begin			
			//	3	公共方法    end		
			
			//	4	初始化方法    begin	
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				//	初始化界面参数	begin			
				arrDictBizDataType = new ArrayCollection();
				var arrSysDictBizDataType:ArrayCollection = ClientEnvironment.getBizDataTypeArr();
				if( arrSysDictBizDataType != null )
				{
					var i:int;
					var sysDictionaryItem:BSysDictionaryItem = null;
					for( i=0; i<arrSysDictBizDataType.length; i=i+1 )
					{
						sysDictionaryItem = BSysDictionaryItem(arrSysDictBizDataType.getItemAt(i));
						if( sysDictionaryItem.value == BizConst.GLOBAL_NULL_NULL ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_HISTORY || 
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_HISTORYAD ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_HISTORYADR ||
							
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_FCMODEL ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_FCHAND ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_FCCOMB ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_FCFINAL ||
							
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_TIMEHIS ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_TIMEFC ||
							
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_MONEY ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_MONEYCOMB ||
							
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_KPI ||
							sysDictionaryItem.value == BizConst.BIZDATA_TYPE_FORECASTASSESSMENT
						)
						{
							arrDictBizDataType.addItem( sysDictionaryItem );
						}				
					}
					
					//调整粘贴导入功能
					adgEdit.pasteFunction = handleTextPaste;
					
				}
				
				//	初始化界面参数	end
				
				//增加右键锁定模块 begin
				var aksright_edit:AksLockDataGridObject = new AksLockDataGridObject(adgEdit);				
				var aksright_view:AksLockDataGridObject = new AksLockDataGridObject(adgRef);
				aksright_edit.setLinkageObject(aksright_edit);
				aksright_view.setLinkageObject(aksright_view);
				//增加右键锁定模块 end
				
			}			
			//	4	初始化方法    end
			
			/** 设置单位组中的单位 */
			private function unitGroupSet(unit:BUnit):void
			{
				var unitGroupId:Number = unit.unitGroup.id;
				arrUnits = ClientEnvironment.getUnitGroup(unitGroupId).units;
				
				var selUnit:BUnit =null;
				for(var i:int=0;i<arrUnits.length;i++)
				{
					selUnit = BUnit(arrUnits.getItemAt(i));
					if(selUnit.id == unit.id)
					{	
						comboBoxUnit.selectedIndex = i; 
						comboBoxUnit.selectedItem = selUnit;
						break;
					}
				}
				
				comboBoxUnit.enabled = true;
			}
			
			//	5	事件响应方法    begin	
			
			private function callbackFunction4execute4comProOrgBizDataPeriodScope():void
			{					
				//	清除界面上原来查询的数据	begin
				dp4datagridRef = new ArrayCollection();
				dp4datagridEdit = new ArrayCollection();
				dp4comAdgForecastMakeLogHfcItem = new ArrayCollection();
				//	清除界面上原来查询的数据	end
				
				uiPopbScope = condSetComp.getUiPopbScope();
				
				//	通过服务器检查ProOrg内IsManaging的FcHand数据是否 被审核冻结	begin
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = null;
				
				var arrBizDataFcHand:ArrayCollection = new ArrayCollection();
				
				var i:int;
				var arrBizData:ArrayCollection = UtilUiPopbScope.getBizDatasArrByUiScope(uiPopbScope);
				var bizData:BBizData = null;
				
				var bizDataDefItemKpi:BBizDataDefItemKpi = null;
				for( i=0; i<arrBizData.length; i=i+1 )
				{
					bizData = BBizData( arrBizData.getItemAt(i) );
					if( bizData.type == BizConst.BIZDATA_TYPE_FCHAND &&
						ClientEnvironment.getBizDataIsManaging(bizData) == BizConst.GLOBAL_YESNO_YES )
					{
						arrBizDataFcHand.addItem( bizData );
					}
				}
				
				if( arrBizDataFcHand.length <= 0 )
				{ 
					alert_msg = resourceManager.getString('alert','alert_msg_nomanagingbizdatafchand17');
					Alert.show(alert_msg, alert_title_hint);
					return;		
				}

				UtilUi.pubFun4PopWaitWindow( this );
				srvexpansion.checkForecastDataStatusIsInactive( UtilUiPopbScope.getProOrgsArrByUiScope(uiPopbScope), arrBizDataFcHand, ClientEnvironment.getSysPeriod() );					
				//	通过服务器检查ProOrg内IsManaging的FcHand数据是否 被审核冻结	end				
			}
			
			
			private function faultHandler4checkForecastDataStatusIsInactive(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('alert','alt_title_warn') );
			}	
			
			private function resultHandler4checkForecastDataStatusIsInactive(event:ResultEvent):void 
			{
				UtilUi.pubFun4RemoveWaitWindow();
				
				var blIsInactive:Boolean = Boolean(event.result);
				
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = null;
				
				if( blIsInactive == true )
				{
					alert_msg = resourceManager.getString('alert','alert_msg_forecastdataisinactive17');
					Alert.show(alert_msg, alert_title_hint);
					
					return;							
				}
				
				UtilUi.pubFun4PopWaitWindow( this );
				
				uiCondVo = UtilUiPopbScope.getUiScopeCondVo(uiPopbScope,this);
				
				if(uiCondVo.isValid == false){
					UtilUi.pubFun4RemoveWaitWindow();
					AlertUtil.show(uiCondVo.inValidStr,AlertUtil.MESSAGE_ERROR);
					return;
				}
				
				unitGroup = uiCondVo.unitGroup;
				unit = uiCondVo.unit;
				unitGroupSet(unit);
				
				//	从 comProOrgBizDataPeriodScope中取得查询条件	begin
				qcondArrUiRowDataProOrgs = uiCondVo.arrUiRowDataProOrgs;
				qcondArrBizDatas = uiCondVo.arrBizDatas;
				
				//	从 comPeriodSpan 取得查询期间	并求得可编辑期间	begin
				qcondPeriodBegin =uiCondVo.periodBegin;
				qcondPeriodEnd = uiCondVo.periodEnd;
				
				
				//在这里开始将上级和下级置空
				arr4UiRowDataProOrgs = new ArrayCollection();
				var uiRowDataProOrg:ABUiRowDataProOrg;
				var uiRowDataProOrg_:ABUiRowDataProOrg;
				for(var i:int=0;i<qcondArrUiRowDataProOrgs.length;i++)
				{
					uiRowDataProOrg_ = ABUiRowDataProOrg(qcondArrUiRowDataProOrgs.getItemAt(i));
					uiRowDataProOrg = new ABUiRowDataProOrg();
					uiRowDataProOrg.copy(uiRowDataProOrg_);
					arr4UiRowDataProOrgs.addItem(uiRowDataProOrg);
				}
			
				dp4datagridEdit = new ArrayCollection();
				dp4datagridRef = new ArrayCollection();
				dp4comAdgForecastMakeLogHfcItem = new ArrayCollection();
				
				var blPageProOrg:Boolean = condSetComp.isPageProOrg;				
				
				if( blPageProOrg == true )
				{	
					//	初始化数据表格控制板
					comAksDataGridControlBar.pubFun4setResultParams( true, arr4UiRowDataProOrgs.length, ClientEnvironment.getSysParamPageSize() );
					
					//	去执行第一页查询
					
					var arrUiRowDataProOrgs:ArrayCollection = new ArrayCollection();
					var pageSize:int = ClientEnvironment.getSysParamPageSize();
					var indexBegin:int = 0;
					var indexEnd:int = pageSize * 1;
					if( indexEnd > arr4UiRowDataProOrgs.length )
					{
						indexEnd = arr4UiRowDataProOrgs.length;
					}
					//	分页查询,根据pageIndex计算需要传递给服务器的查询条件
					for( i=indexBegin; i<indexEnd; i=i+1 )
					{
						arrUiRowDataProOrgs.addItem( arr4UiRowDataProOrgs.getItemAt(i) );	
					}
					srvUiRowData.getUiRowDatas( arrUiRowDataProOrgs, qcondPeriodBegin, qcondPeriodEnd, qcondArrBizDatas, ClientEnvironment.getSysPeriod()  );	
				}
				else
				{	
					//	初始化数据表格控制板					
					comAksDataGridControlBar.pubFun4setResultParams( false, arr4UiRowDataProOrgs.length, arr4UiRowDataProOrgs.length );	
					srvUiRowData.getUiRowDatas( arr4UiRowDataProOrgs, qcondPeriodBegin, qcondPeriodEnd, qcondArrBizDatas, ClientEnvironment.getSysPeriod()  );
				}	
			}
			
			private function faultHandler4getUiRowDatas(event:FaultEvent):void
			{
				
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('alert','alt_title_warn') );
			}	
			
			private function resultHandler4getUiRowDatas(event:ResultEvent):void 
			{
				UtilUi.pubFun4RemoveWaitWindow();
				changeColor = new ArrayCollection();	
				
				//	检查  ForecastSetting		begin
				var arrForecastSetting:ArrayCollection = ArrayCollection( event.result );
				var arr4settings:ArrayCollection = ArrayCollection(arrForecastSetting.getItemAt(0));
				
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = null;

				if( arr4settings.length==0 )
				{
					//获取预测策略失败
					alert_msg = resourceManager.getString('alert','alert_msg_fail_forecastsetting17');
					Alert.show(alert_msg, alert_title_hint);
					return;						
				}
				
				if(  arr4settings.length>1 )
				{
					//业务范围内最终预测、预测期间、冻结期间、分解参照不一致
					alert_msg = resourceManager.getString('alert','alert_msg_multi_forecastsetting17');
					Alert.show(alert_msg, alert_title_hint);
					return;						
				}
				qcondForecastSetting = ABForecastSetting(arr4settings.getItemAt(0));
				var arrUiRowData:ArrayCollection = new ArrayCollection();				
				arrUiRowData=ArrayCollection(arrForecastSetting.getItemAt(1));
				

				//	检查  ForecastSetting		end	

				var editPeriodBegin:int = UtilPeriod.getPeriod( ClientEnvironment.getSysPeriod().forecastRunPeriod, qcondForecastSetting.fzPeriodNum );
				var editPeriodEnd:int = UtilPeriod.getPeriod( ClientEnvironment.getSysPeriod().forecastRunPeriod, qcondForecastSetting.fcPeriodNum -1);
				
				if( editPeriodBegin < qcondPeriodBegin )
				{
					qcondEditPeriodLocBegin = 0;
				}
				else
				{
					qcondEditPeriodLocBegin = UtilPeriod.getPeriodDifference( qcondPeriodBegin, editPeriodBegin );
				}
				if( editPeriodEnd > qcondPeriodEnd )
				{
					qcondEditPeriodLocEnd = UtilPeriod.getPeriodDifference( qcondPeriodBegin, qcondPeriodEnd );
				}
				else
				{
					qcondEditPeriodLocEnd = UtilPeriod.getPeriodDifference( qcondPeriodBegin, editPeriodEnd );
				}
				
				//	从 comPeriodSpan 取得查询期间	并求得可编辑期间	end
				adgEdit.setPeriodBeginEnd( qcondPeriodBegin, qcondPeriodEnd, false );
				//从 comProOrgBizDataPeriodScope中取得显示设置	begin
				refreshColumnDispControlSet(1);
				
				var periodLoc:int;
				pavVar4editBeginIndex = 10+qcondEditPeriodLocBegin;
				pavVa44editEndIdex = 10 + qcondEditPeriodLocEnd;
				arrEditPeriods = new ArrayCollection();
				
				//重新设置列的不可编辑区间
				for(periodLoc=0;periodLoc<qcondEditPeriodLocBegin;periodLoc++){
					adgEdit.pubFun4setDataColumnEditable( UtilPeriod.getPeriod( qcondPeriodBegin, periodLoc ), false );
				}
				
				//设置列的可编辑区间
				for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc = periodLoc + 1 )
				{
					adgEdit.pubFun4setDataColumnEditable( UtilPeriod.getPeriod( qcondPeriodBegin, periodLoc ), true );
					arrEditPeriods.addItem(String(UtilPeriod.getPeriod( qcondPeriodBegin, periodLoc )));
				}
				
				adgRef.setPeriodBeginEnd( qcondPeriodBegin, qcondPeriodEnd, false );
				
				showUiRowData(arrUiRowData);
			}				
			
			//	分页查询相关		begin			
			private function prvFun4pageQueryForecastDatas( _pageIndex:int ):void
			{
				UtilUi.pubFun4PopWaitWindow( this );
				var arrUiRowDataProOrgs:ArrayCollection = new ArrayCollection();
				var i:int;
				var pageSize:int = ClientEnvironment.getSysParamPageSize();
				var indexBegin:int = pageSize * (_pageIndex-1);
				var indexEnd:int = pageSize * _pageIndex;
				if( indexEnd > arr4UiRowDataProOrgs.length )
				{
					indexEnd = arr4UiRowDataProOrgs.length;
				}
				//	分页查询,根据pageIndex计算需要传递给服务器的查询条件
				for( i=indexBegin; i<indexEnd; i=i+1 )
				{
					arrUiRowDataProOrgs.addItem( arr4UiRowDataProOrgs.getItemAt(i) );	
				}
				
				dp4datagridEdit = new ArrayCollection();
				dp4datagridRef = new ArrayCollection();
				dp4comAdgForecastMakeLogHfcItem = new ArrayCollection();
				
				srvUiRowData.getUiRowDatas( arrUiRowDataProOrgs, qcondPeriodBegin, qcondPeriodEnd, qcondArrBizDatas, ClientEnvironment.getSysPeriod()  );					
			}			
			//	分页查询相关		end		
			
	
			
			private function showUiRowData(_arrRstABUiRowData:ArrayCollection):void 
			{
				btnRefreshChart.enabled = true;
				
				dp4datagridEdit = new ArrayCollection();
				dp4datagridRef = new ArrayCollection();
				dp4datagridRef4bak = new ArrayCollection();
				dp4comAdgForecastMakeLogHfcItem = new ArrayCollection();
				
				//	added by liuzhen, 2011.07.01	begin
				//	有数据的预测类业务数据，收集，以便用于“计算”功能		
				hmap_BizDataFcHandId_arrBizDataTimeFc = new HashMap();
				
				var hmapBizData_FcHand:HashMap = new HashMap();
				var hmapBizData_FcTime:HashMap = new HashMap();
				var hmapBizData_FcComb:HashMap = new HashMap();
				var hmapBizData_Kpi:HashMap = new HashMap();
				//	added by liuzhen, 2011.07.01	end
				
				
				var arrRstABUiRowData:ArrayCollection =_arrRstABUiRowData;
				if( arrRstABUiRowData == null || arrRstABUiRowData.length <= 0 )
				{
					UtilUi.pubFun4RemoveWaitWindow();
					return;
				}
				
				var selectedUnit:BUnit = BUnit(comboBoxUnit.selectedItem);
				
				var i:int;
				var uiRowData:ABUiRowData = null;
				
				//	kpi相关	begin
				var uiRowData_kpiBak:ABUiRowData = null;
				var strKey4ppcoocb:String = null;
				var kpiFormula:int;
				var periodDiff:int;
				var periodLoc:int;
				var aitemValue:Number;
				var bitemValue:Number;
				var kpiValue:Number;
				//	kpi相关	end
				
				for( i=0; i<arrRstABUiRowData.length; i=i+1 )
				{
					uiRowData = ABUiRowData(arrRstABUiRowData.getItemAt(i));
					if( i == 0 )
					{
						periodDiff = UtilPeriod.getPeriodDifference( uiRowData.periodBegin, uiRowData.periodEnd );
					}
					
					if( uiRowData.bizData.type != BizConst.BIZDATA_TYPE_KPI )
					{
						//	非Kpi数据直接放入显示表格
						if( selectedUnit != null && selectedUnit.isBase ==BizConst.GLOBAL_YESNO_NO )
						{
							uiRowData.exchangeUnit( 1, selectedUnit.exchangeRate );
						}					
						
						if( uiRowData.bizData.type == BizConst.BIZDATA_TYPE_FCHAND &&
							ClientEnvironment.getBizDataIsManaging(uiRowData.bizData) == BizConst.GLOBAL_YESNO_YES )
						{
							dp4datagridEdit.addItem( uiRowData );
							
							//	added by liuzhen, 2011.07.01	begin
							hmapBizData_FcHand.put( uiRowData.bizData.id, uiRowData.bizData );
							//	added by liuzhen, 2011.07.01	end
						}
						else
						{
							dp4datagridRef.addItem( uiRowData );
							dp4datagridRef4bak.addItem(uiRowData);
							//	added by liuzhen, 2011.07.01	begin
							if( uiRowData.bizData.type == BizConst.BIZDATA_TYPE_TIMEFC )
							{
								hmapBizData_FcTime.put( uiRowData.bizData.id, uiRowData.bizData );
							}
							else if( uiRowData.bizData.type == BizConst.BIZDATA_TYPE_FCCOMB )
							{
								hmapBizData_FcComb.put( uiRowData.bizData.id, uiRowData.bizData );
							}
							//	added by liuzhen, 2011.07.01	end							
						}						
					}
					else
					{
						//	kpi数据，备份并计算真正的Kpi值
						if( uiRowData.bizData.bizDataDefItems != null && uiRowData.bizData.bizDataDefItems.length == 1 )
						{
							//	added by liuzhen, 2011.07.01	begin
							hmapBizData_Kpi.put( uiRowData.bizData.id, uiRowData.bizData );
							//	added by liuzhen, 2011.07.01	end
							
							kpiFormula = BBizDataDefItemKpi(uiRowData.bizData.bizDataDefItems.getItemAt(0)).kpiFormula;
							
							//	备份		begin
							uiRowData_kpiBak = new ABUiRowData();
							uiRowData_kpiBak.copyDeep( uiRowData );
							if( selectedUnit != null && selectedUnit.isBase ==BizConst.GLOBAL_YESNO_NO )
							{
								uiRowData_kpiBak.exchangeKPIUnit( 1, selectedUnit.exchangeRate );
							}
							strKey4ppcoocb = UtilStrKey.getStrKey4PPcOOcB( uiRowData_kpiBak.product, uiRowData_kpiBak.productCharacter, uiRowData_kpiBak.organization, uiRowData_kpiBak.organizationCharacter, uiRowData_kpiBak.bizData );
							hmap_ppcoocb_uiRowData_kpiBak.put( strKey4ppcoocb, uiRowData_kpiBak );
							//	备份		end
							
							//	计算		begin
							var numberFormatter:NumberFormatter = new NumberFormatter();
							numberFormatter.precision = 2;
							var myPattern:RegExp = /,/g;//用来去掉格式化后的逗号
							
							for( periodLoc = 0; periodLoc <= periodDiff; periodLoc = periodLoc + 1 )
							{
								aitemValue = uiRowData_kpiBak.pubFun4getPeriodDataValue( periodLoc );
								bitemValue = uiRowData_kpiBak.pubFun4getPeriodDataValueBak( periodLoc );
								
								if( kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_RATIO )
								{
									if( isNaN(aitemValue) || isNaN(bitemValue) )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );
									}
									else if( bitemValue == 0 )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
									}
									else
									{
										kpiValue = aitemValue / bitemValue * 100.0;
										kpiValue = Number( kpiValue.toFixed(2 ));
										
										uiRowData.pubFun4setPeriodDataValue( periodLoc, kpiValue );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
									}
								}
								else if( kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO )
								{
									if( isNaN(aitemValue) || isNaN(bitemValue) )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );
									}
									else if( bitemValue == 0 )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
									}
									else
									{
										kpiValue = Math.abs(aitemValue - bitemValue) / bitemValue * 100.0;
										kpiValue = Number( numberFormatter.format( kpiValue ).replace(myPattern,"" ) );
										
										uiRowData.pubFun4setPeriodDataValue( periodLoc, kpiValue );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
									}									
								}
								else if( kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_I )
								{
									if( isNaN(aitemValue) || isNaN(bitemValue) )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );
									}
									else if( bitemValue == 0 )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
									}
									else
									{
										kpiValue = (1- Math.abs(aitemValue - bitemValue) / bitemValue) * 100.0;
										kpiValue = Number( numberFormatter.format( kpiValue ).replace(myPattern,"" ) );
										
										uiRowData.pubFun4setPeriodDataValue( periodLoc, kpiValue );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
									}									
								}								
								else if( kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_II )
								{
									if( isNaN(aitemValue) )
									{
										aitemValue = 0;
									}
									if( isNaN(bitemValue) )
									{
										bitemValue = 0;
									}
									
									if( aitemValue + bitemValue == 0 )
									{
										//	分母为0
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );																		
									}
									else
									{
										kpiValue = 2.0 * Math.abs(aitemValue - bitemValue) / (aitemValue + bitemValue) * 100.0;
										kpiValue = Number( numberFormatter.format( kpiValue ).replace(myPattern,"" ) );
										
										uiRowData.pubFun4setPeriodDataValue( periodLoc, kpiValue );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
									}									
								}
								else if(kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_III)
								{
									kpiValue = (aitemValue - bitemValue) ;
									kpiValue = Number( numberFormatter.format( kpiValue ).replace(myPattern,"" ) );
									
									uiRowData.pubFun4setPeriodDataValue( periodLoc, kpiValue );
									uiRowData.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );
								}
								else if(kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_IV)
								{
									kpiValue =  Math.abs(aitemValue - bitemValue) ;
									kpiValue = Number( numberFormatter.format( kpiValue ).replace(myPattern,"" ) );
									
									uiRowData.pubFun4setPeriodDataValue( periodLoc, kpiValue );
									uiRowData.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );
								}
								else if(kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_V)
								{
									if( isNaN(aitemValue) || isNaN(bitemValue) )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );
									}
									else if( bitemValue == 0 )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
									}
									else
									{
										kpiValue = (aitemValue - bitemValue) / bitemValue * 100.0;
										kpiValue = Number( numberFormatter.format( kpiValue ).replace(myPattern,"" ) );
										
										uiRowData.pubFun4setPeriodDataValue( periodLoc, kpiValue );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
									}	
								}
								else if(kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_VI)
								{
									if( isNaN(aitemValue) || isNaN(bitemValue) )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );
									}
									else if( bitemValue == 0 )
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
									}
									else if(aitemValue<0 || bitemValue<0)
									{
										uiRowData.pubFun4setPeriodDataValue( periodLoc, 0 );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, 0 );	
									}
									else
									{
										if(aitemValue<bitemValue)
										{
											kpiValue = aitemValue / bitemValue * 100.0;
											kpiValue = Number( numberFormatter.format( kpiValue ) );
										}
										else
										{
											kpiValue = bitemValue / aitemValue * 100.0;
											kpiValue = Number( numberFormatter.format( kpiValue ) );
										}
										
										uiRowData.pubFun4setPeriodDataValue( periodLoc, kpiValue );
										uiRowData.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
									}	
								}
								else
								{
									//	out of design
									uiRowData.pubFun4setPeriodDataValue( periodLoc, NaN );
									uiRowData.pubFun4setPeriodDataValueBak( periodLoc, NaN );									
								}
							}
							
							dp4datagridRef.addItem( uiRowData );
							dp4datagridRef4bak.addItem(uiRowData);
						}
						//	计算		end
					}
					
				}
				
				//	added by liuzhen, 2011.07.01	begin
				//	收集当 FcHand变化时会受影响并被显示或者后继使用的TimeFc
				var bizData:BBizData = null;
				var itemBizData:BBizData = null;
				var j:int;
				
				//	FcComb中使用的TimeFc
				var arrBizData_FcComb:ArrayCollection = hmapBizData_FcComb.getValues();
				if( arrBizData_FcComb != null )
				{
					for( i=0; i<arrBizData_FcComb.length; i=i+1 )
					{
						bizData = BBizData(arrBizData_FcComb.getItemAt(i));
						if( bizData.bizDataDefItems != null )
						{
							for( j=0; j<bizData.bizDataDefItems.length; j=j+1 )
							{
								itemBizData = BBizDataDefItemFcComb(bizData.bizDataDefItems.getItemAt( j )).itemBizData;
								if( itemBizData.type == BizConst.BIZDATA_TYPE_TIMEFC )
								{
									hmapBizData_FcTime.put( itemBizData.id, itemBizData );	
								}
							}
						}
					}					
				}
				
				//	Kpi中使用的TimeFc
				var arrBizData_Kpi:ArrayCollection = hmapBizData_Kpi.getValues();
				if( arrBizData_Kpi != null )
				{
					for( i=0; i<arrBizData_Kpi.length; i=i+1 )
					{
						bizData = BBizData(arrBizData_Kpi.getItemAt(i));
						if( bizData.bizDataDefItems != null )
						{
							itemBizData = BBizDataDefItemKpi(bizData.bizDataDefItems.getItemAt( 0 )).aitemBizData;
							if( itemBizData.type == BizConst.BIZDATA_TYPE_TIMEFC )
							{
								hmapBizData_FcTime.put( itemBizData.id, itemBizData );	
							}
							
							itemBizData = BBizDataDefItemKpi(bizData.bizDataDefItems.getItemAt( 0 )).bitemBizData;
							if( itemBizData.type == BizConst.BIZDATA_TYPE_TIMEFC )
							{
								hmapBizData_FcTime.put( itemBizData.id, itemBizData );	
							}							
						}
					}					
				}				
				
				//	检查受可编辑FcHand的影响的、并会显示或者使用的 TimeFc
				var periodDiff2Current:int = 0; 				
				var bizDataTimeFc:BBizData = null;
				var timeFormulaDictValue:int = -1;			
				var bizDataFcHand:BBizData = null;
				
				var arrBizData_FcTime:ArrayCollection = null;
				
				if( arrBizData_FcTime != null )
				{
					for( i=0; i<arrBizData_FcTime.length; i=i+1 )
					{
						bizDataTimeFc = BBizData(arrBizData_FcTime.getItemAt(i));
						
						timeFormulaDictValue = BBizDataDefItemTimeFc(bizDataTimeFc.bizDataDefItems.getItemAt(0)).timeFormula;
						itemBizData = BBizDataDefItemTimeFc(bizDataTimeFc.bizDataDefItems.getItemAt(0)).itemBizData;
						
						bizDataFcHand = hmapBizData_FcHand.getValue( itemBizData.id ); 
						if( bizDataFcHand != null )
						{
							//	检查 FcHand变化时，相应的期间预测的变化是否会超出显示范围
							if( timeFormulaDictValue  == BizConst.BIZDATADEFITEM_TIMEFORMULA_COUNTERPARTOFLAST1YEAR )
							{
								periodDiff2Current = ClientEnvironment.getSysPeriod().periodNumPerYear;
							}
							else if( timeFormulaDictValue  == BizConst.BIZDATADEFITEM_TIMEFORMULA_COUNTERPARTOFLAST2YEAR )
							{
								periodDiff2Current = 2*ClientEnvironment.getSysPeriod().periodNumPerYear;
							}
							else if( timeFormulaDictValue  == BizConst.BIZDATADEFITEM_TIMEFORMULA_COUNTERPARTOFLAST3YEAR )
							{
								periodDiff2Current = 3*ClientEnvironment.getSysPeriod().periodNumPerYear;
							}
							else if( timeFormulaDictValue  == BizConst.BIZDATADEFITEM_TIMEFORMULA_LAST1PERIOD )
							{
								periodDiff2Current = 1;
							}
							
							if( periodDiff >= periodDiff2Current )
							{
								//	会被显示或者使用
								arrBizData_FcTime = hmap_BizDataFcHandId_arrBizDataTimeFc.getValue( bizDataFcHand.id );
								if( arrBizData_FcTime == null )
								{
									arrBizData_FcTime = new ArrayCollection();
								}
								arrBizData_FcTime.addItem( bizData );
								
								hmap_BizDataFcHandId_arrBizDataTimeFc.put( bizDataFcHand.id, arrBizData_FcTime );								
							}
							
						}
					}
				}
				
				var editHeight:int = dp4datagridEdit.length * 20;
				if(editHeight < 150){
					editHeight = 150;
				}else if (editHeight > 280){
					editHeight = 280;
				}
				
				adgEdit.height = editHeight;
				//	added by liuzhen, 2011.07.01	end											
				adgEdit.validateNow();
				
				comAksDataGridControlBar.pubFun4setResultParams( true, dp4datagridEdit.length, ClientEnvironment.getSysParamPageSize() );
				
				UtilUi.pubFun4RemoveWaitWindow();
			}				
			
			private function onChange4comboBoxUnit():void
			{
				//	单位变化	begin
				var selectedUnit:BUnit = BUnit(comboBoxUnit.selectedItem);
				var i:int;
				
				var uiRowData:ABUiRowData = null;
				var forecastMakeLogHfcItem:BForecastMakeLogHfcItem = null;
				if( selectedUnit != null && unit != null && selectedUnit.id != unit.id )
				{ 
					if( dp4datagridRef != null )
					{
						for( i=0; i<dp4datagridRef.length; i=i+1 )
						{
							uiRowData = ABUiRowData(dp4datagridRef.getItemAt(i));
							uiRowData.exchangeUnit( unit.exchangeRate , selectedUnit.exchangeRate );
						}
					}	
					
					if( dp4datagridEdit != null )
					{
						for( i=0; i<dp4datagridEdit.length; i=i+1 )
						{
							uiRowData = ABUiRowData(dp4datagridEdit.getItemAt(i));
							uiRowData.exchangeUnit( unit.exchangeRate , selectedUnit.exchangeRate );
						}
					}	
					
					if( dp4comAdgForecastMakeLogHfcItem != null )
					{
						for( i=0; i<dp4comAdgForecastMakeLogHfcItem.length; i=i+1 )
						{
							forecastMakeLogHfcItem = BForecastMakeLogHfcItem(dp4comAdgForecastMakeLogHfcItem.getItemAt(i)); 
							forecastMakeLogHfcItem.exchangeUnit( unit.exchangeRate , selectedUnit.exchangeRate );
						}
					}
					
					unit = selectedUnit;
				}
				//	单位变化	end
			}
			
			private function onAddScale():void
			{
				if( adgEdit.selectedItem == null )
				{
					return;
				}
				
				var scaleValue:Number = Number( adjustTextInput.text);
				if( checkScaleValue(scaleValue) == false )
				{
					return;
				}
				
				var selectedUiRowData:ABUiRowData = ABUiRowData(adgEdit.selectedItem);
				var i:int;
				
				for( i=qcondEditPeriodLocBegin; i<=qcondEditPeriodLocEnd; i=i+1 )
				{
					var oldValue:Number = selectedUiRowData.pubFun4getPeriodDataValue(i);
					var newValue:Number = oldValue+scaleValue;
					selectedUiRowData.pubFun4setPeriodDataValue( i, newValue );
				}
			}
			private function onSubScale():void
			{
				if( adgEdit.selectedItem == null )
				{
					return;
				}
				
				var scaleValue:Number = Number(adjustTextInput.text);
				if( checkScaleValue(scaleValue) == false )
				{
					return;
				}
				
				var selectedUiRowData:ABUiRowData = ABUiRowData(adgEdit.selectedItem);
				var i:int;

				for( i=qcondEditPeriodLocBegin; i<=qcondEditPeriodLocEnd; i=i+1 )
				{
					var oldValue:Number = selectedUiRowData.pubFun4getPeriodDataValue(i);
					var newValue:Number = oldValue-scaleValue;
					if( newValue < 0 )
					{
						newValue = 0;
					}
					selectedUiRowData.pubFun4setPeriodDataValue( i, newValue );
				}
			}	
			private function onSetScale():void
			{
				if( adgEdit.selectedItem == null )
				{
					return;
				}
				
				var scaleValue:Number = Number(adjustTextInput.text);
				if( checkScaleValue(scaleValue) == false )
				{
					return;
				}
				
				var selectedUiRowData:ABUiRowData = ABUiRowData(adgEdit.selectedItem);
				var i:int;

				for( i=qcondEditPeriodLocBegin; i<=qcondEditPeriodLocEnd; i=i+1 )
				{
					selectedUiRowData.pubFun4setPeriodDataValue( i, scaleValue );
				}
			}			
			
			private function onAddPercent():void
			{
				if( adgEdit.selectedItem == null )
				{
					return;
				}
				var percentValue:Number = Number(adjustTextInput.text);
				if( checkPercentValue(percentValue) == false )
				{
					return;
				}
				
				var selectedUiRowData:ABUiRowData = ABUiRowData(adgEdit.selectedItem);
				var i:int;

				for( i=qcondEditPeriodLocBegin; i<=qcondEditPeriodLocEnd; i=i+1 )
				{
					var oldValue:Number = selectedUiRowData.pubFun4getPeriodDataValue(i);
					var newValue:Number = Math.round( oldValue + oldValue*percentValue*0.01 );
					selectedUiRowData.pubFun4setPeriodDataValue( i, newValue );
				}			
			}	
			private function onSubPercent():void
			{
				if( adgEdit.selectedItem == null )
				{
					return;
				}
				var percentValue:Number = Number(adjustTextInput.text);
				if( checkPercentValue(percentValue) == false )
				{
					return;
				}
				
				var selectedUiRowData:ABUiRowData = ABUiRowData(adgEdit.selectedItem);
				var i:int;

				for( i=qcondEditPeriodLocBegin; i<=qcondEditPeriodLocEnd; i=i+1 )
				{
					var oldValue:Number = selectedUiRowData.pubFun4getPeriodDataValue(i);
					var newValue:Number = Math.round( oldValue - oldValue*percentValue*0.01 );
					if( newValue < 0 )
					{
						newValue = 0;
					}
					selectedUiRowData.pubFun4setPeriodDataValue( i, newValue );
				}			
			}				
			
			/**
			 * 根据FcHand in edit数据的变化情况，对(TimeFc FcComb FcFinal Kpi) in view 数据进行变化，并处理ForecastMakeLogHfcItem
			 */ 
			private function onCompute():void
			{
				var selectedUnit:BUnit = BUnit(comboBoxUnit.selectedItem);				
				
				var i:int;
				
				var hmap4changed_ppcoocb_uiRowData_FcHand:HashMap = new HashMap();	//	存放变化了的 uiRowData_FcHand
				var hmap4changed_ppcoocb_uiRowData_FcHCF:HashMap = new HashMap();	//	存放变化了的 uiRowData_FcHand uiRowData_FcComb uiRowData_FcFinal
				
				//	added by liuzhen, 2011.07.01	begin
				var hmap4changed_ppcoocb_uiRowData_FcTime:HashMap = new HashMap();	//	存放变化了的 uiRowData_TimeFc
				//	added by liuzhen, 2011.07.01	end
				
				var strKey4uiRowData:String = null;
				
				//	处理	forecastMakeLogHfcItem	begin
				//	把 forecastMakeLogHfcItem 放到  hashmap 中，方便使用	begin
				var hmap_forecastMakeLogHfcItem:HashMap = new HashMap();
				var strKey4forecastMakeLogHfcItem:String = null;
				var forecastMakeLogHfcItem:BForecastMakeLogHfcItem = null;
				for( i=0; i<dp4comAdgForecastMakeLogHfcItem.length; i=i+1 )
				{
					forecastMakeLogHfcItem = BForecastMakeLogHfcItem(dp4comAdgForecastMakeLogHfcItem.getItemAt(i));
					strKey4forecastMakeLogHfcItem = UtilStrKey.getStrKey4PPcOOcPB(	forecastMakeLogHfcItem.product,
						forecastMakeLogHfcItem.productCharacter,
						forecastMakeLogHfcItem.organization,
						forecastMakeLogHfcItem.organizationCharacter,
						forecastMakeLogHfcItem.period,
						forecastMakeLogHfcItem.bizData																						
					);
					hmap_forecastMakeLogHfcItem.put( strKey4forecastMakeLogHfcItem, forecastMakeLogHfcItem );
				}
				//	把 forecastMakeLogHfcItem 放到  hashmap 中，方便使用	end
				
				var uiRowData_TimeFc_changed:ABUiRowData = null;
				
				var periodLoc:int;
				var uiRowData_edit:ABUiRowData = null;
				var period:int;
				var value:Number;
				var blChanged:Boolean = false;
				for( i=0; i<dp4datagridEdit.length; i=i+1 )
				{
					uiRowData_edit = ABUiRowData( dp4datagridEdit.getItemAt(i) );
					blChanged = false;
					
					for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
					{
						period = UtilPeriod.getPeriod( qcondPeriodBegin, periodLoc );
						strKey4forecastMakeLogHfcItem = UtilStrKey.getStrKey4PPcOOcPB(	uiRowData_edit.product,
							uiRowData_edit.productCharacter,
							uiRowData_edit.organization,
							uiRowData_edit.organizationCharacter,
							period,
							uiRowData_edit.bizData
						);
						forecastMakeLogHfcItem = BForecastMakeLogHfcItem(hmap_forecastMakeLogHfcItem.getValue( strKey4forecastMakeLogHfcItem ));
						
						value = uiRowData_edit.pubFun4getPeriodDataValue(periodLoc);
						if( isNaN(value) )
						{
							value = 0;
							uiRowData_edit.pubFun4setPeriodDataValue( periodLoc, 0 );
						}
						
						if( Math.round(value*selectedUnit.exchangeRate) != uiRowData_edit.pubFun4getPeriodDataValueBak(periodLoc) )
						{
							//	值变化	
							blChanged = true;
							
							if( forecastMakeLogHfcItem != null )
							{
								//	更新
								forecastMakeLogHfcItem.newValue = value;
							}
							else
							{
								//	新建		
								forecastMakeLogHfcItem = new BForecastMakeLogHfcItem();
								forecastMakeLogHfcItem.product = uiRowData_edit.product;
								forecastMakeLogHfcItem.productCharacter = uiRowData_edit.productCharacter;
								forecastMakeLogHfcItem.organization = uiRowData_edit.organization;
								forecastMakeLogHfcItem.organizationCharacter = uiRowData_edit.organizationCharacter;
								forecastMakeLogHfcItem.bizData = uiRowData_edit.bizData;
								forecastMakeLogHfcItem.period = period;
								forecastMakeLogHfcItem.oldValue = uiRowData_edit.pubFun4getPeriodDataValueBak(periodLoc)*1.0/selectedUnit.exchangeRate;
								
								forecastMakeLogHfcItem.newValue = value;
								
								hmap_forecastMakeLogHfcItem.put( strKey4forecastMakeLogHfcItem, forecastMakeLogHfcItem );
							}
						}
						else
						{
							//	值不变化
							if( forecastMakeLogHfcItem != null )
							{
								//	值恢复的情形
								//	删除
								hmap_forecastMakeLogHfcItem.remove( strKey4forecastMakeLogHfcItem );
								//值回复情况还是需要计算下kpi的
								strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_edit.product, uiRowData_edit.productCharacter, uiRowData_edit.organization, uiRowData_edit.organizationCharacter, uiRowData_edit.bizData );
								hmap4changed_ppcoocb_uiRowData_FcHCF.put( strKey4uiRowData, uiRowData_edit );
							}
						}
					}
					
					if( blChanged == true )
					{
						strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_edit.product, uiRowData_edit.productCharacter, uiRowData_edit.organization, uiRowData_edit.organizationCharacter, uiRowData_edit.bizData );
						hmap4changed_ppcoocb_uiRowData_FcHand.put( strKey4uiRowData, uiRowData_edit );
						hmap4changed_ppcoocb_uiRowData_FcHCF.put( strKey4uiRowData, uiRowData_edit );
						
						//	added by liuzhen, 2011.07.01	begin
						//	把该FcHand影响的、会用到的TimeFc都重新计算以备后用
						var bizDataTimeFc:BBizData = null;
						var timeFormulaDictValue:int = -1;
						var periodDiff2Current:int = 0; 

						var arrBizDataTimeFc:ArrayCollection = hmap_BizDataFcHandId_arrBizDataTimeFc.getValue( uiRowData_edit.bizData.id );
						if( arrBizDataTimeFc != null )
						{
							for( i=0; i<arrBizDataTimeFc.length; i=i+1 )
							{
								periodDiff2Current = 0; 
								
								bizDataTimeFc = BBizData( arrBizDataTimeFc.getItemAt( i ) );
								timeFormulaDictValue = BBizDataDefItemTimeFc( bizDataTimeFc.bizDataDefItems.getItemAt(0) ).timeFormula;
								if( timeFormulaDictValue  == BizConst.BIZDATADEFITEM_TIMEFORMULA_COUNTERPARTOFLAST1YEAR )
								{
									periodDiff2Current = ClientEnvironment.getSysPeriod().periodNumPerYear;
								}
								else if( timeFormulaDictValue  == BizConst.BIZDATADEFITEM_TIMEFORMULA_COUNTERPARTOFLAST2YEAR )
								{
									periodDiff2Current = 2*ClientEnvironment.getSysPeriod().periodNumPerYear;
								}
								else if( timeFormulaDictValue  == BizConst.BIZDATADEFITEM_TIMEFORMULA_COUNTERPARTOFLAST3YEAR )
								{
									periodDiff2Current = 3*ClientEnvironment.getSysPeriod().periodNumPerYear;
								}
								else if( timeFormulaDictValue  == BizConst.BIZDATADEFITEM_TIMEFORMULA_LAST1PERIOD )
								{
									periodDiff2Current = 1;
								}
								
								uiRowData_TimeFc_changed = new ABUiRowData();
								uiRowData_TimeFc_changed.copyDeep( uiRowData_edit );
								//	TimeFc：BizData is different, the periodBegin is set with offset
								uiRowData_TimeFc_changed.bizData = bizDataTimeFc;
								uiRowData_TimeFc_changed.periodBegin = UtilPeriod.getPeriod( uiRowData_edit.periodBegin, periodDiff2Current );
								uiRowData_TimeFc_changed.periodEnd = UtilPeriod.getPeriod( uiRowData_edit.periodEnd, periodDiff2Current );
								uiRowData_TimeFc_changed.detailProOrgIds = null;
								uiRowData_TimeFc_changed.isChecked = false;
								
								strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_TimeFc_changed.product, uiRowData_TimeFc_changed.productCharacter, uiRowData_TimeFc_changed.organization, uiRowData_TimeFc_changed.organizationCharacter, uiRowData_TimeFc_changed.bizData );
								hmap4changed_ppcoocb_uiRowData_FcTime.put( strKey4uiRowData, uiRowData_TimeFc_changed );
								
							}
						}
						
						
						//	added by liuzhen, 2011.07.01	end
					}
				}
				
				//	从 hashmap 取回	begin
				dp4comAdgForecastMakeLogHfcItem = hmap_forecastMakeLogHfcItem.getValues()
				//	从 hashmap 取回	end
				//	处理	forecastMakeLogHfcItem	end
				
					
				//	更新显示的 TimeFc	begin
				//	2011.07.01 by liuzhen	begin
				var periodDiff:int = 0;
				var periodLoc_offsetByTimeFormula:int = 0;
				var periodLoc_start:int = 0;
				
				for( i=0; i<dp4datagridRef.length; i=i+1 )
				{
					uiRowData_view = ABUiRowData( dp4datagridRef.getItemAt(i) );
					
					if( uiRowData_view.bizData.type == BizConst.BIZDATA_TYPE_TIMEFC )
					{
						strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_view.product, uiRowData_view.productCharacter, uiRowData_view.organization, uiRowData_view.organizationCharacter, uiRowData_view.bizData );
						uiRowData_TimeFc_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcTime.getValue(strKey4uiRowData) );
						if( uiRowData_TimeFc_changed != null )
						{
							//	influenced by changed FcHand
							periodLoc_offsetByTimeFormula = UtilPeriod.getPeriodDifference( uiRowData_view.periodBegin, uiRowData_TimeFc_changed.periodBegin );
							if( periodLoc_offsetByTimeFormula >= qcondEditPeriodLocBegin )
							{
								periodLoc_start = periodLoc_offsetByTimeFormula;
							}
							else
							{
								periodLoc_start = qcondEditPeriodLocBegin;
							}
							
							for( periodLoc = periodLoc_start; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1)
							{
								uiRowData_view.pubFun4setPeriodDataValue( periodLoc, uiRowData_TimeFc_changed.pubFun4getPeriodDataValue(periodLoc - periodLoc_offsetByTimeFormula) );
								uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, uiRowData_TimeFc_changed.pubFun4getPeriodDataValueBak(periodLoc - periodLoc_offsetByTimeFormula) );
							}
						}
					}
				}					
				//	2011.07.01 by liuzhen	end
				//	更新显示的 TimeFc	end				
				
				//	计算	FcComb	begin
				var incrementValue:Number;
				var newValue:Number;
				var uiRowData_changed:ABUiRowData = null;
				var uiRowData_view:ABUiRowData = null;
				var arrBizDataDefItem:ArrayCollection = null;
				var bizDataDefItemFcComb:BBizDataDefItemFcComb = null;
				var j:int;
				for( i=0; i<dp4datagridRef.length; i=i+1 )
				{
					uiRowData_view = ABUiRowData( dp4datagridRef.getItemAt(i) );
					
					
					if( uiRowData_view.bizData.type == BizConst.BIZDATA_TYPE_FCCOMB )
					{
						//	把值恢复成以备份值作为计算基点	begin
						for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
						{
							uiRowData_view.pubFun4setPeriodDataValue( periodLoc, uiRowData_view.pubFun4getPeriodDataValueBak(periodLoc)*1.0/selectedUnit.exchangeRate );
						}															
						//	把值恢复成备份值作为计算基点	end
						
						blChanged = false;
						
						arrBizDataDefItem = uiRowData_view.bizData.bizDataDefItems;
						if( arrBizDataDefItem != null && arrBizDataDefItem.length > 0 )
						{
							for( j=0; j<arrBizDataDefItem.length; j=j+1 )
							{
								bizDataDefItemFcComb = BBizDataDefItemFcComb(arrBizDataDefItem.getItemAt(j));
								
								strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_view.product, uiRowData_view.productCharacter, uiRowData_view.organization, uiRowData_view.organizationCharacter, bizDataDefItemFcComb.itemBizData );
								
								//	modified by liuzhen, 2011.07.02	begin
								/*
								uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcHand.getValue(strKey4uiRowData) );
								if( uiRowData_changed != null )
								{
									for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
									{
										incrementValue = uiRowData_changed.pubFun4getPeriodDataValue(periodLoc) - uiRowData_changed.pubFun4getPeriodDataValueBak(periodLoc)*1.0/selectedUnit.exchangeRate;
										newValue = uiRowData_view.pubFun4getPeriodDataValue( periodLoc ) + incrementValue*bizDataDefItemFcComb.coefficient;
										uiRowData_view.pubFun4setPeriodDataValue( periodLoc, newValue );	
									}
									
									blChanged = true;
								}
								*/
								if( bizDataDefItemFcComb.itemBizData.type == BizConst.BIZDATA_TYPE_FCHAND )
								{
									uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcHand.getValue(strKey4uiRowData) );
									if( uiRowData_changed != null )
									{
										for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
										{
											incrementValue = uiRowData_changed.pubFun4getPeriodDataValue(periodLoc) - uiRowData_changed.pubFun4getPeriodDataValueBak(periodLoc)*1.0/selectedUnit.exchangeRate;
											newValue = uiRowData_view.pubFun4getPeriodDataValue( periodLoc ) + incrementValue*bizDataDefItemFcComb.coefficient;
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, newValue );	
										}
										
										blChanged = true;
									}										
								}
								else if( bizDataDefItemFcComb.itemBizData.type == BizConst.BIZDATA_TYPE_TIMEFC )
								{
									uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcTime.getValue(strKey4uiRowData) );
									if( uiRowData_changed != null )
									{
										periodLoc_offsetByTimeFormula = UtilPeriod.getPeriodDifference( uiRowData_view.periodBegin, uiRowData_changed.periodBegin );
										if( periodLoc_offsetByTimeFormula >= qcondEditPeriodLocBegin )
										{
											periodLoc_start = periodLoc_offsetByTimeFormula;
										}
										else
										{
											periodLoc_start = qcondEditPeriodLocBegin;
										}										
										
										for( periodLoc = periodLoc_start; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
										{
											incrementValue = uiRowData_changed.pubFun4getPeriodDataValue(periodLoc-periodLoc_offsetByTimeFormula) - uiRowData_changed.pubFun4getPeriodDataValueBak(periodLoc-periodLoc_offsetByTimeFormula)*1.0/selectedUnit.exchangeRate;
											newValue = uiRowData_view.pubFun4getPeriodDataValue( periodLoc ) + incrementValue*bizDataDefItemFcComb.coefficient;
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, newValue );	
										}
										
										blChanged = true;
									}				
								}
															
								//	modified by liuzhen, 2011.07.02	end
							}
						}
						
						if( blChanged == true )
						{
							strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB(	uiRowData_view.product,
								uiRowData_view.productCharacter,
								uiRowData_view.organization,
								uiRowData_view.organizationCharacter,
								uiRowData_view.bizData
							);
							hmap4changed_ppcoocb_uiRowData_FcHCF.put( strKey4uiRowData, uiRowData_view );							
						}
					}
				}
				//	计算	FcComb	end
				
				
				//	计算 FcFinal	begin
				for( i=0; i<dp4datagridRef.length; i=i+1 )
				{
					uiRowData_view = ABUiRowData( dp4datagridRef.getItemAt(i) );
					
					
					if( uiRowData_view.bizData.type == BizConst.BIZDATA_TYPE_FCFINAL )
					{
						//	把值恢复成以备份值作为计算基点	begin
						for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
						{
							uiRowData_view.pubFun4setPeriodDataValue( periodLoc, uiRowData_view.pubFun4getPeriodDataValueBak(periodLoc)*1.0/selectedUnit.exchangeRate );
						}															
						//	把值恢复成备份值作为计算基点	end
						
						blChanged = false;
						
						arrBizDataDefItem = qcondForecastSetting.finalFcBizData.bizDataDefItems;
						
						if( arrBizDataDefItem != null && arrBizDataDefItem.length > 0 )
						{
							for( j=0; j<arrBizDataDefItem.length; j=j+1 )
							{
								bizDataDefItemFcComb = BBizDataDefItemFcComb(arrBizDataDefItem.getItemAt(j));
								
								strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_view.product, uiRowData_view.productCharacter, uiRowData_view.organization, uiRowData_view.organizationCharacter, bizDataDefItemFcComb.itemBizData );
								
								//	modified by liuzhen, 2011.07.02	begin
								/*
								uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcHand.getValue(strKey4uiRowData) );
								if( uiRowData_changed != null )
								{
									for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
									{
										incrementValue = uiRowData_changed.pubFun4getPeriodDataValue(periodLoc) - uiRowData_changed.pubFun4getPeriodDataValueBak(periodLoc)*1.0/selectedUnit.exchangeRate;
										newValue = uiRowData_view.pubFun4getPeriodDataValue( periodLoc ) + incrementValue*bizDataDefItemFcComb.coefficient;
										uiRowData_view.pubFun4setPeriodDataValue( periodLoc, newValue );	
									}
									
									blChanged = true;
								}
								*/
								if( bizDataDefItemFcComb.itemBizData.type == BizConst.BIZDATA_TYPE_FCHAND )
								{
									uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcHand.getValue(strKey4uiRowData) );
									if( uiRowData_changed != null )
									{
										for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
										{
											incrementValue = uiRowData_changed.pubFun4getPeriodDataValue(periodLoc) - uiRowData_changed.pubFun4getPeriodDataValueBak(periodLoc)*1.0/selectedUnit.exchangeRate;
											newValue = uiRowData_view.pubFun4getPeriodDataValue( periodLoc ) + incrementValue*bizDataDefItemFcComb.coefficient;
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, newValue );	
										}
										
										blChanged = true;
									}									
								}
								else if( bizDataDefItemFcComb.itemBizData.type == BizConst.BIZDATA_TYPE_TIMEFC )
								{
									uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcTime.getValue(strKey4uiRowData) );
									if( uiRowData_changed != null )
									{
										periodLoc_offsetByTimeFormula = UtilPeriod.getPeriodDifference( uiRowData_view.periodBegin, uiRowData_changed.periodBegin );
										if( periodLoc_offsetByTimeFormula >= qcondEditPeriodLocBegin )
										{
											periodLoc_start = periodLoc_offsetByTimeFormula;
										}
										else
										{
											periodLoc_start = qcondEditPeriodLocBegin;
										}
										
										for( periodLoc=periodLoc_start; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
										{
											incrementValue = uiRowData_changed.pubFun4getPeriodDataValue(periodLoc-periodLoc_offsetByTimeFormula) - uiRowData_changed.pubFun4getPeriodDataValueBak(periodLoc-periodLoc_offsetByTimeFormula)*1.0/selectedUnit.exchangeRate;
											newValue = uiRowData_view.pubFun4getPeriodDataValue( periodLoc ) + incrementValue*bizDataDefItemFcComb.coefficient;
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, newValue );	
										}
										
										blChanged = true;
									}									
								}
								//	modified by liuzhen, 2011.07.02	end
							}
						}
						
						if( blChanged == true )
						{
							strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB(	uiRowData_view.product,
								uiRowData_view.productCharacter,
								uiRowData_view.organization,
								uiRowData_view.organizationCharacter,
								uiRowData_view.bizData
							);
							hmap4changed_ppcoocb_uiRowData_FcHCF.put( strKey4uiRowData, uiRowData_view );							
						}
					}
				}				
				//	计算 FcFinal	end				
				
				
				//	计算 Kpi	begin
				var bizDataDefItemKpi:BBizDataDefItemKpi = null;
				var newValue_kpi:Number;
				var uiRowData_aitem:ABUiRowData = null;
				var uiRowData_bitem:ABUiRowData = null; 
				var uiRowData_kpiBak:ABUiRowData = null;
				var blKpiChanged:Boolean = false;
				var strKey4ppcoocb_kpi:String = null;
				var kpiFormula:int;
				var value_aitem:Number;
				var value_bitem:Number;
				var kpiValue:Number;
				
				//	added by liuzhen, 2011.07.02	begin
				var uiRowData_aitem_timeFc:ABUiRowData = null;
				var uiRowData_bitem_timeFc:ABUiRowData = null; 				
				//	added by liuzhen, 2011.07.02	end
				
				var numberFormatter:NumberFormatter = new NumberFormatter();
				numberFormatter.precision = 2;				
				
				for( i=0; i<dp4datagridRef.length; i=i+1 )
				{
					uiRowData_view = ABUiRowData( dp4datagridRef.getItemAt(i) );
					
					if( uiRowData_view.bizData.type == BizConst.BIZDATA_TYPE_KPI )
					{		
						arrBizDataDefItem = uiRowData_view.bizData.bizDataDefItems;
						
						if( arrBizDataDefItem != null && arrBizDataDefItem.length == 1 )
						{ 
							bizDataDefItemKpi = BBizDataDefItemKpi(arrBizDataDefItem.getItemAt(0));
							blKpiChanged = false;
							
							kpiFormula = bizDataDefItemKpi.kpiFormula;
							
							//	modified by liuzhen, 2011.07.02	begin
							/*
							//	aitem	begin
							strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_view.product, uiRowData_view.productCharacter, uiRowData_view.organization, uiRowData_view.organizationCharacter, bizDataDefItemKpi.aitemBizData );
							uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcHCF.getValue(strKey4uiRowData) );
							if( uiRowData_changed != null )
							{
								blKpiChanged = true;
								uiRowData_aitem = uiRowData_changed;
							}						
							else
							{
								uiRowData_aitem = null;
							}
							//	aitem	end
							
							//	bitem	begin
							strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_view.product, uiRowData_view.productCharacter, uiRowData_view.organization, uiRowData_view.organizationCharacter, bizDataDefItemKpi.bitemBizData );
							uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcHCF.getValue(strKey4uiRowData) );
							if( uiRowData_changed != null )
							{
								blKpiChanged = true;
								uiRowData_bitem = uiRowData_changed;								
							}							
							else
							{
								uiRowData_bitem = null;
							}
							//	bitem	end	
							*/
							//	aitem	begin
							strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_view.product, uiRowData_view.productCharacter, uiRowData_view.organization, uiRowData_view.organizationCharacter, bizDataDefItemKpi.aitemBizData );
							
							uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcHCF.getValue(strKey4uiRowData) );
							if( uiRowData_changed != null )
							{
								blKpiChanged = true;
								uiRowData_aitem = uiRowData_changed;
							}						
							else
							{
								uiRowData_aitem = null;
								
								uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcTime.getValue(strKey4uiRowData) );
								if( uiRowData_changed != null )
								{
									blKpiChanged = true;
									uiRowData_aitem_timeFc = uiRowData_changed;
								}						
								else
								{
									uiRowData_aitem_timeFc = null;
								}
							}
							//	aitem	end
							
							//	bitem	begin
							strKey4uiRowData = UtilStrKey.getStrKey4PPcOOcB( uiRowData_view.product, uiRowData_view.productCharacter, uiRowData_view.organization, uiRowData_view.organizationCharacter, bizDataDefItemKpi.bitemBizData );
							
							uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcHCF.getValue(strKey4uiRowData) );
							if( uiRowData_changed != null )
							{
								blKpiChanged = true;
								uiRowData_bitem = uiRowData_changed;								
							}							
							else
							{
								uiRowData_bitem = null;
								
								uiRowData_changed = ABUiRowData( hmap4changed_ppcoocb_uiRowData_FcTime.getValue(strKey4uiRowData) );
								if( uiRowData_changed != null )
								{
									blKpiChanged = true;
									uiRowData_bitem_timeFc = uiRowData_changed;								
								}							
								else
								{
									uiRowData_bitem_timeFc = null;
								}
							}
							//	bitem	end								
							//	modified by liuzhen, 2011.07.02	end
							
							if( blKpiChanged == true )
							{
								//	计算Kpi
								uiRowData_kpiBak = null;
								
								//	modified by liuzhen, 2011.07.02	begin
								/*
								if( uiRowData_aitem == null || uiRowData_bitem == null )
								{
									strKey4ppcoocb_kpi = UtilStrKey.getStrKey4PPcOOcB( uiRowData_view.product, uiRowData_view.productCharacter, uiRowData_view.organization, uiRowData_view.organizationCharacter, uiRowData_view.bizData );
									uiRowData_kpiBak = ABUiRowData( hmap_ppcoocb_uiRowData_kpiBak.getValue( strKey4ppcoocb_kpi ) );	//	必定有
								}
								*/
								if( (uiRowData_aitem == null && uiRowData_aitem_timeFc == null ) || ( uiRowData_bitem == null && uiRowData_bitem_timeFc == null ) )
								{
									strKey4ppcoocb_kpi = UtilStrKey.getStrKey4PPcOOcB( uiRowData_view.product, uiRowData_view.productCharacter, uiRowData_view.organization, uiRowData_view.organizationCharacter, uiRowData_view.bizData );
									uiRowData_kpiBak = ABUiRowData( hmap_ppcoocb_uiRowData_kpiBak.getValue( strKey4ppcoocb_kpi ) );	//	必定有
								}								
								//	modified by liuzhen, 2011.07.02	end
								
								for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
								{
									//	modified by liuzhen, 2011.07.02	begin
									/*
									if( uiRowData_aitem != null )
									{
										value_aitem = uiRowData_aitem.pubFun4getPeriodDataValue( periodLoc ) * selectedUnit.exchangeRate;
									}
									else
									{
										value_aitem = uiRowData_kpiBak.pubFun4getPeriodDataValue( periodLoc );	//	分子值的备份
									}	
									
									if( uiRowData_bitem != null )
									{
										value_bitem = uiRowData_bitem.pubFun4getPeriodDataValue( periodLoc ) * selectedUnit.exchangeRate;
									}
									else
									{
										value_bitem = uiRowData_kpiBak.pubFun4getPeriodDataValueBak( periodLoc );	//	分母值的备份
									}
									*/
									
									if( uiRowData_aitem != null )
									{
										value_aitem = uiRowData_aitem.pubFun4getPeriodDataValue( periodLoc ) * selectedUnit.exchangeRate;
									}
									else if( uiRowData_aitem_timeFc != null )
									{
										periodLoc_offsetByTimeFormula = UtilPeriod.getPeriodDifference( uiRowData_view.periodBegin, uiRowData_aitem_timeFc.periodBegin );
										if( periodLoc >= periodLoc_offsetByTimeFormula )
										{
											value_aitem = uiRowData_aitem_timeFc.pubFun4getPeriodDataValue( periodLoc - periodLoc_offsetByTimeFormula ) * selectedUnit.exchangeRate;
				
										}
										else
										{
											value_aitem = uiRowData_kpiBak.pubFun4getPeriodDataValue( periodLoc );	//	use the bak value, because there is not the corresponding value in the FcTime_changed								
										}
									}
									else
									{
										value_aitem = uiRowData_kpiBak.pubFun4getPeriodDataValue( periodLoc );	//	分子值的备份
									}	
									
									if( uiRowData_bitem != null )
									{
										value_bitem = uiRowData_bitem.pubFun4getPeriodDataValue( periodLoc ) * selectedUnit.exchangeRate;
									}
									else if( uiRowData_bitem_timeFc != null )
									{
										periodLoc_offsetByTimeFormula = UtilPeriod.getPeriodDifference( uiRowData_view.periodBegin, uiRowData_bitem_timeFc.periodBegin );
										if( periodLoc >= periodLoc_offsetByTimeFormula )
										{
											value_bitem = uiRowData_aitem_timeFc.pubFun4getPeriodDataValue( periodLoc - periodLoc_offsetByTimeFormula ) * selectedUnit.exchangeRate;
										}
										else
										{
											value_bitem = uiRowData_kpiBak.pubFun4getPeriodDataValueBak( periodLoc );	//	use the bak value, because there is not the corresponding value in the FcTime_changed	
										}										
									}
									else
									{
										value_bitem = uiRowData_kpiBak.pubFun4getPeriodDataValueBak( periodLoc );	//	分母值的备份
									}									
									//	modified by liuzhen, 2011.07.02	end
									
									if( kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_RATIO )
									{
										if( isNaN(value_aitem) || isNaN(value_bitem) )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );
										}
										else if( value_bitem == 0 )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
										}
										else
										{
											kpiValue = value_aitem / value_bitem * 100.0;
											kpiValue = Number( numberFormatter.format( kpiValue ) );
											
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, kpiValue );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
										}											
									}
									else if( kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO )
									{
										if( isNaN(value_aitem) || isNaN(value_bitem) )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );
										}
										else if( value_bitem == 0 )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
										}
										else
										{
											kpiValue = Math.abs( value_aitem - value_bitem ) / value_bitem * 100.0;
											kpiValue = Number( numberFormatter.format( kpiValue ) );
											
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, kpiValue );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
										}											
									}
									else if( kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_I )
									{
										if( isNaN(value_aitem) || isNaN(value_bitem) )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );
										}
										else if( value_bitem == 0 )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
										}
										else
										{
											kpiValue = (1 - Math.abs( value_aitem - value_bitem ) / value_bitem) * 100.0;
											kpiValue = Number( numberFormatter.format( kpiValue ) );
											
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, kpiValue );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
										}											
									}
									else if( kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_II )
									{
										if( isNaN(value_aitem) )
										{
											value_aitem = 0;
										}
										if( isNaN(value_bitem) )
										{
											value_bitem = 0;
										}
										
										if( value_aitem + value_bitem == 0 )
										{
											//	分母为0
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );																		
										}
										else
										{
											kpiValue = 2.0 * Math.abs(value_aitem - value_bitem) / (value_aitem + value_bitem) * 100.0;
											kpiValue = Number( numberFormatter.format( kpiValue ) );
											
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, kpiValue );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
										}									
									}
									else if(kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_III)
									{
										kpiValue = (value_aitem - value_bitem) ;
										kpiValue = Number( numberFormatter.format( kpiValue ) );
										
										uiRowData_view.pubFun4setPeriodDataValue( periodLoc, kpiValue );
										uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );
									}
									else if(kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_IV)
									{
										kpiValue =  Math.abs(value_aitem - value_bitem) ;
										kpiValue = Number( numberFormatter.format( kpiValue ) );
										
										uiRowData_view.pubFun4setPeriodDataValue( periodLoc, kpiValue );
										uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );
									}
									else if(kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_V)
									{
										if( isNaN(value_aitem) || isNaN(value_bitem) )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );
										}
										else if( value_bitem == 0 )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
										}
										else
										{
											kpiValue = ( value_aitem - value_bitem ) / value_bitem * 100.0;
											kpiValue = Number( numberFormatter.format( kpiValue ) );
											
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, kpiValue );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
										}
									}
									else if(kpiFormula == BizConst.BIZDATADEFITEM_KPIFORMULA_INCREMENTRATIO_VI)
									{
										if( isNaN(value_aitem) || isNaN(value_bitem) )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );
										}
										else if( value_bitem == 0 )
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );								
										}
										else if(value_aitem<0 || value_bitem<0)
										{
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, 0 );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, 0 );	
										}
										else
										{
											if(value_aitem<value_bitem)
											{
												kpiValue = value_aitem / value_bitem * 100.0;
												kpiValue = Number( numberFormatter.format( kpiValue ) );
											}
											else
											{
												kpiValue = value_bitem / value_aitem * 100.0;
												kpiValue = Number( numberFormatter.format( kpiValue ) );
											}
											
											uiRowData_view.pubFun4setPeriodDataValue( periodLoc, kpiValue );
											uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, kpiValue );									
										}	
									}
									else
									{
										//	out of design
										uiRowData_view.pubFun4setPeriodDataValue( periodLoc, NaN );
										uiRowData_view.pubFun4setPeriodDataValueBak( periodLoc, NaN );										
									}
																	
								}								
								
							}					
						}
					}
				}				
				//	计算 Kpi	end
				adgRef.invalidateList();//由于加入了高亮同步显示，所以这里需要加入刷新语句，刷新list内容。
			}			
			
			private function onSave():void
			{
				tabNav4forecastAdjust.selectedChild = tab4forecastMakeLog; // 跳到logTab页，避免该tab页出现从没被初始化而出错
				tabNav4forecastAdjust_changeHandler( null );
				
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = "";
				
				if( dp4comAdgForecastMakeLogHfcItem.length == 0 )
				{					
					alert_msg = resourceManager.getString('alert','alert_msg_noadjust17');
					Alert.show(alert_msg, alert_title_hint);
					return;					
				}				
				
				alert_msg = resourceManager.getString('alert','alert_msg_saveconfirm17');
				Alert.show( alert_msg, alert_title_hint, Alert.OK | Alert.CANCEL, this, saveConfirmHandler, null, Alert.OK );				
			}
			
			private function saveConfirmHandler(event:CloseEvent):void
			{
				if( event.detail == Alert.OK )
				{
					UtilUi.pubFun4PopWaitWindow( this );
					
					var selectedUnit:BUnit = BUnit(comboBoxUnit.selectedItem);									
					
					var i:int;
					var uiRowData_edit:ABUiRowData = null;
					var value:Number;
					var period:int;
					var periodLoc:int;
					
					//	收集 uiRowData	begin
					var arrUiRowData4save:ArrayCollection = new ArrayCollection();
					var uiRowData4save:ABUiRowData = null;
					for( i=0; i<dp4datagridEdit.length; i=i+1 )
					{
						uiRowData_edit = ABUiRowData( dp4datagridEdit.getItemAt(i) );
						for( periodLoc=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc=periodLoc+1 )
						{
							period = UtilPeriod.getPeriod( qcondPeriodBegin, periodLoc );							
							value = uiRowData_edit.pubFun4getPeriodDataValue(periodLoc);
							
							if( Math.round(value*selectedUnit.exchangeRate) != uiRowData_edit.pubFun4getPeriodDataValueBak(periodLoc) )
							{
								//	值变化
								uiRowData4save = new ABUiRowData();
								uiRowData4save.copyDeep( uiRowData_edit );
								if( selectedUnit.isBase == BizConst.GLOBAL_YESNO_NO )
								{
									uiRowData4save.exchangeUnit( selectedUnit.exchangeRate, 1 );
								}
								arrUiRowData4save.addItem( uiRowData4save );
								break;
							}
						}
					}
					//	收集 uiRowData	end
					
					//	收集 forecastMakeLog	begin
					var forecastMakeLog4save:BForecastMakeLog = new BForecastMakeLog();
					forecastMakeLog4save.compilePeriod = ClientEnvironment.getSysPeriod().compilePeriod;
					forecastMakeLog4save.submitTime = new Date( new Date().getTime() + ClientEnvironment.getTimeDifference() );
					forecastMakeLog4save.submitter = ClientEnvironment.getOperatorUser().userName;
					forecastMakeLog4save.operatorUser = ClientEnvironment.getOperatorUser();
					forecastMakeLog4save.description = StringUtil.trim( txtDescription.text );
					forecastMakeLog4save.actionType = BizConst.FORECASTMAKELOG_ACTIONTYPE_HFC;
					
					forecastMakeLog4save.forecastMakeLogProOrgs = new ArrayCollection();
					forecastMakeLog4save.forecastMakeLogHfcItems = new ArrayCollection();
					
					var arrProOrgs:ArrayCollection = UtilUiPopbScope.getProOrgsArrByUiScope(uiPopbScope);
					var proOrg:ABProOrg = null;
					var forecastMakeLogProOrg4save:BForecastMakeLogProOrg = null;
					for( i=0; i<arrProOrgs.length; i=i+1 )
					{
						proOrg = ABProOrg( arrProOrgs.getItemAt(i) );
						
						forecastMakeLogProOrg4save = new BForecastMakeLogProOrg();
						forecastMakeLogProOrg4save.product = proOrg.product;
						forecastMakeLogProOrg4save.organization = proOrg.organization;
						forecastMakeLogProOrg4save.forecastMakeLog = forecastMakeLog4save;
						forecastMakeLog4save.forecastMakeLogProOrgs.addItem( forecastMakeLogProOrg4save );
					}
					
					var forecastMakeLogHfcItem:BForecastMakeLogHfcItem = null;
					var forecastMakeLogHfcItem4save:BForecastMakeLogHfcItem = null;
					for( i=0; i<dp4comAdgForecastMakeLogHfcItem.length; i=i+1 )
					{
						forecastMakeLogHfcItem = BForecastMakeLogHfcItem( dp4comAdgForecastMakeLogHfcItem.getItemAt( i ) );
						
						forecastMakeLogHfcItem4save = new BForecastMakeLogHfcItem();
						forecastMakeLogHfcItem4save.copyDeep( forecastMakeLogHfcItem );
						if( selectedUnit.isBase == BizConst.GLOBAL_YESNO_NO )
						{
							forecastMakeLogHfcItem4save.exchangeUnit( selectedUnit.exchangeRate, 1 );
						}
						forecastMakeLogHfcItem4save.forecastMakeLog = forecastMakeLog4save;
						forecastMakeLog4save.forecastMakeLogHfcItems.addItem( forecastMakeLogHfcItem4save );
					}
					//	收集 forecastMakeLog	end					
					
					srvForecast.saveForecastDatas4AdjustUI( arrUiRowData4save, forecastMakeLog4save, qcondForecastSetting, ClientEnvironment.getSysPeriod() );
				}
			}			
			
			private function faultHandler4saveForecastDatas4AdjustUI(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('alert','alt_title_warn') );			
			}
			
			private function resultHandler4saveForecastDatas4AdjustUI(event:ResultEvent):void 
			{
				UtilUi.pubFun4RemoveWaitWindow();
				
				var saveResultStr:String = event.result as String;
				
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = resourceManager.getString('alert','alert_msg_savesucceed17');
				if(saveResultStr != null || saveResultStr.length > 1 ){
					alert_msg = saveResultStr;
				}

				Alert.show( alert_msg, alert_title_hint, Alert.OK, this, saveOkConfirmHandler, null, Alert.OK );
			}
			
			private function saveOkConfirmHandler(event:CloseEvent):void
			{				
				txtDescription.text = "";
				tabNav4forecastAdjust.selectedChild = tab4forecastAdjust;
				
				//	重新查询当前页数据
				var blPageProOrg:Boolean = condSetComp.isPageProOrg;
				if( blPageProOrg == true )
				{						
					//	查询当前页
					prvFun4pageQueryForecastDatas( comAksDataGridControlBar.pubFun4geParamOut4pageIndex() );
				}
				else
				{	
					//	不分页查询
					UtilUi.pubFun4PopWaitWindow( this );
					srvUiRowData.getUiRowDatas( qcondArrUiRowDataProOrgs, qcondPeriodBegin, qcondPeriodEnd, qcondArrBizDatas, ClientEnvironment.getSysPeriod()  );
				}	
			}				
			
			
			protected function tabNav4forecastAdjust_changeHandler(event:IndexChangedEvent):void
			{
				if( tabNav4forecastAdjust.selectedChild == tab4forecastMakeLog )
				{
					onCompute();
				}
			}
			
			
			protected function datagridRef_columnStretchHandler(event:DataGridEvent):void
			{
				adgEdit.pubFun4synColumnWidth( adgRef );
			}
			
			protected function datagridEdit_columnStretchHandler(event:DataGridEvent):void
			{
				//设置两个 表格列同步变化 
				adgRef.pubFun4synColumnWidth( adgEdit );
			}		
			
			private function onRefreshChart():void
			{
				chartWindow = UtilUiRowDataChart.showRowDataChartWindow(adgEdit,adgRef,qcondPeriodBegin,qcondPeriodEnd,arrEditPeriods,callbackFunction4SetNewuiRowData,this);
			}
			
			private function callbackFunction4SetNewuiRowData():void
			{	
				var dataindex:int = chartWindow.aksLineChart4scale.pubFun4getDataIndex();
				var valueindex:int = chartWindow.aksLineChart4scale.pubFun4getValueIndex();
				var newY:Number = chartWindow.aksLineChart4scale.pubFun4getNewValue();
				
				var uiRowData:ABUiRowData  = ABUiRowData(chartWindow.arr4checkedUiRowData4scale.getItemAt(dataindex));
				var strKey:String = UtilStrKey.getStrKey4PPcOOcB(uiRowData.product,uiRowData.productCharacter,
					uiRowData.organization,uiRowData.organizationCharacter,uiRowData.bizData);
				var _uiRowData:ABUiRowData;
				for(var i:int = 0;i<dp4datagridEdit.length;i++)
				{
					_uiRowData=ABUiRowData(dp4datagridEdit.getItemAt(i));
					if( UtilStrKey.getStrKey4PPcOOcB(_uiRowData.product,_uiRowData.productCharacter,
						_uiRowData.organization,_uiRowData.organizationCharacter,_uiRowData.bizData) == strKey)
					{
						_uiRowData.pubFun4setPeriodDataValue(valueindex,newY);
					}
				}
				
			}
			
			protected function datagridEdit_changeHandler(event:ListEvent):void
			{
				if(adgEdit.selectedIndex>-1 )
				{	
					var uiRowData:ABUiRowData =ABUiRowData(adgEdit.selectedItem);
					var strKey:String = UtilStrKey.getStrKey4PPcOOc(uiRowData.product,uiRowData.productCharacter,uiRowData.organization,uiRowData.organizationCharacter);
					var tempArr:ArrayCollection = new ArrayCollection();
					var selectSize:int=0;
					
					
					dp4datagridRef = new ArrayCollection();//清除以前的选择记录记录
					
					for(var i:int =0;i<dp4datagridRef4bak.length;i++)
					{
						var _uiRowData:ABUiRowData = ABUiRowData(dp4datagridRef4bak.getItemAt(i));
						var _strKey:String= UtilStrKey.getStrKey4PPcOOc(_uiRowData.product,_uiRowData.productCharacter,_uiRowData.organization,_uiRowData.organizationCharacter);
						if(_strKey==strKey)
						{
							tempArr.addItem(_uiRowData);
						}												
					}
					dp4datagridRef.addAll(tempArr);
				}
			}
			private function onExport():void
			{				
				var TSVString:String = DataListExportUtil.generateCsvData(adgEdit,1) ;
				
				// Copy the TSV string to the clipboard
				System.setClipboard(TSVString);					
			}
			
			private function handleTextPaste( event:TextEvent ):void
			{
				var str:String = event.text;
				getImProductsFromText(str);	
			}
			
			protected function datagridEdit_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.ctrlKey == true  )
				{
//					if(event.keyCode == 86)
//					{
//						var str:String = Clipboard.generalClipboard.getData(ClipboardFormats.TEXT_FORMAT) as String;
//						getImProductsFromText(str);	
//					}
				}
				if(adgEdit.selectedIndex>-1)
				{	
					var selectIndex:int = adgEdit.selectedIndex;
					var selectObj:Object = adgEdit.editedItemPosition;
					if(selectObj!=null)
					{
						if(event.keyCode == Keyboard.DOWN)
						{
							if(selectIndex<dp4datagridEdit.length-1)
							{
								adgEdit.selectedIndex = selectIndex+1;
								selectObj.rowIndex++;
								adgEdit.editedItemPosition = selectObj;
								datagridEdit_changeHandler(null);
							}	
						}
						else if(event.keyCode == Keyboard.UP)
						{
							if(selectIndex>=1)
							{
								adgEdit.selectedIndex = selectIndex-1;
								selectObj.rowIndex--;
								adgEdit.editedItemPosition = selectObj;
								datagridEdit_changeHandler(null);
							}
						}
						else if(event.keyCode == Keyboard.LEFT)
						{
							if(selectObj.columnIndex > pavVar4editBeginIndex)
								selectObj.columnIndex --;
								
							adgEdit.editedItemPosition = selectObj;
						}
						else if(event.keyCode == Keyboard.RIGHT)
						{
							if(selectObj.columnIndex < pavVa44editEndIdex)
							selectObj.columnIndex ++;
							adgEdit.editedItemPosition = selectObj;
						}
					}
				}
			}
			
			private function onColumnSet():void
			{
				if(uiCondVo == null)
					return; //还没查询过数据
				
				adgEdit.onColumnSet(adgRef);
			}
			
			private function onLyaerSet():void{
				//没有数据，不需要分层计算
				if(dp4datagridEdit==null || dp4datagridEdit.length<1 || uiCondVo == null)
				{
					UtilUi.pubFun4RemoveWaitWindow();
					return ;
				}	
				
				if (layerSetWindow == null){
					layerSetWindow = new Com_ProOrg_LayerSetWindow();
					layerSetWindow.onOkFunction = onLayerCompute;
				}
				
				PopUpManager.addPopUp(layerSetWindow,this);
				PopUpManager.centerPopUp(layerSetWindow);
			}
			
			private function onLayerCompute():void
			{
				UtilUi.pubFun4PopWaitWindow( this );
				dp4comAdgUiRowData4excute = new ArrayCollection();
					
				//分层计算
				layerSetWindow.pubFun4excuteProOrgs( UtilUiPopbScope.getProOrgsArrByUiScope(uiPopbScope) );
				
				//更新显示列设置
				refreshColumnDispControlSet(2);
				
				expansion = new ArrayCollection();
				var bizdata:BBizData;
				for(var i:int =0;i<qcondArrBizDatas.length;i++)
				{
					bizdata = BBizData(qcondArrBizDatas.getItemAt(i));
					if(bizdata.type == BizConst.BIZDATA_TYPE_FCHAND &&
						ClientEnvironment.getBizDataIsManaging(bizdata) == BizConst.GLOBAL_YESNO_YES)
					{
						expansion.addItem(bizdata);
					}
				}
				srvexpansion.getUiRowDatas(layerSetWindow.pubFun4getParamOut4arrUiRowDataProOrgs(), qcondPeriodBegin, qcondPeriodEnd, expansion, ClientEnvironment.getSysPeriod()  );		
			}
			
			private function faultHandler4expansion(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('alert','alt_title_warn') );
			}
			
			private function resultHandler4expansion(event:ResultEvent):void 
			{
				dp4datagridEdit = new ArrayCollection();
				dp4comAdgUiRowData4excute = ArrayCollection(ArrayCollection(event.result).getItemAt(1));
				uiRowDataRunNum = 0;
				changeColor = new ArrayCollection();				
				
				if(dp4comAdgUiRowData4excute.length>0)
				{
					runUiRowData(uiRowDataRunNum);	
				}
			}
			
			/** 获取每一行统计数据对应的明细数据 */
			private function runUiRowData(num:int):void
			{
				var uiRowData:ABUiRowData = ABUiRowData(dp4comAdgUiRowData4excute.getItemAt(num));
				
				var uirowCondVo:UiCondVo = UtilUiPopbScope.getUiRowDataCondVo(uiPopbScope,uiRowData,this);
				
				var arr4temp:ArrayCollection = new ArrayCollection();
				arr4temp.addItem(uiRowData.bizData);
				srvUiRowData4expansion.getUiRowDatas( uirowCondVo.arrUiRowDataProOrgs, qcondPeriodBegin, qcondPeriodEnd, arr4temp, ClientEnvironment.getSysPeriod()  );					
			}
			
			private function faultHandler4getUiRowDatas4expansion(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('alert','alt_title_warn') );
			}
			
			private function resultHandler4getUiRowDatas4expansion(event:ResultEvent):void 
			{
				var arrUiRowData:ArrayCollection = ArrayCollection(ArrayCollection(event.result).getItemAt(1));
				
				doexchangedata(arrUiRowData);
				//添加进dp4comAdgUiRowData
				dp4datagridEdit.addAll(arrUiRowData);
				var uiRowData:ABUiRowData = ABUiRowData(dp4comAdgUiRowData4excute.getItemAt(uiRowDataRunNum ));
				dp4datagridEdit.addItem(uiRowData); //汇总行数据
				
				//改变颜色
				changeColor.addItem(UtilStrKey.getStrKey4PPcOOcB(uiRowData.product,uiRowData.productCharacter
					,uiRowData.organization,uiRowData.organizationCharacter,uiRowData.bizData));
				
				uiRowDataRunNum = uiRowDataRunNum  +1;
				if(uiRowDataRunNum <dp4comAdgUiRowData4excute.length)
				{
					runUiRowData(uiRowDataRunNum);
				}
				else if(uiRowDataRunNum ==dp4comAdgUiRowData4excute.length)
				{					
					UtilUi.pubFun4RemoveWaitWindow();
				}
			}
			
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
			
			private function refreshColumnDispControlSet(type:Number):void{
				//3个入口，设置显示列 1，查询条件中执行后 2，分层计算后 3，列显示手工设置后
				
				if(type == 1){ 
					//1查询条件中执行后
					isDisPro = uiCondVo.isShowProduct;
					isDisProChar = uiCondVo.isShowProductCharacter;
					isDisOrg = uiCondVo.isShowOrganization;
					isDisOrgChar = uiCondVo.isShowOrganizationCharacter;
					
				}else if(type ==2){
					isDisPro = uiCondVo.isShowProduct || layerSetWindow.checkBoxProduct.selected;
					isDisProChar = uiCondVo.isShowProductCharacter || layerSetWindow.checkBoxProductCharacter.selected;
					isDisOrg = uiCondVo.isShowOrganization || layerSetWindow.checkBoxOrganization.selected;
					isDisOrgChar = uiCondVo.isShowOrganizationCharacter || layerSetWindow.checkBoxOrganizationCharacter.selected;
				}
				//同步设置
				adgEdit.setVisible4Dimension(isDisPro,isDisProChar,isDisOrg,isDisOrgChar);
				adgRef.pubFun4synColumnWidth( adgEdit );
				if(adgMakeLog != null){
					adgMakeLog.setVisible4Dimension(isDisPro,isDisProChar,isDisOrg,isDisOrgChar);
				}
			}
			
			private function checkScaleValue( _scaleValue:Number ):Boolean
			{
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');	
				var alert_msg:String = alert_msg = resourceManager.getString('alert','alert_msg_scale17');				
				
				if( isNaN(_scaleValue) )
				{
					Alert.show(alert_msg, alert_title_hint);
					return false;							
				}
				
				if( Math.floor( _scaleValue ) != _scaleValue )
				{
					Alert.show(alert_msg, alert_title_hint);
					return false;								
				}
				
				if( _scaleValue < 0 || _scaleValue > 999999999 )
				{
					Alert.show(alert_msg, alert_title_hint);
					return false;					
				}
				
				return true;
			}
			
			private function checkPercentValue( _percentValue:Number ):Boolean
			{
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');	
				var alert_msg:String = alert_msg = resourceManager.getString('alert','alert_msg_percent');				
				
				if( isNaN(_percentValue) )
				{
					Alert.show(alert_msg, alert_title_hint);
					return false;							
				}
				
				if( Math.floor( _percentValue ) != _percentValue )
				{
					Alert.show(alert_msg, alert_title_hint);
					return false;								
				}
				
				if( _percentValue < 0 || _percentValue > 999 )
				{
					Alert.show(alert_msg, alert_title_hint);
					return false;					
				}
				
				return true;
			}			
			
			private function getImProductsFromText(text:String):void   
			{     
				var alert_title_hint:String = resourceManager.getString('alert','alert_title_hint');
				var alert_msg:String = null;  
				
				var rstArrayImHistoryData:Array = new Array();
				var rows:Array = text.split("\n");
				
				var StrError:String = "";
				
				if( rows == null )
				{
					alert_msg = resourceManager.getString('alert','alert_msg_nodata17');
					Alert.show( alert_msg, alert_title_hint );	
					return;	
				}     
				if (!rows[rows.length - 1])
				{       
					rows.pop();
				}     
				
				if( rows.length <= 1 )
				{
					alert_msg = resourceManager.getString('alert','alert_msg_nodata17');
					Alert.show( alert_msg, alert_title_hint );						
					return;
				}
				
				var num:int = getShowNumber();
				var strKey:String = "";
				
				var rwHeader:String = rows[0];
				var fieldsHeader:Array = rwHeader.split( "\t" );
				if(!(fieldsHeader[fieldsHeader.length-1]))
				{
					fieldsHeader.pop();
				} 								
				if(fieldsHeader.length<(num+qcondEditPeriodLocEnd))
				{
					alert_msg = resourceManager.getString('alert','alert_msg_errorcolumnheader17');
					Alert.show( alert_msg, alert_title_hint );						
					return;		
				}
					
				var rowIdx:int;				
				var row:String = null;
				var fields:Array = null;
				
				//对列头做比较
				var diff:int=qcondEditPeriodLocEnd-qcondEditPeriodLocBegin;
				for(var periodLoc:int=qcondEditPeriodLocBegin; periodLoc <= qcondEditPeriodLocEnd; periodLoc = periodLoc + 1,diff--)
				{
					var period:int = UtilPeriod.getPeriod( qcondPeriodBegin, periodLoc );
					if( period !=fieldsHeader[num+qcondEditPeriodLocEnd-diff])
					{
						alert_msg = resourceManager.getString('alert','alert_msg_errorcolumnheader17');
						Alert.show( alert_msg, alert_title_hint );						
						return;	
					}
				}
				
				//检查数据是否重复
				var arr4check:ArrayCollection = new ArrayCollection();
				for( rowIdx=1; rowIdx<rows.length; rowIdx=rowIdx+1 )
				{					
					row = rows[rowIdx];
					fields = row.split("\t");
					strKey = "";
					
					for( var i:int = 0; i<num; i++)
					{
						strKey = strKey + fields[i];
					}
					if(arr4check.contains(strKey))
					{
						alert_msg = resourceManager.getString('alert','alert_msg_imperrorrepet17');
						Alert.show( alert_msg, alert_title_hint );						
						return;	
					}
					arr4check.addItem(strKey);
				}
				
				for( rowIdx=1; rowIdx<rows.length; rowIdx=rowIdx+1 )
				{					
					row = rows[rowIdx];
					fields = row.split("\t");
					strKey = "";
					
					for( var j:int = 0; j<num; j++)
					{
						strKey = strKey + fields[j];
					}

					var index:int = getIndexInEditRowByStrKey(strKey);
					if(index==-1)
					{
						StrError = StrError+ (rowIdx+1)+",";
						continue;
					}
					var uiRowData:ABUiRowData = dp4datagridEdit.getItemAt(index) as ABUiRowData;
					
					for(var periodLoc_:int=qcondEditPeriodLocBegin; periodLoc_ <= qcondEditPeriodLocEnd; periodLoc_ = periodLoc_ + 1 )
					{
						uiRowData.pubFun4setPeriodDataValue(periodLoc_,Number(fields[i+periodLoc_]));
					}	
				}
				
				if(StrError=="")
				{
					alert_msg = resourceManager.getString('alert','alert_msg_impresult17');
					Alert.show( alert_msg, alert_title_hint );						
					return;	
				}
				else
				{
					alert_msg = resourceManager.getString('alert','alert_msg_imperrorresult17')+"\n"+StrError;
					Alert.show( alert_msg, alert_title_hint );						
					return;
				}
			}   
			
			private function getShowNumber():int
			{
				var num:int = 0;
				if(adgEdit.columnProductCode.visible==true)
				{
					num++;
				}
				if(adgEdit.columnProductName.visible==true)
				{
					num++;
				}
				if(adgEdit.columnProductCharacterCode.visible==true)
				{
					num++;
				}
				if(adgEdit.columnProductCharacterName.visible==true)
				{
					num++;
				}
				if(adgEdit.columnOrganizationCode.visible==true)
				{
					num++;
				}
				if(adgEdit.columnOrganizationName.visible==true)
				{
					num++;
				}
				if(adgEdit.columnOrganizationCharacterCode.visible==true)
				{
					num++;
				}
				if(adgEdit.columnOrganizationCharacterName.visible==true)
				{
					num++;
				}
				if(adgEdit.columnBizData.visible==true)
				{
					num++;
				}
			
				return num;
	
			}
			
			private function getIndexInEditRowByStrKey(strKey:String):int
			{
				var count:int = dp4datagridEdit.length;
				for(var i:int = 0;i<count;i++)
				{
					if(strKey == getStrKeyInIndex(i))
					{
						return i;
					}					
				}
	
				return -1;
			
			}
			
			
			private function getStrKeyInIndex(index:int ):String
			{
				var strKey:String = "";
				var uiRowData:ABUiRowData = dp4datagridEdit.getItemAt(index) as ABUiRowData;
				if(adgEdit.columnProductCode.visible==true)
				{
					if(uiRowData.product!=null)
					{
						strKey = strKey+uiRowData.product.code;
					}
				}
				if(adgEdit.columnProductName.visible==true)
				{
					if(uiRowData.product!=null)
					{
						strKey = strKey+uiRowData.product.name;
					}
				}
				if(adgEdit.columnProductCharacterCode.visible==true)
				{
					if(uiRowData.productCharacter!=null)
					{
						strKey = strKey+uiRowData.productCharacter.code;
					}
				}
				if(adgEdit.columnProductCharacterName.visible==true)
				{
					if(uiRowData.productCharacter!=null)
					{
						strKey = strKey+uiRowData.productCharacter.name;
					}
				}
				if(adgEdit.columnOrganizationCode.visible==true)
				{
					if(uiRowData.organization!=null)
					{
						strKey = strKey+uiRowData.organization.code;
					}
				}
				if(adgEdit.columnOrganizationName.visible==true)
				{
					if(uiRowData.organization!=null)
					{
						strKey = strKey+uiRowData.organization.name;
					}
				}
				if(adgEdit.columnOrganizationCharacterCode.visible==true)
				{
					if(uiRowData.organizationCharacter!=null)
					{
						strKey = strKey+uiRowData.organizationCharacter.code;
					}
				}
				if(adgEdit.columnOrganizationCharacterName.visible==true)
				{
					if(uiRowData.organizationCharacter!=null)
					{
						strKey = strKey+uiRowData.organizationCharacter.name;
					}
				}
				if(adgEdit.columnBizData.visible==true)
				{
					if(uiRowData.bizData!=null)
					{
						strKey = strKey+uiRowData.bizData.toString();
					}
				}
				
				return strKey;
			}
			
			private function doexchangedata(_uiRowData:ArrayCollection):void
			{
				var i:int;
				var seledtedUnit:BUnit = null;
				var uiRowData:ABUiRowData = null;
				
				var periodDiff:int;
				var periodLoc:int;
				var aitemValue:Number;
				var bitemValue:Number;
				var kpiValue:Number;
				var kpiFormula:int;
				
				var numberFormatter:NumberFormatter = new NumberFormatter();
				numberFormatter.precision = 2;
				var myPattern:RegExp = /,/g;//用来去掉格式化后的逗号
				
				if( _uiRowData != null )
				{
					seledtedUnit = BUnit(comboBoxUnit.selectedItem);		
					
					for( i=0; i<_uiRowData.length; i=i+1 )
					{
						uiRowData = ABUiRowData(_uiRowData.getItemAt(i));
						
						if( uiRowData.bizData.type != BizConst.BIZDATA_TYPE_KPI )
						{
							//	非Kpi数据换算后放入显示表格
							if( seledtedUnit != null && seledtedUnit.isBase == BizConst.GLOBAL_YESNO_NO )
							{
								uiRowData.exchangeUnit( 1, seledtedUnit.exchangeRate );						
							}						
						}						
					}					
				}
			}
			
			private function calcRowColor(item:Object, rowIndex:int,dataIndex:int, color:uint):uint{
				var uiRowData:ABUiRowData  = ABUiRowData(item);
				var str:String = UtilStrKey.getStrKey4PPcOOcB(uiRowData.product,uiRowData.productCharacter,uiRowData.organization,uiRowData.organizationCharacter,uiRowData.bizData);
				if(changeColor.contains(str))
				{
					return 0xC2C2C2;//d6dbe0; 0x65A0DA-深蓝色
				}
				return color;
			}
			
			//	6	本地方法   end	

			protected function onBatchAdjust(event:MouseEvent):void
			{
				
				if(adgEdit.selectedIndex == -1){
					
					AlertUtil.show("请选中一行可编辑数据！");
					return;
				}
				
				PopUpManager.addPopUp(adjustWindow,this);
				PopUpManager.centerPopUp(adjustWindow);
			}
			
			protected function onBatchAdjustOkHandler(event:MouseEvent):void
			{
				if(adjustTextInput.text == null || 	adjustTextInput.text == ""){
					AlertUtil.show("请输入调整值！");
				}
				
				if(btnScale.selected && btnAdd.selected ){
					onAddScale();
				}else if(btnScale.selected && btnSub.selected ){
					onSubScale();
				}else if(btnPercent.selected && btnAdd.selected ){
					onAddPercent();
				}else if(btnPercent.selected && btnSub.selected ){
					onSubPercent();
				}
				
				PopUpManager.removePopUp(adjustWindow);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="adjTypeGroup"/>
		<s:RadioButtonGroup id="adjDirectionGroup"/>
		<s:TitleWindow title="{resourceManager.getString('menu','batchAdjust')}" id="adjustWindow" width="300" height="260"
					   close="PopUpManager.removePopUp(adjustWindow)">
			<s:layout>
				<s:VerticalLayout verticalAlign="middle" paddingLeft="20" gap="6" paddingRight="20" paddingBottom="10" paddingTop="25"/>
			</s:layout>
			<s:HGroup>
				<s:RadioButton id="btnScale" width="120" label="{resourceManager.getString('button','scaleAdjust')}" groupName="adjTypeGroup" selected="true"/>
				<s:RadioButton id="btnPercent" width="120" label="{resourceManager.getString('button','percentAdjust')}" groupName="adjTypeGroup" />
			</s:HGroup>
			<s:HGroup>
				<s:RadioButton id="btnAdd" width="120" label="{resourceManager.getString('button','increase')}" groupName="adjDirectionGroup" selected="true"/>
				<s:RadioButton id="btnSub" width="120" label="{resourceManager.getString('button','decrease')}" groupName="adjDirectionGroup" />
			</s:HGroup>
			<s:Spacer height="10" />
			<s:HGroup verticalAlign="middle" >
				<s:Label text="{resourceManager.getString('button','adjustValue')}" />
				<s:TextInput width="100" maxChars="9" id="adjustTextInput" restrict="0-9\."/>
				<s:Label text="%" visible="{btnPercent.selected}" />
			</s:HGroup>
			
			<s:Spacer height="100%" />
			<s:HGroup horizontalAlign="center" width="100%" height="30">
				<buttons:ButtonOk click="onBatchAdjustOkHandler(event)" />
				<buttons:ButtonCancel click="PopUpManager.removePopUp(adjustWindow)" />
			</s:HGroup>
		</s:TitleWindow>
		
	</fx:Declarations>
	
	<!-- 数据范围设置 -->
	<common:LabelBoundary paddingTop="5" labelText="{resourceManager.getString('menu','queryCond')}" />
	<security:Com_Security_ProOrg_BizData_Period_Quick id="condSetComp" width="100%" height="26" uiCode="{UIConst.UICODE_FORECASTDATA_FORECASTHAND}" 
				arrDictBizDataType="{arrDictBizDataType}" blOnlyIsManagingBizData="false" 
				executeCallback4thisObject="{this}" executeCallback4function="{callbackFunction4execute4comProOrgBizDataPeriodScope}" 
				visible4forecast4periodspan="true" fcPeriodNum4periodSpan="{qcondForecastSetting.fcPeriodNum}" 
				fzPeriodNum4periodSpan="{qcondForecastSetting.fzPeriodNum}" >
	</security:Com_Security_ProOrg_BizData_Period_Quick>
	
	<s:VGroup width="100%" height="640">
		
		<common:LabelBoundary paddingTop="5" labelText="{resourceManager.getString('menu','forecastData')}" />
		<s:HGroup width="100%" verticalAlign="middle" paddingTop="3" paddingLeft="10">
			<s:Label text="{resourceManager.getString('note','unit')}" id="lbUnit"/>
			<s:ComboBox id="comboBoxUnit" dataProvider="{arrUnits}" change="onChange4comboBoxUnit()" enabled="false"/>
			<s:Spacer width="10" />
			<s:Button id="btnSave" click="onSave()" label="{resourceManager.getString('button','save')}" icon="{CoolAssetsFile.save_allIcon}"/>
			<s:Button id="btnRefreshChart" click="onRefreshChart()" label="{resourceManager.getString('button','chartView')}" icon="{CoolAssetsFile.chart_lineIcon}" />
			<s:Button id="btnExport" click="onExport()" label="{resourceManager.getString('button','export')}" icon="{CoolAssetsFile.excelIcon}"/>
			<s:Button id="btnBatchAdjust" click="onBatchAdjust(event)" label="{resourceManager.getString('button','batchAdjust')}" icon="{CoolAssetsFile.edit_batchIcon}" />
			<s:Button id="btnCompute" click="onCompute()" label="{resourceManager.getString('button','finalCompute')}" icon="{CoolAssetsFile.computeIcon}"/>	
			<s:Button id="btnLayer" click="onLyaerSet()" label="{resourceManager.getString('button','layerCompute')}" icon="{CoolAssetsFile.tree_sigIcon}"/>
			<s:Button id="btnColumnSet" click="onColumnSet()" label="{resourceManager.getString('button','columnViewSet')}" icon="{CoolAssetsFile.optsetIcon}"/>
		</s:HGroup>
		
		<!-- 预测查询数据 -->
		<mx:TabNavigator width="100%" height="100%" id="tabNav4forecastAdjust" change="tabNav4forecastAdjust_changeHandler(event)" 
						 paddingTop="2" paddingBottom="0" tabOffset="0">
			<s:NavigatorContent label="{resourceManager.getString('menu','forecastAdjust')}" id="tab4forecastAdjust" width="100%" height="100%">
				<s:layout>
					<s:VerticalLayout paddingBottom="0" paddingTop="0" />
				</s:layout>
				<mx:DividedBox width="100%" height="100%">
					<uirowdata:Com_UiRowData_UiRowData_AdvancedDataGrid id="adgEdit" width="100%" height="65%" editable="true" dataProvider="{dp4datagridEdit}"
												sortableColumns="false" columnStretch="datagridEdit_columnStretchHandler(event)"												 
												change="datagridEdit_changeHandler(event)" keyDown="datagridEdit_keyDownHandler(event)" 
												rowColorFunction="calcRowColor" />					
					
					<uirowdata:Com_UiRowData_UiRowData_AdvancedDataGrid id="adgRef" columnStretch="datagridRef_columnStretchHandler(event)" 
												dataProvider="{dp4datagridRef}" editable="true" width="100%" height="35%" allowMultipleSelection="true"/>
					
				</mx:DividedBox>
				<!--  分页控件 -->
				<controls:AksDataGridControlBar id="comAksDataGridControlBar" paramIn4enabled4BtnSetColumns="false" paramIn4callback4thisObject="{this}" paramIn4callback4queryFunction="{prvFun4pageQueryForecastDatas}">
				</controls:AksDataGridControlBar>
			</s:NavigatorContent>
			<s:NavigatorContent label="{resourceManager.getString('menu','adjustComment')}" id="tab4forecastMakeLog" width="100%" height="100%">
				<s:layout>
					<s:VerticalLayout paddingTop="3"/>
				</s:layout>
				<s:VGroup width="100%" paddingLeft="10" paddingRight="10">
					<s:Label text="{resourceManager.getString('note','overallComment')}" verticalAlign="middle"/>
					<s:TextArea width="100%" maxChars="255" id="txtDescription" heightInLines="4" />
					<s:Label text="{resourceManager.getString('note','adjustDetail')}" verticalAlign="middle" />
				</s:VGroup>
				<forecast:Com_Forecast_ForecastMakeLogHfcItem_AdvancedDataGrid id="adgMakeLog" dataProvider="{dp4comAdgForecastMakeLogHfcItem}" 
																			   editable="true" width="100%" height="100%"/>
			</s:NavigatorContent>
		</mx:TabNavigator>
	</s:VGroup>
</mx:Module>
