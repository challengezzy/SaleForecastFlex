<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="800" height="220" close="onCancel()"
			   creationComplete="creationCompleteHandler(event)" xmlns:forecast="dmdd.dmddmx.com.forecast.*">
	<s:layout>
		<s:VerticalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvForecast" destination="ForecastService">
			<s:method name="newForecastRunTask" result="resultHandler4saveForecastRunTask(event)" fault="faultHandler4saveForecastRunTask(event)">
			</s:method>	
		</s:RemoteObject>		
	</fx:Declarations>
	
	<fx:Metadata>
		[ResourceBundle("com_forecast_forecastruntask_au")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import aks.aksas.utils.UtilUi;
			
			import dmdd.dmddas.common.constant.BizConst;
			import dmdd.dmddas.common.system.ClientEnvironment;
			import dmdd.dmddas.common.utils.UtilExceptionLocale;
			import dmdd.dmddas.dataaccess.bizobject.BForecastRunTask;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			//	描述		begin
			//	描述		end
			
			//	0	输入参数    begin		
			private var paramIn4closeCallback4thisObject:Object = null;
			private var paramIn4closeCallback4function:Function = null;
			
			private var paramIo4winUse:int = UtilUi.AUWINDOW_USE_NEW;
			
			[Bindable]
			private var paramIo4forecastRunTask:BForecastRunTask = null;							
			//	0	输入参数    end
			
			//	1	输出参数    begin
			private var paramOut4winCloseWay:int = UtilUi.WINDOW_CLOSEWAY_CANCEL;
			
			//	1	输出参数    end
			
			//	2	本地变量    begin
			//	2	本地变量    end			
			
			//	3	公共方法    begin	
			//	构造函数
			public function pubFun4constructor( _paramIo4forecastRunTask:BForecastRunTask, _paramIo4winUse:int, _paramIn4closeCallback4thisObject:Object, _paramIn4closeCallback4function:Function ):void
			{
				this.pubFun4setParamIo4forecastRunTask( _paramIo4forecastRunTask, _paramIo4winUse );
				this.pubFun4setParamIn4closeCallback( _paramIn4closeCallback4thisObject, _paramIn4closeCallback4function );
			}	
			
			//	关闭回调函数参数													
			public function pubFun4setParamIn4closeCallback( _thisObject:Object, _function:Function ):void
			{
				this.paramIn4closeCallback4thisObject = _thisObject;
				this.paramIn4closeCallback4function = _function;	
			}
			//	关闭方式参数
			public function pubFun4getParamOut4winCloseWay():int
			{
				return this.paramOut4winCloseWay;
			}
			//	关闭窗口
			private function prvFun4close():void
			{
				PopUpManager.removePopUp( this );						
				this.paramIn4closeCallback4function.call( this.paramIn4closeCallback4thisObject );				
			}				
			
			//	界面用途参数
			public function pubFun4getParamIo4winUse():int
			{
				return this.paramIo4winUse;
			}			
			
			
			//	处理对象参数
			/**
			 * _paramIo4forecastRunTask:BForecastRunTask	处理对象
			 * _paramIo4winUse:int	处理动作
			 */ 			
			public function pubFun4setParamIo4forecastRunTask( _paramIo4forecastRunTask:BForecastRunTask, _paramIo4winUse:int ):void
			{
				this.paramIo4forecastRunTask = _paramIo4forecastRunTask;
				this.paramIo4winUse = _paramIo4winUse;
			}
			public function pubFun4getParamIo4forecastRunTask():BForecastRunTask
			{
				return this.paramIo4forecastRunTask;
			}				
			//	3	公共方法    end		
			
			//	4	初始化方法    begin			
			private function creationCompleteHandler(event:FlexEvent):void
			{
				this.x = 100;
				this.y = 50;
			}						
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin						
			private function onSave():void
			{				
				if( this.prvFun4prepare4save() == true )
				{
					UtilUi.pubFun4PopWaitWindow( this );
					if( this.paramIo4winUse == UtilUi.AUWINDOW_USE_NEW )
					{
						this.srvForecast.newForecastRunTask( this.paramIo4forecastRunTask );
					}
//					else if( this.paramIo4winUse == UtilUi.AUWINDOW_USE_UPD )
//					{
//						this.srvForecast.updForecastRunTask( this.paramIo4forecastInst );
//					}
					else
					{
						Alert.show( '意外情形，请联系技术支持人员', '提示' );	
					}
				}
			}			
			
			private function faultHandler4saveForecastRunTask(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('main','alt_title_warn') );
			}	
			
			private function resultHandler4saveForecastRunTask(event:ResultEvent):void 
			{
				this.paramIo4forecastRunTask = BForecastRunTask(event.result);	
				UtilUi.pubFun4RemoveWaitWindow();
				
				this.paramOut4winCloseWay = UtilUi.WINDOW_CLOSEWAY_OK;
				this.prvFun4close();
			}				
			
			private function onCancel():void
			{
				this.paramOut4winCloseWay = UtilUi.WINDOW_CLOSEWAY_CANCEL;
				this.prvFun4close();
			}	
			
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
			private function prvFun4prepare4save():Boolean
			{
				//	基本信息
				if( this.comForecastRunTaskProperties.pubFun4prepare4save() == false )
				{
					return false;
				}
				
				return true;
			}							
			//	6	本地方法   end						


		]]>
	</fx:Script>
	<!--
	<s:controlBarLayout>
		<s:HorizontalLayout horizontalAlign="center">
		</s:HorizontalLayout>
	</s:controlBarLayout>	
	<s:controlBarContent>
		<s:Button label="{resourceManager.getString('com_forecast_forecastruntask_au','btn_ok')}" click="onOk()"/>
		<s:Button label="{resourceManager.getString('com_forecast_forecastruntask_au','btn_cancel')}" click="onCancel()"/>		
	</s:controlBarContent>
-->


	<forecast:Com_Forecast_ForecastRunTask_Properties id="comForecastRunTaskProperties" paramIn4editable="true" paramIo4forecastRunTask="{this.paramIo4forecastRunTask}" width="100%" height="100%"/>
	
	<s:BorderContainer width="100%" height="25" borderColor="#E4ECF7">
		<s:layout>
			<s:HorizontalLayout horizontalAlign="center"/>
		</s:layout>
		<s:Button label="{resourceManager.getString('com_forecast_forecastruntask_au','btn_save')}" click="onSave()"/>
		<s:Button label="{resourceManager.getString('com_forecast_forecastruntask_au','btn_cancel')}" click="onCancel()"/>		
	</s:BorderContainer>
	


	
</s:TitleWindow>
