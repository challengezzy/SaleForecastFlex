<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%" paddingRight="10" paddingLeft="10" paddingTop="10"
		   creationComplete="creationCompleteHandler(event)"  
		   xmlns:containers="aks.aksmx.containers.*" xmlns:controls="aks.aksmx.controls.*" 
		   xmlns:forecast="dmdd.dmddmx.com.forecast.*" xmlns:common="dmdd.dmddmx.com.common.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject endpoint="{ClientEnvironment.endpoint}" id="srvForecast" destination="ForecastService">
			<s:method name="getForecastInstsStat" result="resultHandler4getForecastInstsStat(event)" fault="faultHandler4getForecastInstsStat(event)">
			</s:method>			
			<s:method name="getForecastInstsByHibernate" result="resultHandler4getForecastInsts(event)" fault="faultHandler4getForecastInsts(event)">
			</s:method>		
			<s:method name="getForecastInst" result="resultHandler4getForecastInst(event)" fault="faultHandler4getForecastInst(event)">
			</s:method>
		</s:RemoteObject>		
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("mod_forecast_forecastdata_forecastmodel_create")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import aks.aksas.utils.UtilUi;
			
			import dmdd.dmddas.common.constant.BizConst;
			import dmdd.dmddas.common.system.ClientEnvironment;
			import dmdd.dmddas.common.utils.UtilExceptionLocale;
			import dmdd.dmddas.dataaccess.bizobject.BForecastInst;
			import dmdd.dmddas.dataaccess.bizobject.BForecastRunTask;
			import dmdd.dmddas.dataaccess.bizobject.BForecastRunTaskItem;
			import dmdd.dmddmx.com.forecast.Com_Forecast_ForecastRunTask_AU;
			import dmdd.dmddas.common.constant.SkinConst;
			import com.cool.assets.CoolAssetsFile;

			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			
			//	描述    begin
			//	描述    end
			
			//	0	输入参数    begin						
			//	0	输入参数    end
			
			//	1	输出参数    begin
			//	1	输出参数    end
			
			//	2	本地变量    begin	
			[Bindable]
			private var prvVar4dp4comAdgForecastInst:ArrayCollection = new ArrayCollection();
			
			private var prvVar4sqlRestriction:String = null;
			
			private var prvVar4auWindow:Com_Forecast_ForecastRunTask_AU = null;			
			
			
			[Bindable]
			private var prvVar4blFunPermission4query:Boolean = true;			
			[Bindable]
			private var prvVar4blFunPermission4manage:Boolean = true;
			
			[Bindable]
			private var prvVar4selectedNum:int = -1;
			//	2	本地变量    end			
			
			//	3	公共方法    begin			
			//	3	公共方法    end		
			
			//	4	初始化方法    begin	
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				// todo
				// TODO Auto-generated method stub
				this.prvVar4blFunPermission4query = true;				
				this.prvVar4blFunPermission4manage = true;
			}			
			//	4	初始化方法    end				
			
			//	5	事件响应方法    begin		
			private function callbackFunction4query4comQCond():void
			{				
				this.prvVar4sqlRestriction = this.comQCond.pubFun4getParamOut4sqlRestriction();
				var blPageQuery:Boolean = this.comQCond.pubFun4getParamOut4blPageQuery();
				
				if( blPageQuery == true )
				{	
					UtilUi.pubFun4PopWaitWindow( this );
					this.srvForecast.getForecastInstsStat( this.prvVar4sqlRestriction );	
				}
				else
				{	
					//	不分页查询
					UtilUi.pubFun4PopWaitWindow( this );
					this.srvForecast.getForecastInstsByHibernate( this.prvVar4sqlRestriction, true, -1, ClientEnvironment.getSysParamPageSize() );
				}								
			}			
			
			//	分页查询相关		begin
			private function faultHandler4getForecastInstsStat(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('main','alt_title_warn') );
			}	
			
			private function resultHandler4getForecastInstsStat(event:ResultEvent):void 
			{
				//	初始化数据表格控制板
				var rstSize:Number = Number(event.result);
				this.comAksDataGridControlBar.pubFun4setResultParams( true, rstSize, ClientEnvironment.getSysParamPageSize() );
				
				//	去执行第一页查询
				this.srvForecast.getForecastInstsByHibernate( this.prvVar4sqlRestriction, true, 1, ClientEnvironment.getSysParamPageSize() );
			}
			
			private function prvFun4pageQueryForecastInsts( _pageIndex:int ):void
			{
				UtilUi.pubFun4PopWaitWindow( this );
				this.srvForecast.getForecastInstsByHibernate( this.prvVar4sqlRestriction, true, _pageIndex, ClientEnvironment.getSysParamPageSize() );					
			}			
			//	分页查询相关		end
			
			
			private function faultHandler4getForecastInsts(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('main','alt_title_warn') );
			}	
			
			private function resultHandler4getForecastInsts(event:ResultEvent):void 
			{
				this.prvVar4dp4comAdgForecastInst = ArrayCollection(event.result);
				
				if( this.comQCond.pubFun4getParamOut4blPageQuery() == false )
				{
					//	不是分页查询，需要根据查询结果初始化数据表格控制板
					this.comAksDataGridControlBar.pubFun4setResultParams( false, this.prvVar4dp4comAdgForecastInst.length, this.prvVar4dp4comAdgForecastInst.length );
				}
				
				UtilUi.pubFun4RemoveWaitWindow();
			}					
			
			
			private function onSelectAll():void
			{
				var i:int;
				for( i=0; i<this.prvVar4dp4comAdgForecastInst.length; i=i+1 )
				{
					var forecastInst:BForecastInst = BForecastInst( this.prvVar4dp4comAdgForecastInst.getItemAt(i) );
					forecastInst.isChecked = true;
				}
			}			
			
			private function onDeSelectAll():void
			{
				var i:int;
				for( i=0; i<this.prvVar4dp4comAdgForecastInst.length; i=i+1 )
				{
					var forecastInst:BForecastInst = BForecastInst( this.prvVar4dp4comAdgForecastInst.getItemAt(i) );
					forecastInst.isChecked = false;
				}				
			}							
			
			private function onRun():void
			{		
				var newForecastRunTask:BForecastRunTask = new BForecastRunTask();
				var i:int;
				var forecastInst2run:BForecastInst = null;
				var newForecastRunTaskItem:BForecastRunTaskItem = null;
				var seqNo:int = 0;
				for( i=0; i<this.prvVar4dp4comAdgForecastInst.length; i=i+1 )
				{
					forecastInst2run = BForecastInst( this.prvVar4dp4comAdgForecastInst.getItemAt(i) );
					if( forecastInst2run.isChecked == true )
					{
						newForecastRunTaskItem = new BForecastRunTaskItem();
						newForecastRunTaskItem.setForecastInstInfo( forecastInst2run );
						
						if( this.chkBoxIgnoreErrorThreshold.selected == true )
						{
							newForecastRunTaskItem.isIgnoreErrorThreshold = BizConst.GLOBAL_YESNO_YES;
						}
						else
						{
							newForecastRunTaskItem.isIgnoreErrorThreshold = BizConst.GLOBAL_YESNO_NO;
						}
						seqNo = seqNo + 1
						newForecastRunTaskItem.seqNo = seqNo;
						
						newForecastRunTaskItem.status = BizConst.FORECASTRUNTASKITEM_STATUS_TORUN;
						newForecastRunTaskItem.result = BizConst.FORECASTRUNTASKITEM_RESULT_TORUN;
						newForecastRunTaskItem.resultDetail = null;
						newForecastRunTaskItem.beginTime = null;
						newForecastRunTaskItem.endTime = null;
						
						newForecastRunTask.addForecastRunTaskItem( newForecastRunTaskItem );
					}
				}
				
				var alert_msg_hint:String = resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','alert_title_hint');
				var alert_msg:String = "";				
				
				if( seqNo == 0 )
				{
					//	没有 forecastInst被选中
					alert_msg = resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','alert_msg_noforecastinsttorun');
					Alert.show( alert_msg, alert_msg_hint);		
					return;
				}
				
				//	初始化 ForecastRunTask 基本信息	begin
				newForecastRunTask.compilePeriod = ClientEnvironment.getSysPeriod().compilePeriod;
				newForecastRunTask.creator = ClientEnvironment.getOperatorUser().userName;
				newForecastRunTask.createdTime = new Date( new Date().getTime() + ClientEnvironment.getTimeDifference() );
				newForecastRunTask.status = BizConst.FORECASTRUNTASK_STATUS_RUNNING;
				newForecastRunTask.finishTime = null;
				//	初始化 ForecastRunTask 基本信息	end
				
				//	弹出界面，请用户输入其他信息并确认	begin
				if( this.prvVar4auWindow == null )
				{
					this.prvVar4auWindow = Com_Forecast_ForecastRunTask_AU(PopUpManager.createPopUp(this, Com_Forecast_ForecastRunTask_AU, true));
					this.prvVar4auWindow.pubFun4setParamIn4closeCallback( this, callbackFunction4auWinClose );	
				}
				else
				{
					PopUpManager.addPopUp( this.prvVar4auWindow, this, true );
				}	
				
				this.prvVar4auWindow.title = resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','autitle_new');
				
				this.prvVar4auWindow.pubFun4setParamIo4forecastRunTask( newForecastRunTask, UtilUi.AUWINDOW_USE_NEW );				
				//	弹出界面，请用户输入其他信息并确认	end				
			}
			
			
			private function callbackFunction4auWinClose():void
			{
				if( this.prvVar4auWindow.pubFun4getParamOut4winCloseWay() == UtilUi.WINDOW_CLOSEWAY_OK )
				{
					var alert_msg_hint:String = resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','alert_title_hint');
					var alert_msg:String = "";				
					
					//	提示用户预测任务已经创建并开始运行，请去最新预测任务处查查其运行情况
					alert_msg = resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','alert_msg_forecastruntask_created');
					Alert.show( alert_msg, alert_msg_hint);							
				}
				//this.prvVar4auWindow = null;														
			}	
			
			protected function comAdgForecastInst_changeHandler(event:ListEvent):void
			{
				if(this.comAdgForecastInst.selectedIndex>-1)
				{
					var forecastinst:BForecastInst = BForecastInst(this.comAdgForecastInst.selectedItem);
					this.prvVar4selectedNum = this.comAdgForecastInst.selectedIndex;
					if(forecastinst.isGetDetail == false)
					{
						this.srvForecast.getForecastInst(forecastinst.id);
						UtilUi.pubFun4PopWaitWindow(this);
					}
				}
			}
			
			
			private function faultHandler4getForecastInst(event:FaultEvent):void
			{
				UtilUi.pubFun4RemoveWaitWindow();
				Alert.show( UtilExceptionLocale.getExceptionMessageLocaleByFaultEvent( event ), resourceManager.getString('main','alt_title_warn') );
			}	
			
			private function resultHandler4getForecastInst(event:ResultEvent):void 
			{
				UtilUi.pubFun4RemoveWaitWindow();
				var selectedForecastInst:BForecastInst = BForecastInst(event.result);
				selectedForecastInst.isGetDetail = true;
				this.prvVar4dp4comAdgForecastInst.removeItemAt(this.prvVar4selectedNum);
				this.prvVar4dp4comAdgForecastInst.addItemAt(selectedForecastInst,this.prvVar4selectedNum);
				this.comAdgForecastInst.selectedItem = selectedForecastInst;
			}
			//	5	事件响应方法    end
			
			//	6	本地方法    begin
			//	6	本地方法   end	
			

			

		]]>
	</fx:Script>

	<forecast:Com_Forecast_ForecastInst_QueryCond width="100%" id="comQCond" paramIn4queryCallback4thisObject="{this}" paramIn4queryCallback4function="{this.callbackFunction4query4comQCond}" paramIn4enabled="{this.prvVar4blFunPermission4query}">
	</forecast:Com_Forecast_ForecastInst_QueryCond>	
	<mx:VDividedBox width="100%" height="100%">
		
		<mx:VBox width="100%" height="100%">
			<common:LabelBoundary paddingTop="5" labelText="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','forecastinstlist')}" />
				<containers:AksControlBar>
					<s:Button label="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','btn_selectall')}"   	click="onSelectAll()"/>									
					<s:Button label="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','btn_deselectall')}"  click="onDeSelectAll()"/>
					<mx:Spacer width="20"/>
					<s:CheckBox id="chkBoxIgnoreErrorThreshold" label="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','chkbox_ignoreerrorthreshold')}"/>
					<s:Button label="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','btn_run')}"  	icon="{CoolAssetsFile.startIcon}"	click="onRun()"/>
					<controls:AksDataGridControlBar id="comAksDataGridControlBar" width="100%" paramIn4callback4thisObject="{this}" paramIn4callback4queryFunction="{this.prvFun4pageQueryForecastInsts}" paramIn4dataGrid="{this.comAdgForecastInst}">
					</controls:AksDataGridControlBar>			
				</containers:AksControlBar>
				
				<forecast:Com_Forecast_ForecastInst_AdvancedDataGrid id="comAdgForecastInst" dataProvider="{this.prvVar4dp4comAdgForecastInst}" paramIn4visible4IsCheckedColumn="true" editable="true" width="100%" height="100%" />			
		</mx:VBox>	
		
		<mx:VBox width="100%" height="100%">
			<common:LabelBoundary paddingTop="5" labelText="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','forecastinstdetail')}" />
			
			<mx:TabNavigator width="100%" height="100%">
				<s:NavigatorContent label="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','forecastinst')}" width="100%" height="100%">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<forecast:Com_Forecast_ForecastInst_Properties paramIn4editable="false" paramIo4forecastInst="{BForecastInst(this.comAdgForecastInst.selectedItem)}" width="100%" height="100%">
					</forecast:Com_Forecast_ForecastInst_Properties>
				</s:NavigatorContent>
				<s:NavigatorContent label="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','forecastinst_proorg')}" width="100%" height="100%">
					<s:layout>
						<s:HorizontalLayout/>
					</s:layout>
					<s:Panel width="50%" height="100%" title="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','forecastinst_currproorg')}">
						<s:layout>
							<s:VerticalLayout/>
						</s:layout>
						<forecast:Com_Forecast_ForecastInstProOrg_AdvancedDataGrid id="comAdgForecastInstProOrg" dataProvider="{BForecastInst(this.comAdgForecastInst.selectedItem).forecastInstProOrgs}" width="100%" height="100%"/>
					</s:Panel>
					<s:Panel width="50%" height="100%" title="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','forecastinst_nextproorg')}">
						<s:layout>
							<s:VerticalLayout/>
						</s:layout>
						<forecast:Com_Forecast_ForecastInstNextProOrg_AdvancedDataGrid id="comAdgForecastInstNextProOrg" dataProvider="{BForecastInst(this.comAdgForecastInst.selectedItem).forecastInstNextProOrgs}" width="100%" height="100%"/>
					</s:Panel>
				</s:NavigatorContent>		
				
				<s:NavigatorContent label="{resourceManager.getString('mod_forecast_forecastdata_forecastmodel_create','forecastinst_mappingfcmodel')}" width="100%" height="100%">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<forecast:Com_Forecast_ForecastModelM_Properties id="comForecastModelMProperties" paramIn4blShowBaseInfo="true" paramIn4editable="false" paramIo4forecastModelM="{BForecastInst(this.comAdgForecastInst.selectedItem).mappingFcModel}" width="100%" height="100%"/>
					
				</s:NavigatorContent>
			</mx:TabNavigator>			
		</mx:VBox>	
		
	</mx:VDividedBox>	
	
	
</mx:Module>
